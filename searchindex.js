Search.setIndex({"docnames": ["api_documentation/hippynn", "api_documentation/hippynn.custom_kernels", "api_documentation/hippynn.custom_kernels.autograd_wrapper", "api_documentation/hippynn.custom_kernels.env_cupy", "api_documentation/hippynn.custom_kernels.env_numba", "api_documentation/hippynn.custom_kernels.env_pytorch", "api_documentation/hippynn.custom_kernels.fast_convert", "api_documentation/hippynn.custom_kernels.tensor_wrapper", "api_documentation/hippynn.custom_kernels.test_env_cupy", "api_documentation/hippynn.custom_kernels.test_env_numba", "api_documentation/hippynn.custom_kernels.utils", "api_documentation/hippynn.databases", "api_documentation/hippynn.databases.SNAPJson", "api_documentation/hippynn.databases.database", "api_documentation/hippynn.databases.h5_pyanitools", "api_documentation/hippynn.databases.ondisk", "api_documentation/hippynn.databases.restarter", "api_documentation/hippynn.experiment", "api_documentation/hippynn.experiment.assembly", "api_documentation/hippynn.experiment.controllers", "api_documentation/hippynn.experiment.device", "api_documentation/hippynn.experiment.evaluator", "api_documentation/hippynn.experiment.metric_tracker", "api_documentation/hippynn.experiment.routines", "api_documentation/hippynn.experiment.serialization", "api_documentation/hippynn.experiment.step_functions", "api_documentation/hippynn.graphs", "api_documentation/hippynn.graphs.gops", "api_documentation/hippynn.graphs.graph", "api_documentation/hippynn.graphs.indextransformers", "api_documentation/hippynn.graphs.indextransformers.atoms", "api_documentation/hippynn.graphs.indextransformers.pairs", "api_documentation/hippynn.graphs.indextransformers.tensors", "api_documentation/hippynn.graphs.indextypes", "api_documentation/hippynn.graphs.indextypes.reduce_funcs", "api_documentation/hippynn.graphs.indextypes.registry", "api_documentation/hippynn.graphs.indextypes.type_def", "api_documentation/hippynn.graphs.nodes", "api_documentation/hippynn.graphs.nodes.base", "api_documentation/hippynn.graphs.nodes.base.algebra", "api_documentation/hippynn.graphs.nodes.base.base", "api_documentation/hippynn.graphs.nodes.base.definition_helpers", "api_documentation/hippynn.graphs.nodes.base.multi", "api_documentation/hippynn.graphs.nodes.base.node_functions", "api_documentation/hippynn.graphs.nodes.excited", "api_documentation/hippynn.graphs.nodes.indexers", "api_documentation/hippynn.graphs.nodes.inputs", "api_documentation/hippynn.graphs.nodes.loss", "api_documentation/hippynn.graphs.nodes.misc", "api_documentation/hippynn.graphs.nodes.networks", "api_documentation/hippynn.graphs.nodes.pairs", "api_documentation/hippynn.graphs.nodes.physics", "api_documentation/hippynn.graphs.nodes.tags", "api_documentation/hippynn.graphs.nodes.targets", "api_documentation/hippynn.graphs.predictor", "api_documentation/hippynn.graphs.viz", "api_documentation/hippynn.interfaces", "api_documentation/hippynn.interfaces.ase_interface", "api_documentation/hippynn.interfaces.ase_interface.ase_database", "api_documentation/hippynn.interfaces.ase_interface.ase_unittests", "api_documentation/hippynn.interfaces.ase_interface.calculator", "api_documentation/hippynn.interfaces.ase_interface.pairfinder", "api_documentation/hippynn.interfaces.lammps_interface", "api_documentation/hippynn.interfaces.lammps_interface.mliap_interface", "api_documentation/hippynn.interfaces.pyseqm_interface", "api_documentation/hippynn.interfaces.pyseqm_interface.callback", "api_documentation/hippynn.interfaces.pyseqm_interface.check", "api_documentation/hippynn.interfaces.pyseqm_interface.gen_par", "api_documentation/hippynn.interfaces.pyseqm_interface.mlseqm", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_modules", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_nodes", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_one", "api_documentation/hippynn.interfaces.schnetpack_interface", "api_documentation/hippynn.layers", "api_documentation/hippynn.layers.algebra", "api_documentation/hippynn.layers.excited", "api_documentation/hippynn.layers.hiplayers", "api_documentation/hippynn.layers.indexers", "api_documentation/hippynn.layers.pairs", "api_documentation/hippynn.layers.pairs.analysis", "api_documentation/hippynn.layers.pairs.dispatch", "api_documentation/hippynn.layers.pairs.filters", "api_documentation/hippynn.layers.pairs.indexing", "api_documentation/hippynn.layers.pairs.open", "api_documentation/hippynn.layers.pairs.periodic", "api_documentation/hippynn.layers.physics", "api_documentation/hippynn.layers.regularization", "api_documentation/hippynn.layers.targets", "api_documentation/hippynn.layers.transform", "api_documentation/hippynn.networks", "api_documentation/hippynn.networks.hipnn", "api_documentation/hippynn.plotting", "api_documentation/hippynn.plotting.plotmaker", "api_documentation/hippynn.plotting.plotters", "api_documentation/hippynn.plotting.timeplots", "api_documentation/hippynn.pretraining", "api_documentation/hippynn.tools", "api_documentation/modules", "examples/ase_calculator", "examples/controller", "examples/excited_states", "examples/forces", "examples/index", "examples/minimal_workflow", "examples/mliap_unified", "examples/periodic", "examples/plotting", "examples/predictor", "examples/restarting", "index", "installation", "license", "user_guide/ckernels", "user_guide/concepts", "user_guide/custom_nodes", "user_guide/databases", "user_guide/features", "user_guide/index", "user_guide/loss_graph", "user_guide/settings", "user_guide/units"], "filenames": ["api_documentation/hippynn.rst", "api_documentation/hippynn.custom_kernels.rst", "api_documentation/hippynn.custom_kernels.autograd_wrapper.rst", "api_documentation/hippynn.custom_kernels.env_cupy.rst", "api_documentation/hippynn.custom_kernels.env_numba.rst", "api_documentation/hippynn.custom_kernels.env_pytorch.rst", "api_documentation/hippynn.custom_kernels.fast_convert.rst", "api_documentation/hippynn.custom_kernels.tensor_wrapper.rst", "api_documentation/hippynn.custom_kernels.test_env_cupy.rst", "api_documentation/hippynn.custom_kernels.test_env_numba.rst", "api_documentation/hippynn.custom_kernels.utils.rst", "api_documentation/hippynn.databases.rst", "api_documentation/hippynn.databases.SNAPJson.rst", "api_documentation/hippynn.databases.database.rst", "api_documentation/hippynn.databases.h5_pyanitools.rst", "api_documentation/hippynn.databases.ondisk.rst", "api_documentation/hippynn.databases.restarter.rst", "api_documentation/hippynn.experiment.rst", "api_documentation/hippynn.experiment.assembly.rst", "api_documentation/hippynn.experiment.controllers.rst", "api_documentation/hippynn.experiment.device.rst", "api_documentation/hippynn.experiment.evaluator.rst", "api_documentation/hippynn.experiment.metric_tracker.rst", "api_documentation/hippynn.experiment.routines.rst", "api_documentation/hippynn.experiment.serialization.rst", "api_documentation/hippynn.experiment.step_functions.rst", "api_documentation/hippynn.graphs.rst", "api_documentation/hippynn.graphs.gops.rst", "api_documentation/hippynn.graphs.graph.rst", "api_documentation/hippynn.graphs.indextransformers.rst", "api_documentation/hippynn.graphs.indextransformers.atoms.rst", "api_documentation/hippynn.graphs.indextransformers.pairs.rst", "api_documentation/hippynn.graphs.indextransformers.tensors.rst", "api_documentation/hippynn.graphs.indextypes.rst", "api_documentation/hippynn.graphs.indextypes.reduce_funcs.rst", "api_documentation/hippynn.graphs.indextypes.registry.rst", "api_documentation/hippynn.graphs.indextypes.type_def.rst", "api_documentation/hippynn.graphs.nodes.rst", "api_documentation/hippynn.graphs.nodes.base.rst", "api_documentation/hippynn.graphs.nodes.base.algebra.rst", "api_documentation/hippynn.graphs.nodes.base.base.rst", "api_documentation/hippynn.graphs.nodes.base.definition_helpers.rst", "api_documentation/hippynn.graphs.nodes.base.multi.rst", "api_documentation/hippynn.graphs.nodes.base.node_functions.rst", "api_documentation/hippynn.graphs.nodes.excited.rst", "api_documentation/hippynn.graphs.nodes.indexers.rst", "api_documentation/hippynn.graphs.nodes.inputs.rst", "api_documentation/hippynn.graphs.nodes.loss.rst", "api_documentation/hippynn.graphs.nodes.misc.rst", "api_documentation/hippynn.graphs.nodes.networks.rst", "api_documentation/hippynn.graphs.nodes.pairs.rst", "api_documentation/hippynn.graphs.nodes.physics.rst", "api_documentation/hippynn.graphs.nodes.tags.rst", "api_documentation/hippynn.graphs.nodes.targets.rst", "api_documentation/hippynn.graphs.predictor.rst", "api_documentation/hippynn.graphs.viz.rst", "api_documentation/hippynn.interfaces.rst", "api_documentation/hippynn.interfaces.ase_interface.rst", "api_documentation/hippynn.interfaces.ase_interface.ase_database.rst", "api_documentation/hippynn.interfaces.ase_interface.ase_unittests.rst", "api_documentation/hippynn.interfaces.ase_interface.calculator.rst", "api_documentation/hippynn.interfaces.ase_interface.pairfinder.rst", "api_documentation/hippynn.interfaces.lammps_interface.rst", "api_documentation/hippynn.interfaces.lammps_interface.mliap_interface.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.callback.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.check.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.gen_par.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.mlseqm.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_modules.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_nodes.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_one.rst", "api_documentation/hippynn.interfaces.schnetpack_interface.rst", "api_documentation/hippynn.layers.rst", "api_documentation/hippynn.layers.algebra.rst", "api_documentation/hippynn.layers.excited.rst", "api_documentation/hippynn.layers.hiplayers.rst", "api_documentation/hippynn.layers.indexers.rst", "api_documentation/hippynn.layers.pairs.rst", "api_documentation/hippynn.layers.pairs.analysis.rst", "api_documentation/hippynn.layers.pairs.dispatch.rst", "api_documentation/hippynn.layers.pairs.filters.rst", "api_documentation/hippynn.layers.pairs.indexing.rst", "api_documentation/hippynn.layers.pairs.open.rst", "api_documentation/hippynn.layers.pairs.periodic.rst", "api_documentation/hippynn.layers.physics.rst", "api_documentation/hippynn.layers.regularization.rst", "api_documentation/hippynn.layers.targets.rst", "api_documentation/hippynn.layers.transform.rst", "api_documentation/hippynn.networks.rst", "api_documentation/hippynn.networks.hipnn.rst", "api_documentation/hippynn.plotting.rst", "api_documentation/hippynn.plotting.plotmaker.rst", "api_documentation/hippynn.plotting.plotters.rst", "api_documentation/hippynn.plotting.timeplots.rst", "api_documentation/hippynn.pretraining.rst", "api_documentation/hippynn.tools.rst", "api_documentation/modules.rst", "examples/ase_calculator.rst", "examples/controller.rst", "examples/excited_states.rst", "examples/forces.rst", "examples/index.rst", "examples/minimal_workflow.rst", "examples/mliap_unified.rst", "examples/periodic.rst", "examples/plotting.rst", "examples/predictor.rst", "examples/restarting.rst", "index.rst", "installation.rst", "license.rst", "user_guide/ckernels.rst", "user_guide/concepts.rst", "user_guide/custom_nodes.rst", "user_guide/databases.rst", "user_guide/features.rst", "user_guide/index.rst", "user_guide/loss_graph.rst", "user_guide/settings.rst", "user_guide/units.rst"], "titles": ["hippynn package", "custom_kernels package", "autograd_wrapper module", "env_cupy module", "env_numba module", "env_pytorch module", "fast_convert module", "tensor_wrapper module", "test_env_cupy module", "test_env_numba module", "utils module", "databases package", "SNAPJson module", "database module", "h5_pyanitools module", "ondisk module", "restarter module", "experiment package", "assembly module", "controllers module", "device module", "evaluator module", "metric_tracker module", "routines module", "serialization module", "step_functions module", "graphs package", "gops module", "graph module", "indextransformers package", "atoms module", "pairs module", "tensors module", "indextypes package", "reduce_funcs module", "registry module", "type_def module", "nodes package", "base package", "algebra module", "base module", "definition_helpers module", "multi module", "node_functions module", "excited module", "indexers module", "inputs module", "loss module", "misc module", "networks module", "pairs module", "physics module", "tags module", "targets module", "predictor module", "viz module", "interfaces package", "ase_interface package", "ase_database module", "ase_unittests module", "calculator module", "pairfinder module", "lammps_interface package", "mliap_interface module", "pyseqm_interface package", "callback module", "check module", "gen_par module", "mlseqm module", "seqm_modules module", "seqm_nodes module", "seqm_one module", "schnetpack_interface package", "layers package", "algebra module", "excited module", "hiplayers module", "indexers module", "pairs package", "analysis module", "dispatch module", "filters module", "indexing module", "open module", "periodic module", "physics module", "regularization module", "targets module", "transform module", "networks package", "hipnn module", "plotting package", "plotmaker module", "plotters module", "timeplots module", "pretraining module", "tools module", "hippynn", "ASE Calculators", "Controller", "Non-Adiabiatic Excited States", "Force Training", "Examples", "Minimal Workflow", "LAMMPS interface", "Periodic Boundary Conditions", "Plotting", "Predictor", "Restarting training", "Welcome to hippynn\u2019s documentation!", "Installation", "License", "Custom Kernels", "hippynn Concepts", "Creating Custom Node Types", "Databases", "hippynn Features", "User Guide", "Model and Loss Graphs", "Library Settings", "Units in hippynn"], "terms": {"document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 111, 114, 116], "subpackag": [0, 26, 37, 56, 73, 112, 113], "custom_kernel": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 97, 112], "set_custom_kernel": [0, 1, 97, 112, 119], "autograd_wrapp": [0, 1, 97], "modul": [0, 1, 11, 17, 26, 29, 33, 37, 38, 56, 57, 62, 64, 73, 78, 89, 91, 97, 103, 105, 108, 109, 113, 114, 116, 119], "wrap_envop": [0, 1, 2, 97], "env_cupi": [0, 1, 97], "cupyenvsum": [0, 1, 3, 97], "cupyfeatsum": [0, 1, 3, 97], "cupygpukernel": [0, 1, 3, 97], "__init__": [0, 1, 3, 7, 9, 26, 37, 38, 39, 40, 41, 42, 45, 46, 49, 50, 53, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 114], "cupysensesum": [0, 1, 3, 97], "env_numba": [0, 1, 97], "wrappedenvsum": [0, 1, 3, 4, 97], "cpu_kernel": [0, 1, 4, 7, 97], "launch_bound": [0, 1, 4, 7, 97], "make_kernel": [0, 1, 4, 7, 97], "out_shap": [0, 1, 4, 7, 97], "wrappedfeatsum": [0, 1, 3, 4, 97], "wrappedsensesum": [0, 1, 3, 4, 97], "env_pytorch": [0, 1, 97], "envsum": [0, 1, 2, 3, 4, 5, 97, 112], "featsum": [0, 1, 2, 5, 97, 112], "sensesum": [0, 1, 2, 5, 97], "fast_convert": [0, 1, 97], "batch_convert_torch_to_numba": [0, 1, 6, 97], "tensor_wrapp": [0, 1, 97], "numbacompatibletensorfunct": [0, 1, 4, 7, 97], "via_numpi": [0, 1, 7, 97], "test_env_cupi": [0, 1, 97], "test_env_numba": [0, 1, 97], "envops_test": [0, 1, 9, 97], "all_close_witherror": [0, 1, 9, 97], "check_all_grad": [0, 1, 9, 97], "check_all_grad_onc": [0, 1, 9, 97], "check_allclos": [0, 1, 9, 97], "check_allclose_onc": [0, 1, 9, 97], "check_correct": [0, 1, 9, 97], "check_empti": [0, 1, 9, 97], "check_grad_and_gradgrad": [0, 1, 9, 97], "check_spe": [0, 1, 9, 97], "timedsnippet": [0, 1, 9, 97], "elaps": [0, 1, 9, 97], "timerhold": [0, 1, 9, 97], "add": [0, 1, 7, 9, 39, 97, 103, 114], "mean_elaps": [0, 1, 9, 97], "median_elaps": [0, 1, 9, 97], "get_simulated_data": [0, 1, 9, 97], "main": [0, 1, 9, 41, 49, 50, 90, 97, 103, 114], "util": [0, 1, 97, 112], "resort_pairs_cach": [0, 1, 10, 97], "databas": [0, 12, 14, 15, 16, 33, 34, 39, 40, 42, 46, 90, 97, 99, 100, 103, 105, 107, 108, 116, 117, 118, 120], "snapjson": [0, 11, 97], "h5_pyanitool": [0, 11, 97], "ondisk": [0, 11, 97], "restart": [0, 11, 97, 102, 115], "experi": [0, 18, 19, 20, 21, 22, 23, 24, 25, 50, 97, 99, 103, 105, 106, 108, 117], "assembli": [0, 17, 50, 97, 105], "control": [0, 17, 97, 102, 108], "devic": [0, 9, 17, 97, 99, 104], "evalu": [0, 17, 85, 97, 103, 105, 106, 108, 116, 118, 119], "metric_track": [0, 17, 97], "routin": [0, 17, 97], "serial": [0, 17, 97, 105, 108], "step_funct": [0, 17, 97], "graph": [0, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 97, 103, 107, 110, 114, 117, 119, 120], "indextransform": [0, 26, 30, 31, 32, 35, 97], "atom": [0, 9, 26, 29, 33, 36, 45, 49, 53, 75, 77, 82, 85, 87, 90, 97, 98, 100, 103, 104, 105, 112, 113, 114, 115, 118, 119], "pair": [0, 9, 26, 29, 33, 36, 37, 45, 53, 73, 77, 79, 80, 81, 82, 83, 84, 85, 97, 112, 113, 115], "tensor": [0, 6, 26, 29, 33, 42, 75, 81, 85, 87, 97, 105, 107, 108, 113, 114, 116], "indextyp": [0, 26, 34, 35, 36, 97, 116], "idxtyp": [0, 26, 33, 34, 35, 36, 49, 50, 97, 113, 114], "molatom": [0, 26, 33, 36, 45, 50, 97], "molatomatom": [0, 26, 33, 36, 50, 97], "molecul": [0, 9, 26, 33, 36, 75, 77, 85, 87, 97, 107, 113, 114], "notfound": [0, 26, 33, 36, 97], "quadmol": [0, 26, 33, 36, 97], "quadpack": [0, 26, 33, 36, 73, 77, 97], "scalar": [0, 26, 33, 36, 45, 53, 77, 87, 97, 114], "clear_index_cach": [0, 26, 33, 35, 97], "db_form": [0, 26, 33, 34, 97], "elementwise_compare_reduc": [0, 26, 33, 34, 97], "get_reduced_index_st": [0, 26, 33, 34, 97], "index_type_coercion": [0, 26, 33, 34, 97, 114], "register_index_transform": [0, 26, 33, 35, 97], "soft_index_type_coercion": [0, 26, 33, 34, 97], "reduce_func": [0, 26, 33, 97], "db_state_of": [0, 26, 33, 34, 97], "dispatch_index": [0, 26, 33, 34, 97], "registri": [0, 26, 33, 97], "type_def": [0, 26, 33, 97], "node": [0, 26, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 80, 85, 97, 98, 100, 101, 103, 104, 105, 106, 107, 115, 116, 117, 118, 120], "base": [0, 3, 4, 7, 9, 26, 33, 36, 37, 39, 41, 42, 43, 45, 46, 49, 50, 52, 53, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 97, 98, 100, 104, 107, 113, 114, 116], "algebra": [0, 26, 37, 38, 73, 97, 103], "addnod": [0, 26, 37, 38, 39], "atleast2d": [0, 26, 37, 38, 39, 73, 74, 97], "binnod": [0, 26, 37, 38, 39], "divnod": [0, 26, 37, 38, 39], "invnod": [0, 26, 37, 38, 39], "mulnod": [0, 26, 37, 38, 39], "negnod": [0, 26, 37, 38, 39], "pownod": [0, 26, 37, 38, 39], "subnod": [0, 26, 37, 38, 39], "unarynod": [0, 26, 37, 38, 39], "valuenod": [0, 26, 37, 38, 39], "coerces_values_to_nod": [0, 26, 37, 38, 39], "wrap_as_nod": [0, 26, 37, 38, 39], "inputnod": [0, 26, 37, 38, 40, 46], "lossinputnod": [0, 26, 37, 38, 40], "lossprednod": [0, 26, 37, 38, 40], "losstruenod": [0, 26, 37, 38, 40], "singlenod": [0, 26, 37, 38, 40, 42, 45, 49, 50, 113, 114], "definition_help": [0, 26, 37, 38, 97, 114], "alwaysmatch": [0, 26, 37, 38, 41], "autokw": [0, 26, 37, 38, 41, 45, 49, 50, 53, 114], "autonokw": [0, 26, 37, 38, 41, 45, 50, 114], "expandparentmeta": [0, 26, 37, 38, 41], "expandpar": [0, 26, 37, 38, 41, 45, 49, 50, 53, 114], "formassertlength": [0, 26, 37, 38, 41], "formassert": [0, 26, 37, 38, 41], "formhandl": [0, 26, 37, 38, 41], "formtransform": [0, 26, 37, 38, 41], "indexformtransform": [0, 26, 37, 38, 41], "mainoutputtransform": [0, 26, 37, 38, 41], "parentexpand": [0, 26, 37, 38, 41, 114], "tupletypemismatch": [0, 26, 37, 38, 41], "adds_to_form": [0, 26, 37, 38, 41], "format_form_nam": [0, 26, 37, 38, 41], "temporary_par": [0, 26, 37, 38, 41], "multi": [0, 26, 37, 38, 74, 97, 100], "indexnod": [0, 26, 37, 38, 42], "multinod": [0, 26, 33, 34, 37, 38, 41, 42, 45, 49, 50, 53, 103, 113, 117], "node_funct": [0, 26, 37, 38, 97], "nodeambiguityerror": [0, 26, 37, 38, 43], "nodenotfound": [0, 26, 37, 38, 43], "nodeoperationerror": [0, 26, 37, 38, 43], "find_rel": [0, 26, 37, 38, 41, 43], "find_unique_rel": [0, 26, 37, 38, 41, 43, 114], "get_connected_nod": [0, 26, 37, 38, 43], "excit": [0, 26, 37, 73, 97, 102], "index": [0, 26, 33, 34, 35, 36, 37, 41, 42, 46, 49, 50, 73, 74, 78, 85, 87, 97, 105, 109, 113, 114], "atomdeindex": [0, 26, 37, 45, 73, 77, 97], "expand0": [0, 26, 37, 45, 50, 53], "atomreindex": [0, 26, 37, 45, 73, 77, 97], "expand1": [0, 26, 37, 45, 50, 53], "filterbondsonewai": [0, 26, 37, 45, 73, 77, 97], "fuzzyhistogramm": [0, 26, 37, 45, 97], "onehotencod": [0, 26, 37, 45, 50, 97], "auto_modul": [0, 26, 37, 38, 39, 41, 45, 50], "paddingindex": [0, 26, 37, 45, 50, 73, 77, 97], "quadunpacknod": [0, 26, 37, 45, 97], "sysmaxofatomsnod": [0, 26, 37, 45, 97], "expansion0": [0, 26, 37, 45, 49, 53, 114], "expansion1": [0, 26, 37, 45, 49, 114], "acquire_encoding_pad": [0, 26, 37, 45, 97, 105, 114], "input": [0, 26, 33, 34, 37, 39, 40, 42, 43, 76, 88, 90, 97, 100, 103, 104, 105, 107, 112, 114, 115, 120], "cellnod": [0, 26, 37, 46, 49, 50, 97, 105], "input_type_str": [0, 26, 37, 38, 40, 46], "forcenod": [0, 26, 37, 46, 97], "indic": [0, 26, 37, 46, 50, 80, 83, 84, 97, 105, 119], "inputcharg": [0, 26, 37, 46, 97], "pairindic": [0, 26, 37, 46, 97], "positionsnod": [0, 26, 37, 46, 49, 50, 97, 103, 105, 114, 120], "speciesnod": [0, 26, 37, 46, 49, 50, 97, 103, 105, 120], "splitindic": [0, 26, 37, 46, 97], "loss": [0, 26, 33, 34, 37, 40, 97, 100, 101, 103, 108, 111, 116, 117, 119, 120], "misc": [0, 26, 37, 97], "network": [0, 26, 37, 52, 53, 86, 90, 97, 100, 103, 105, 114, 117, 120], "defaultnetworkexpans": [0, 26, 37, 49, 97], "hipnn": [0, 9, 26, 37, 49, 76, 77, 85, 89, 97, 103, 105, 120], "expansion2": [0, 26, 37, 49, 114], "hipnnquad": [0, 26, 37, 49, 89, 90, 97], "hipnnvec": [0, 26, 37, 49, 89, 90, 97], "dynamicperiodicpair": [0, 26, 37, 50, 97, 105], "externalneighborindex": [0, 26, 37, 50, 97], "kdtreepair": [0, 26, 37, 50, 80, 97, 105], "kdtreepairsmemori": [0, 26, 37, 50, 73, 78, 80, 97, 105], "memori": [0, 1, 26, 37, 50, 80, 84, 97, 107, 112, 116], "reset_reuse_percentag": [0, 26, 37, 50, 73, 78, 83], "reuse_percentag": [0, 26, 37, 50, 73, 78, 83], "skin": [0, 26, 37, 50, 73, 78, 80, 83, 84, 105], "mindistnod": [0, 26, 37, 50, 97], "expand2": [0, 26, 37, 50], "numpydynamicpair": [0, 26, 37, 50, 97], "openpairindex": [0, 26, 37, 50, 73, 78, 83, 97], "paddedneighbornod": [0, 26, 37, 50, 97], "paircach": [0, 26, 37, 46, 50, 52, 73, 78, 82, 97], "pairdeindex": [0, 26, 37, 50, 73, 78, 82, 97], "pairfilt": [0, 26, 37, 50, 97], "pairreindex": [0, 26, 37, 50, 73, 78, 82, 97], "pairuncach": [0, 26, 37, 50, 73, 78, 82, 97], "periodicpairindex": [0, 26, 37, 50, 73, 78, 84, 97, 105], "periodicpairindexermemori": [0, 26, 37, 50, 73, 78, 84, 97, 105], "periodicpairoutput": [0, 26, 37, 50, 97], "rdfbin": [0, 26, 37, 50, 73, 78, 79, 97], "expand3": [0, 26, 37, 50], "physic": [0, 26, 37, 73, 75, 97, 100, 101, 103, 108, 116, 118], "tag": [0, 26, 37, 97, 114], "atomindex": [0, 26, 37, 45, 49, 50, 52, 97, 114], "charg": [0, 26, 37, 46, 52, 53, 75, 85, 87, 97, 98, 100, 114, 115, 116, 120], "encod": [0, 26, 37, 45, 49, 50, 52, 77, 90, 97], "species_set": [0, 26, 37, 45, 49, 52, 77, 79, 105, 114], "energi": [0, 26, 37, 52, 53, 75, 85, 87, 90, 97, 98, 100, 103, 104, 107, 111, 114, 116, 118], "hatomregressor": [0, 26, 37, 52, 53, 97, 114], "pairindex": [0, 26, 37, 49, 50, 52, 81, 97], "posit": [0, 26, 37, 46, 52, 75, 80, 81, 85, 87, 97, 100, 101, 103, 105, 107, 114, 115, 120], "speci": [0, 26, 37, 45, 46, 49, 52, 77, 85, 90, 97, 103, 104, 105, 107, 115, 118, 120], "target": [0, 26, 37, 39, 40, 42, 46, 73, 97, 100, 103, 114, 120], "hbondnod": [0, 26, 37, 53, 97], "hchargenod": [0, 26, 37, 53, 97, 100, 120], "henergynod": [0, 26, 37, 53, 97, 100, 103, 114], "localchargeenergi": [0, 26, 37, 53, 73, 87, 97], "gop": [0, 26, 97], "predictor": [0, 26, 97, 102, 103, 108], "viz": [0, 26, 97], "interfac": [0, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 97, 98, 102, 105, 110, 115, 117], "ase_interfac": [0, 56, 58, 59, 60, 61, 97, 98], "ase_databas": [0, 56, 57, 97], "ase_unittest": [0, 56, 57, 97], "calcul": [0, 50, 56, 57, 80, 83, 84, 97, 100, 102, 103, 104, 113, 116, 118], "pairfind": [0, 49, 53, 56, 57, 97, 105], "lammps_interfac": [0, 56, 63, 97], "mliap_interfac": [0, 56, 62, 97], "pyseqm_interfac": [0, 56, 65, 66, 67, 68, 69, 70, 71, 97], "callback": [0, 56, 64, 97, 108, 116], "check": [0, 56, 64, 97, 103, 108, 119], "gen_par": [0, 56, 64, 97], "mlseqm": [0, 56, 64, 97], "seqm_modul": [0, 56, 64, 97], "seqm_nod": [0, 56, 64, 97], "seqm_on": [0, 56, 64, 97], "schnetpack_interfac": [0, 56, 97], "layer": [0, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 97, 103, 112, 114, 117], "analysi": [0, 73, 78, 97], "mindistmodul": [0, 73, 78, 79, 97], "forward": [0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 112], "train": [0, 50, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 99, 100, 102, 103, 104, 105, 106, 107, 113, 115, 117, 118, 119, 120], "bin_info": [0, 73, 78, 79], "min_dist_info": [0, 73, 78, 79, 97], "dispatch": [0, 33, 35, 73, 78, 97], "kdtreeneighbor": [0, 73, 78, 80, 97], "compute_on": [0, 73, 78, 80], "npneighbor": [0, 73, 78, 80, 97], "torchneighbor": [0, 73, 78, 80, 97], "neighbor_list_kdtre": [0, 73, 78, 80, 97], "neighbor_list_np": [0, 73, 78, 80, 97], "wrap_points_np": [0, 73, 78, 80, 97], "filter": [0, 43, 45, 73, 78, 97], "filterdist": [0, 73, 78, 81, 97], "externalneighbor": [0, 73, 78, 82, 97], "molpairsumm": [0, 73, 78, 82, 97], "paddedneighmodul": [0, 73, 78, 82, 97], "set_imag": [0, 73, 78, 82], "padded_neighlist": [0, 73, 78, 82, 97], "open": [0, 50, 73, 78, 97, 105, 111, 115], "pairmemori": [0, 73, 78, 80, 83, 84, 97], "initialize_buff": [0, 73, 78, 83], "recalculation_need": [0, 73, 78, 83], "set_skin": [0, 73, 78, 83], "period": [0, 49, 50, 73, 78, 80, 97, 102, 115, 116], "staticimageperiodicpairindex": [0, 73, 78, 84, 97], "idx": [0, 73, 74, 97], "extra_repr": [0, 73, 74, 97], "lambdamodul": [0, 39, 73, 74, 97], "listmod": [0, 73, 74, 97], "valuemod": [0, 73, 74, 97], "localenergi": [0, 73, 75, 97], "nacr": [0, 73, 75, 97, 100], "nacrmultist": [0, 73, 75, 97], "hiplay": [0, 73, 87, 97], "coscutoff": [0, 73, 76, 97], "gaussiansensitivitymodul": [0, 73, 76, 97], "interactlay": [0, 73, 76, 97], "regularization_param": [0, 73, 76, 88, 89, 90, 97], "interactlayerquad": [0, 73, 76, 97], "interactlayervec": [0, 73, 76, 97], "inversesensitivitymodul": [0, 73, 76, 87, 97], "sensitivitybottleneck": [0, 73, 76, 97], "sensitivitymodul": [0, 73, 76, 97], "warn_if_und": [0, 73, 76, 97], "cellscaleinduc": [0, 73, 77, 97], "fuzzyhistogram": [0, 73, 77, 97], "molsumm": [0, 73, 77, 97], "onehotspeci": [0, 73, 77, 97], "quadunpack": [0, 73, 77, 97], "sysmaxofatom": [0, 73, 77, 97], "alphascreen": [0, 73, 85, 97], "combineenergi": [0, 73, 85, 97], "combinescreen": [0, 73, 85, 97], "coulombenergi": [0, 73, 85, 97], "dipol": [0, 73, 85, 97, 98, 100, 114], "ewaldrealspacescreen": [0, 73, 85, 97], "gradient": [0, 73, 85, 97, 101], "localdampingcosin": [0, 73, 85, 97], "multigradi": [0, 73, 85, 97], "peratom": [0, 73, 85, 90, 97, 118], "qscreen": [0, 73, 85, 97], "p_valu": [0, 73, 85, 97], "quadrupol": [0, 73, 77, 85, 97, 114], "screenedcoulombenergi": [0, 73, 85, 97], "stressforc": [0, 73, 85, 97], "vecmag": [0, 73, 85, 97], "wolfscreen": [0, 73, 85, 97], "regular": [0, 73, 81, 97, 103, 120], "lpreg": [0, 73, 86, 97], "hbondsymmetr": [0, 73, 87, 97], "hcharg": [0, 73, 87, 97, 120], "henergi": [0, 73, 85, 87, 97, 103, 104, 114], "transform": [0, 33, 34, 35, 45, 49, 50, 73, 77, 97, 113], "resnetwrapp": [0, 73, 88, 97], "interaction_lay": [0, 89, 90, 97], "sensitivity_lay": [0, 89, 90, 97], "resnet": [0, 88, 89, 90, 97], "compute_hipnn_e0": [0, 89, 90, 97], "plot": [0, 33, 34, 92, 93, 94, 97, 102, 103, 110, 117, 119], "plotmak": [0, 91, 97, 106], "plotter": [0, 91, 97], "timeplot": [0, 91, 97], "submodul": [0, 1, 11, 17, 26, 29, 33, 37, 38, 57, 62, 64, 73, 78, 89, 91], "pretrain": [0, 97, 103], "tool": [0, 7, 41, 97, 103], "hippynn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 117, 118], "custom": [1, 3, 74, 99, 117, 119], "kernel": [1, 3, 117, 119], "hip": [1, 49, 76, 90, 112], "nn": [1, 49, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 90, 112, 113, 116], "interact": [1, 76, 77, 85, 90, 103, 105, 112, 120], "sum": [1, 9, 53, 77, 85, 87, 103, 112, 114], "thi": [1, 6, 7, 9, 33, 34, 35, 41, 43, 45, 49, 50, 52, 53, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 120], "provid": [1, 42, 108, 109, 111, 112, 114, 115, 116], "implement": [1, 2, 3, 4, 5, 6, 9, 33, 34, 41, 50, 74, 78, 80, 84, 90, 108, 112, 113, 114, 116], "pytorch": [1, 2, 5, 9, 39, 40, 42, 46, 73, 76, 77, 87, 88, 89, 98, 103, 105, 107, 108, 110, 112, 113, 114, 115, 117, 119], "numba": [1, 4, 6, 7, 110, 112, 116, 119], "cupi": [1, 3, 110, 112, 119], "take": [1, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 98, 100, 103, 114, 115], "extra": [1, 74, 100, 113], "launch": [1, 112], "faster": [1, 112], "than": [1, 43, 50, 80, 83, 84, 105, 108, 112, 118, 120], "us": [1, 2, 9, 33, 34, 35, 41, 43, 45, 49, 50, 53, 77, 80, 83, 84, 85, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120], "far": [1, 108, 120], "less": [1, 100, 103, 105, 112], "do": [1, 35, 103, 105, 107, 108, 110, 111, 114, 118, 119], "come": [1, 114], "some": [1, 9, 43, 102, 103, 105, 108, 112, 113, 114, 118, 119], "overhead": [1, 7, 112], "gpu": [1, 3, 105, 108, 112, 116], "onli": [1, 41, 77, 90, 103, 105, 108, 110, 114], "work": [1, 9, 77, 103, 108, 111, 114, 117, 119, 120], "ar": [1, 9, 35, 41, 49, 74, 83, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120], "requir": [1, 41, 105, 114], "cpu": [1, 9, 99, 104, 108, 110, 112, 116, 118], "oper": [1, 4, 5, 33, 34, 39, 74, 85, 105, 111, 112, 114, 117, 120], "activ": [1, 88, 90, 108, 120], "bool": [1, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90], "str": [1, 33, 35, 90], "true": [1, 26, 37, 38, 40, 87, 90, 103, 105, 106, 112, 116, 118, 119], "sourc": [1, 2, 3, 4, 5, 7, 9, 10, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 53, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 111, 119], "deactiv": 1, "paramet": [1, 2, 33, 34, 39, 40, 41, 42, 43, 45, 46, 75, 76, 77, 81, 85, 86, 87, 88, 90, 98, 99, 103, 105, 108, 119, 120], "If": [1, 33, 34, 35, 43, 45, 49, 50, 53, 90, 98, 107, 108, 110, 112, 113, 114, 115, 119], "set": [1, 41, 43, 45, 49, 50, 74, 77, 80, 83, 84, 99, 103, 105, 112, 113, 114, 115, 117, 118], "best": [1, 108], "avail": [1, 33, 34, 114, 119], "fals": [1, 9, 40, 49, 53, 75, 87, 90, 103, 104, 106, 114, 119], "turn": [1, 119], "them": [1, 9, 33, 35, 50, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 103, 107, 110, 112, 114, 116, 119, 120], "off": [1, 108, 112], "default": [1, 33, 35, 49, 50, 90, 105, 108, 112, 114, 119], "those": [1, 77, 103, 112, 114], "explicitli": [1, 108, 118, 119], "auto": [1, 39, 40, 42, 45, 46, 49, 50, 53, 108, 114, 119], "return": [1, 2, 33, 34, 41, 43, 45, 49, 75, 76, 77, 83, 85, 87, 88, 90, 108, 113, 114], "none": [1, 9, 40, 41, 42, 45, 46, 49, 50, 53, 74, 76, 80, 83, 84, 85, 90, 105, 108, 114, 119], "wrap": [2, 39, 88, 105, 113, 115], "non": [2, 7, 9, 39, 102, 103], "autograd": [2, 116, 118], "envsum_impl": 2, "sensesum_impl": 2, "featsum_impl": 2, "implementt": 2, "class": [3, 4, 7, 9, 33, 35, 36, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 104, 113, 114, 115], "object": [3, 7, 9, 41, 50, 52, 98, 99, 104, 105, 107, 108, 114, 117], "sense_shap": 4, "f": [4, 33, 35], "pf": 4, "pss": 4, "atom1_ids_shap": 4, "other_shap": 4, "static": [4, 41, 118], "kernel_dtyp": 4, "feat_shap": 4, "env_shap": 4, "pfirst_shap": 4, "psecond_shap": 4, "atom2_id_shap": 4, "atom2_startshap": 4, "pure": [5, 41, 112, 113, 116], "sensit": [5, 9, 76, 90, 103, 112, 119, 120], "featur": [5, 9, 45, 49, 53, 74, 75, 76, 77, 82, 85, 87, 88, 90, 100, 102, 103, 109, 112, 114, 117, 120], "pair_first": [5, 9, 76, 77, 79, 82, 85, 87, 90], "pair_second": [5, 9, 76, 77, 79, 82, 85, 87, 90], "env": 5, "sens": 5, "version": [6, 100, 114], "convert": [6, 7, 33, 34, 45, 50, 77, 82, 114], "note": [6, 9, 50, 77, 85, 90, 98, 100, 103, 104, 114, 115, 119], "i": [6, 9, 33, 34, 35, 41, 43, 45, 49, 50, 75, 81, 82, 85, 88, 90, 98, 99, 100, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 120], "entir": [6, 107, 113, 118], "api": [6, 107, 109, 114, 117], "safe": 6, "ha": [6, 33, 34, 45, 49, 50, 53, 80, 82, 83, 84, 98, 99, 100, 103, 105, 113, 119, 120], "expos": 6, "all": [6, 9, 41, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 103, 107, 108, 110, 111, 112, 115, 118, 119], "function": [6, 7, 9, 33, 34, 35, 38, 41, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 100, 103, 113, 114, 116, 119, 120], "directli": [6, 41, 104, 107, 108, 113, 115, 116, 119], "typedict": 6, "torch": [6, 7, 85, 90, 98, 99, 103, 104, 107, 108, 113, 114], "complex64": 6, "dtype": [6, 9, 85], "complex128": 6, "float16": 6, "float32": [6, 103], "float64": [6, 85, 90, 98], "uint8": 6, "int8": 6, "int16": 6, "int32": 6, "int64": 6, "between": [7, 9, 33, 34, 35, 100, 103, 105, 115], "compat": [7, 33, 34, 43, 113, 116], "arrai": [7, 9, 85, 101, 103, 115], "shape": [7, 82, 90, 100, 115], "func": [7, 9, 39], "decor": [7, 33, 35, 41, 114], "pipe": 7, "through": [7, 105], "numpi": [7, 110, 115], "give": 7, "result": [7, 33, 35, 50, 80, 83, 84, 105], "back": 7, "A": [7, 42, 103, 106, 111, 113, 117, 119], "bit": [7, 108], "riguou": 7, "test": [7, 9, 98, 103], "show": [7, 99, 105], "order": [7, 53, 104, 114, 116, 118, 119, 120], "microsecond": 7, "verifi": 9, "correct": [9, 108, 118], "against": [9, 119], "envsum_raw": 9, "sensesum_raw": 9, "featsum_raw": 9, "suspicious_devi": 9, "0": [9, 77, 90, 99, 103, 104, 108], "5": [9, 45, 49, 50, 77, 99, 103], "r1": 9, "r2": 9, "repeat": 9, "3": [9, 77, 85, 99, 100, 103, 110, 111, 115], "type": [9, 33, 34, 35, 41, 43, 77, 90, 112, 113, 115, 117, 119], "30": 9, "use_larg": 9, "n_grad": 9, "1": [9, 49, 75, 77, 82, 84, 85, 87, 90, 99, 100, 101, 103, 105, 108, 110, 111, 113, 114, 115], "n_small": 9, "100": [9, 103], "n_larg": 9, "differentiable_input": 9, "funcnam": 9, "n_repetit": 9, "10": [9, 77, 99, 103, 106, 120], "data_s": 9, "atom_prob": 9, "7": [9, 90, 103, 110], "n_atom": [9, 45, 82, 100], "n_featur": [9, 90, 103], "80": [9, 99], "n_molecul": [9, 75, 77, 79, 80, 82, 85, 87, 100, 114], "1000": [9, 99], "n_nu": 9, "20": [9, 77, 99, 103], "compare_against": 9, "properti": [9, 40, 42, 50, 83, 85, 90], "name": [9, 39, 40, 42, 45, 46, 49, 50, 53, 100, 103, 107, 111, 114, 115, 118], "printinfo": 9, "get": [9, 40, 41, 49, 50, 86, 103, 105, 108, 110, 113, 114], "semi": 9, "realist": 9, "data": [9, 79, 90, 103, 104, 105, 111, 113, 115, 118, 120], "number": [9, 41, 45, 49, 50, 75, 76, 80, 83, 84, 85, 87, 90, 100, 103, 105, 112, 113, 114], "batch": [9, 33, 75, 85, 87, 103, 107, 112, 114, 118], "each": [9, 50, 80, 82, 83, 84, 85, 87, 90, 103, 105, 113, 119], "probabl": [9, 90, 110], "an": [9, 33, 34, 35, 36, 43, 45, 50, 53, 80, 87, 98, 103, 105, 107, 108, 110, 113, 114, 118, 120], "real": [9, 77], "pad": [9, 33, 34, 45, 50, 77, 82, 114], "e": [9, 33, 85, 100, 104, 108, 110, 112, 115, 119], "ach": 9, "differ": [9, 52, 85, 100, 108, 109, 114, 116, 120], "from": [9, 33, 35, 40, 41, 45, 49, 50, 52, 53, 77, 80, 82, 85, 87, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 120], "occupi": 9, "usual": [9, 114, 118, 120], "first": [9, 49, 81, 85, 88, 90, 103, 105], "shouldn": [9, 114], "t": [9, 33, 34, 35, 41, 49, 90, 103, 105, 107, 110, 114, 119], "matter": [9, 108], "becaus": [9, 35, 105, 107, 112, 118, 120], "raw": 9, "output": [9, 33, 34, 35, 41, 42, 49, 50, 76, 88, 98, 100, 103, 105, 107, 113, 114, 118, 120], "randomli": 9, "spars": [9, 50, 82, 105, 112], "averag": 9, "zero": [9, 50, 80, 83, 84, 105], "per": [9, 85, 90, 100, 118], "Their": 9, "amplitud": 9, "random": [9, 103], "In": [9, 108, 112, 114], "thei": [9, 33, 35, 41, 90, 112, 114, 115, 120], "2": [9, 45, 49, 50, 77, 80, 83, 84, 85, 86, 90, 100, 103, 105, 111, 113], "sequenti": 9, "ones": [9, 77], "have": [9, 33, 35, 49, 50, 103, 105, 106, 107, 108, 113, 114, 115, 116, 119, 120], "concret": 9, "form": [9, 41, 50, 77, 103, 111, 113, 114, 116, 118], "distanc": [9, 50, 76, 80, 81, 83, 84, 85, 98, 103, 105, 119, 120], "here": [9, 35, 85, 100, 102, 103, 104, 108, 114, 116, 117], "There": [9, 103, 119], "could": [9, 114, 118], "repres": [9, 73, 89], "wai": [9, 45, 100, 101, 103, 111, 114, 120], "though": [9, 41], "don": [9, 105, 110, 119], "know": 9, "how": [9, 99, 102, 103, 105, 106, 108, 109, 113, 117], "fast": [9, 117], "would": [9, 90, 104, 106, 110, 114], "construct": [9, 41, 99, 100, 114, 117, 120], "represent": [9, 74, 77, 90], "symmetr": [9, 87], "necessit": 9, "over": [9, 53, 77, 87, 100, 103, 112, 114], "j": [9, 85, 100, 112], "separ": [9, 118], "certain": [9, 112, 116], "recalcul": 9, "perform": [9, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 98, 99, 104, 108, 109, 110, 111, 114], "prefer": 9, "code": [9, 100, 103, 108, 110, 111, 113, 114], "which": [9, 33, 35, 45, 75, 88, 98, 100, 103, 104, 105, 108, 111, 112, 114, 115, 119, 120], "properli": 9, "case": [9, 105, 108, 113, 114], "we": [9, 85, 99, 100, 103, 105, 107, 109, 114, 116, 117, 118], "asymmetr": 9, "xaca": 9, "futur": 9, "mai": [9, 33, 35, 104, 108, 110, 111, 112, 114, 118, 120], "find": [9, 33, 34, 45, 49, 50, 78, 80, 82, 84, 103, 105, 109, 114], "nonsymmetr": 9, "never": 9, "consist": [9, 82, 90, 103], "same": [9, 33, 35, 85, 101, 115, 119, 120], "repeatedli": [9, 33, 35], "env_impl": 9, "sense_impl": 9, "feat_impl": 9, "kei": [10, 103, 107, 114], "other": [10, 88, 90, 98, 101, 103, 105, 108, 111, 114, 118, 119, 120], "torch_modul": [26, 37, 38, 39, 113, 114], "requires_grad": [26, 37, 38, 40], "pred": [26, 37, 38, 40, 103, 118], "main_output": [26, 33, 34, 37, 38, 40, 41, 42, 49, 50], "expand_par": [26, 37, 38, 41, 114], "add_class_doc": [26, 37, 38, 41], "fn": [26, 37, 38, 41, 74], "assert": [26, 37, 38, 41, 45, 49, 50, 114], "assertlen": [26, 37, 38, 41, 114], "get_main_output": [26, 37, 38, 41, 114], "match": [26, 33, 34, 37, 38, 41, 45, 49, 50, 53, 114], "matched_idx_coercion": [26, 37, 38, 41], "matchlen": [26, 37, 38, 41, 114], "require_idx_st": [26, 37, 38, 41, 114], "set_dbnam": [26, 37, 38, 42], "track": [33, 103, 117], "state": [33, 34, 35, 36, 41, 45, 49, 50, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 102, 108, 114], "The": [33, 35, 41, 77, 85, 88, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120], "describ": [33, 103], "mean": [33, 103, 118, 119, 120], "axi": 33, "ax": [33, 112], "system": [33, 35, 53, 80, 87, 98, 103, 105, 108, 109, 113, 114, 115, 120], "level": [33, 53, 87, 114, 117], "valu": [33, 34, 35, 36, 39, 50, 74, 77, 79, 80, 82, 83, 84, 90, 103, 105, 107, 108, 114, 116, 118, 119, 120], "enum": [33, 36], "enumer": [33, 36], "NOT": [33, 36, 111], "found": [33, 34, 36, 43, 100, 108, 114, 118, 119], "remov": [33, 35], "ani": [33, 35, 39, 40, 41, 42, 46, 52, 101, 105, 108, 110, 111, 114, 115, 118], "cach": [33, 35], "hold": [33, 35], "global": [33, 35, 119], "refer": [33, 35, 116], "been": [33, 34, 35, 99, 114], "automat": [33, 35, 45, 98, 108, 114, 116], "so": [33, 34, 35, 41, 81, 103, 105, 107, 108, 109, 111, 114, 118, 119, 120], "won": [33, 35], "garbag": [33, 35], "collect": [33, 35, 43], "clear": [33, 35], "free": [33, 35], "you": [33, 34, 35, 74, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 120], "modifi": [33, 35, 99, 114, 120], "tabl": [33, 35, 119], "comparison": [33, 34, 35], "fly": [33, 35], "want": [33, 34, 35, 103, 107, 108, 110, 114, 116, 120], "creat": [33, 35, 39, 40, 42, 45, 46, 103, 104, 113, 117], "old": [33, 35], "rule": [33, 35], "nodes_to_reduc": [33, 34], "mutual": [33, 34], "put": [33, 34, 103, 114, 120], "compar": [33, 34, 103, 105, 106, 116, 119], "reduc": [33, 34, 35, 105, 107], "singl": [33, 34, 41, 74, 103, 114, 118], "argument": [33, 34, 35, 49, 81, 101, 105, 108, 114, 119], "tupl": [33, 34, 35, 43, 114], "multipl": [33, 34, 39, 114, 115, 120], "unlik": [33, 34], "direct": [33, 34, 105, 111, 114], "need": [33, 34, 41, 45, 50, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 103, 105, 108, 110, 114, 120], "user": [33, 34, 105, 108, 109, 114, 119], "": [33, 34, 41, 50, 76, 77, 80, 98, 103, 106, 107, 111, 112, 114, 120], "more": [33, 34, 41, 43, 50, 80, 83, 84, 99, 100, 103, 105, 108, 109, 112, 113, 114, 116, 118, 119], "like": [33, 34, 82, 100, 103, 105, 106, 107, 108, 110, 116, 120], "output_index_st": [33, 34], "attempt": [33, 34, 39, 40, 42, 46, 108, 114], "given": [33, 34, 41, 84, 98, 114, 115], "op": [33, 34], "one": [33, 34, 35, 43, 45, 49, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 100, 105, 112, 113, 114, 115, 118, 120], "error": [33, 34, 43, 45, 100, 103, 107, 108, 114, 120], "rais": [33, 34, 43], "alreadi": [33, 34, 113, 114], "just": [33, 34, 100, 102, 107, 120], "doesn": [33, 34, 41, 114, 119], "appropri": [33, 34, 114], "look": [33, 34, 43, 100, 103, 106, 114, 118], "convers": [33, 34, 35, 114, 116], "valueerror": [33, 34], "request": [33, 34], "input_idxst": [33, 35], "output_idxst": [33, 35], "regist": [33, 35, 41, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "anoth": [33, 35, 113, 118, 120], "should": [33, 35, 50, 52, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 103, 105, 107, 114, 115, 120], "signatur": [33, 35, 45, 49, 50, 53], "parent": [33, 35, 39, 40, 41, 42, 43, 45, 46, 49, 50, 53, 113, 117], "child_node_typ": [33, 35], "union": [33, 35], "callabl": [33, 35, 43, 76, 90, 107], "That": [33, 35], "can": [33, 35, 41, 98, 100, 101, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120], "factori": [33, 35], "act": [33, 35, 111], "constructor": [33, 35, 76, 88], "support": [33, 35, 39, 41, 98, 108, 115, 116, 118, 119], "addit": [33, 35, 39, 50, 84, 105, 114], "must": [33, 35, 50, 80, 83, 84, 90, 98, 104, 105, 108, 111, 114, 119], "invok": [33, 35, 114], "new": [33, 35, 41, 50, 80, 83, 84, 105, 113, 114, 120], "appli": [33, 35, 41, 45, 49, 50, 53, 85, 103, 112, 114, 118], "yield": [33, 35], "No": [33, 35], "two": [33, 34, 35, 85, 103, 113, 114, 118, 120], "simultan": [33, 35], "coerc": [33, 34, 41], "inform": [33, 34, 40, 45, 46, 50, 52, 74, 98, 103, 105, 108, 109, 114, 116, 119], "chang": [34, 35, 105, 108, 119], "idxt": 34, "expect": 34, "input_i": 34, "output_i": 34, "acquir": 34, "storag": 35, "logic": [35, 116], "relationship": [35, 43], "redund": 35, "comput": [35, 50, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 108, 114, 118], "also": [35, 98, 100, 103, 104, 105, 110, 114], "includ": [35, 90, 103, 104, 105, 108, 111, 116], "live": 35, "themselv": [35, 120], "packag": [35, 97], "minim": [35, 102, 116], "depend": [35, 52, 103, 108, 112], "core": [38, 112], "machineri": 39, "nativ": [39, 116], "python": [39, 103, 104, 109, 110, 112, 116, 119], "subtract": 39, "left": 39, "right": [39, 111], "arg": [39, 42, 45, 50, 74, 77, 79, 82, 84, 85, 86], "kwarg": [39, 41, 42, 45, 49, 50, 53, 74, 77, 79, 82, 83, 84, 85, 107, 114], "_basenod": [39, 45, 49, 50, 53], "db_name": [39, 40, 42, 46, 100, 101, 103, 105, 107, 115, 118, 120], "_predefinedop": 39, "_combnod": [39, 40], "truediv": 39, "in_nod": 39, "invert": 39, "mul": 39, "neg": 39, "pow": 39, "sub": 39, "obj": 39, "sublcass": 40, "origin_nod": 40, "model": [40, 73, 83, 89, 90, 98, 99, 100, 103, 104, 105, 106, 107, 108, 110, 112, 114, 117, 120], "predict": [40, 53, 87, 98, 100, 103, 107, 114, 116, 118, 119, 120], "organ": 41, "definit": [41, 43, 114], "usag": [41, 100, 110], "option": [41, 45, 104, 108, 110], "intend": 41, "defin": [41, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 99, 100, 103, 114, 115, 116], "strictli": 41, "necessari": 41, "aid": 41, "complex": [41, 105, 114, 118], "behavior": [41, 112], "simpl": [41, 74, 103, 106, 107, 114, 115, 117], "fashion": 41, "purpos": [41, 43, 45, 49, 50, 53, 77, 111, 114], "length": [41, 45, 77, 105, 108], "idxstat": 41, "node_self": 41, "cast": [41, 49, 50], "manag": 41, "step": [41, 50, 80, 83, 84, 105, 108], "build": [41, 45, 50, 76, 98, 103, 104, 114, 116], "It": [41, 77, 103, 105, 108, 114, 118, 120], "recommend": [41, 100, 105, 110, 112, 118], "onc": 41, "final": [41, 108, 114, 120], "stage": 41, "expand": [41, 50, 114], "ensur": [41, 85, 114, 118], "satisfactori": 41, "expans": [41, 45, 49, 50, 53, 117], "gener": [41, 50, 84, 98, 105, 114, 116, 119], "needed_index_st": 41, "coercion": 41, "present": 41, "param": [41, 77, 85, 87], "alwai": [41, 108, 114], "except": [41, 43, 115], "child": [41, 43, 114], "context": 41, "temporarili": 41, "connect": [41, 43, 113, 114], "dure": [41, 105, 108, 116, 118, 119], "treat": [41, 103, 119], "even": [41, 111], "fulli": [41, 102, 105, 114], "sever": [42, 103, 105, 113, 114, 119], "index_st": 42, "node_or_nod": 43, "constraint_kei": 43, "why_desc": [43, 114], "specifi": [43, 101, 103, 108, 113, 114, 118, 119, 120], "iter": [43, 77, 105], "start": [43, 45, 103], "search": [43, 45, 105, 109], "spec": [43, 50], "isinst": 43, "cannot": [43, 105], "satisfi": 43, "constraint": [43, 108, 117], "messag": [43, 107], "relat": 43, "obei": 43, "uniqu": [43, 114], "specif": [43, 103, 111, 113, 114], "nodenotfounderror": 43, "rasi": 43, "node_set": 43, "recurs": 43, "list": [43, 45, 75, 81, 82, 87, 88, 90, 103, 104, 108, 111, 113, 114], "follow": [45, 49, 50, 53, 99, 100, 108, 111, 114, 115, 118, 119], "procedur": [45, 49, 50, 53, 103], "mol_index": [45, 75, 77, 79, 80, 82, 85, 87, 114], "atom_index": [45, 75, 77, 79, 82], "n_mol": 45, "creation": [45, 49, 50, 53, 113], "re": [45, 50, 74, 103, 105, 109, 114, 115], "pad_idx": [45, 50], "vmin": [45, 77], "vmax": [45, 77], "vector": [45, 75, 77, 100], "via": [45, 77, 104], "fuzzi": [45, 77], "soft": [45, 77], "histogram": [45, 77], "method": [45, 74, 77, 85, 103, 105, 114, 118], "hot": [45, 49, 77, 90], "pidxer": [45, 49, 114], "search_nod": 45, "padder": 45, "exist": [45, 103, 114], "rel": [45, 120], "string": [45, 74, 104, 107, 108, 114, 118], "process": [45, 99, 103, 104, 105, 108, 114, 118], "fail": [45, 107], "cell": [46, 50, 77, 80, 82, 83, 84, 85, 105], "forc": [46, 98, 102, 116], "other_par": 49, "up": [49, 99, 104, 111, 113], "pass": [49, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 98, 103, 104, 106, 108, 112, 114], "padding_index": 49, "indexed_featur": 49, "pair_find": [49, 50], "module_kwarg": [49, 50, 53, 100, 103, 105, 114, 120], "neural": [49, 103], "4": [49, 77, 105, 114, 120], "l": [49, 90], "manipul": [50, 78], "dist_hard_max": [50, 80, 83, 84, 87, 90, 103, 105], "_dispatchneighbor": [50, 80], "arbitrari": [50, 115], "boundari": [50, 80, 102], "condit": [50, 80, 84, 102, 111], "often": [50, 100, 107, 120], "slower": 50, "speed": [50, 116], "concern": [50, 99], "consid": 50, "precomput": 50, "precompute_pair": [50, 105], "8": [50, 77, 90, 103], "hard_dist_cutoff": [50, 80, 81, 82, 83, 84], "under": [50, 80, 111, 119], "scipi": [50, 80], "kd": [50, 80], "tree": [50, 80], "algorithm": [50, 80, 105], "orthorhomb": [50, 80, 105], "ad": [50, 80, 109, 116, 117], "compon": [50, 53, 80, 84, 87, 108, 109, 114, 117, 120], "store": [50, 80, 83, 84, 103, 105, 108, 115, 119], "current": [50, 80, 83, 84, 103, 105, 108, 114, 119], "reus": [50, 80, 83, 84, 100, 105], "particl": [50, 80, 83, 84], "move": [50, 80, 83, 84, 105, 108], "sinc": [50, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "last": [50, 80, 83, 84, 90, 103], "otherwis": [50, 80, 83, 84, 85, 111], "_pair_indexer_class": [50, 80, 83, 84], "recomput": [50, 80, 83, 84], "increas": [50, 80, 83, 84, 105], "decreas": [50, 80, 83, 84, 105], "time": [50, 80, 83, 84, 103, 105, 112], "while": [50, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 105], "fastest": [50, 80, 83, 84, 105], "neigh_list": 50, "po": 50, "pair_index": 50, "atomidx": 50, "For": [50, 90, 100, 102, 105, 107, 108, 110, 112, 113, 114, 115, 118, 119, 120], "pair_featur": 50, "pair_idx": 50, "sp": 50, "r": [50, 100, 103, 107, 120], "c": [50, 110], "bin": [50, 79], "associ": [50, 98, 103, 104], "one_hot": [50, 79], "children": [50, 103, 113], "inherit": 52, "allow": [52, 77, 114], "kind": 52, "file": [52, 103, 108, 110, 115, 119], "actual": [52, 77, 112, 118], "notimpl": 52, "variabl": [53, 105, 108, 112, 115, 119], "bond": [53, 77, 115, 116], "local": [53, 85, 87, 103, 114, 120], "both": [53, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 90, 112], "net": [53, 114], "first_is_interact": [53, 75, 87, 114], "compos": 73, "piec": [73, 103], "item": 74, "everi": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "call": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 104, 105, 107, 114, 120], "overridden": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "subclass": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 113], "although": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 119], "recip": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "within": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 105, 113], "instanc": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 114], "afterward": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 104], "instead": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100], "former": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "care": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "run": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 103, 104, 105, 113, 114], "hook": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "latter": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "silent": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "ignor": [74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90], "repr_info": 74, "initi": [74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 120], "intern": [74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 90, 100], "share": [74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87], "scriptmodul": [74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87], "To": [74, 77, 98, 103, 104, 105, 107, 108, 118], "print": [74, 103, 116, 119], "your": [74, 98, 105, 108, 109, 112, 114, 115, 117, 120], "own": [74, 114], "line": 74, "accept": [74, 119], "bundled_input": 74, "feature_s": [75, 87, 114], "all_featur": [75, 87], "n_atoms_max": [75, 77, 79, 80, 82, 115], "total": [75, 85, 87, 90, 120], "maximum": [75, 76, 77, 85, 103], "contributed_energi": 75, "atom_energi": [75, 114], "atom_preenergi": 75, "prob": 75, "propens": 75, "nac": 75, "\u03b4e": [75, 100], "origin": [75, 90, 108], "charges1": 75, "charges2": 75, "energy1": 75, "energy2": 75, "n_target": [75, 87, 100], "pari": 75, "hard_max_dist": 76, "dist_tensor": 76, "n_dist": [76, 87], "min_dist_soft": 76, "max_dist_soft": 76, "cutoff_typ": 76, "distflat": 76, "warn_low_dist": [76, 119], "nf_in": [76, 88], "nf_out": [76, 88], "mind_soft": 76, "maxd_soft": 76, "hard_cutoff": 76, "sensitivity_modul": 76, "minimum": [76, 100, 110], "cutoff": [76, 80, 85, 90, 103, 105, 120], "in_featur": 76, "dist_pair": 76, "enforc": [76, 77, 87, 100], "coord_pair": 76, "min_soft_dist": 76, "n_dist_bar": 76, "base_sens": 76, "threshold": 76, "decod": 77, "besid": [77, 102], "molatom_th": 77, "real_atom": [77, 80, 82, 83, 84], "coordin": [77, 80, 82, 83, 84, 85, 105], "summer": 77, "descript": [77, 100], "flatatom": 77, "thing": [77, 103, 114], "mol": [77, 98], "similarli": 77, "map": [77, 103, 108], "typic": [77, 118, 120], "z": [77, 103, 107, 120], "elem": 77, "denot": 77, "blank": [77, 103], "nonblank": [77, 80, 83, 84], "u": [77, 111], "go": [77, 103, 113, 114, 115, 119, 120], "rectangular": 77, "correspond": [77, 100, 103, 112, 114, 115, 118], "real_index": 77, "_values_": 77, "flatten": [77, 85], "And": [77, 98], "select": 77, "inv_real_index": 77, "when": [77, 99, 100, 103, 105, 113, 114, 116, 119, 120], "amd": 77, "invers": [77, 90], "pack": 77, "triangular": 77, "assum": [77, 99, 106, 107, 114], "symmmetr": 77, "xx": 77, "yy": 77, "zz": 77, "xy": 77, "xz": 77, "yz": 77, "unpack": 77, "yx": 77, "zx": 77, "zy": 77, "00": 77, "01": 77, "02": 77, "11": 77, "12": [77, 103], "21": 77, "22": 77, "packed_quadrupol": 77, "dimens": [77, 88], "analyz": 79, "rmag_list": 79, "j_list": 79, "inv_real_atom": [79, 80, 82, 83, 84], "pair_dist": [79, 81, 85, 87, 90], "rij_list": 79, "finder": 80, "coord": 80, "spatial": 80, "orthonorm": 80, "inv_cel": 80, "_pairindex": [81, 82, 83, 84], "pair_list": 81, "filterpairindex": 81, "behav": 81, "pair_tensor": 81, "ASE": [82, 102, 105, 110, 116, 117], "neighbor": [82, 105, 112], "fed": 82, "shift": 82, "pairfeatur": 82, "pair_coord": [82, 90], "atom_arrai": 82, "n_imag": [82, 84, 105], "cell_offset": 82, "offset_index": 82, "molecule_index": 82, "molatomatom_th": 82, "jlist": 82, "where": [82, 103, 105, 113, 114], "n_neigh_max": 82, "record": [83, 108, 116], "imag": [84, 105], "alpha": 85, "combin": [85, 103, 114], "molecular": [85, 87, 98, 100], "g": [85, 104, 108, 110, 115, 119], "coulomb": 85, "screenedcoulomb": 85, "atom_energy_1": 85, "atom_energy_2": 85, "second": 85, "screening_list": 85, "product": [85, 111, 112], "screen": 85, "radiu": [85, 105], "upto": 85, "neighborlist": 85, "weight": [85, 120], "energy_conversion_factor": 85, "configur": [85, 108], "adopt": 85, "convent": 85, "coulombi": 85, "evenli": 85, "partit": 85, "therefor": 85, "similar": [85, 100, 103, 120], "int": [85, 90], "sign": [85, 100, 101], "molecular_energi": 85, "damp": 85, "complement": 85, "glue": [85, 103], "r_cutoff": 85, "co": 85, "pi": 85, "dist": 85, "smooth": 85, "crossov": 85, "long": [85, 105, 118], "rang": 85, "generalized_coordin": 85, "9": [85, 110], "normal": 85, "sum_a": 85, "q_a": 85, "r_a": 85, "delta_ij": 85, "strain": 85, "vector_featur": 85, "l2": 86, "p": [86, 112], "dist_soft_min": [87, 90, 103], "dist_soft_max": [87, 90, 103], "antisymmetr": 87, "sensitivity_typ": [87, 90], "all_pair": 87, "hierarchc": 87, "base_lay": 88, "nf_middl": 88, "built": [88, 105, 114], "softplu": [88, 90], "wrapper": [88, 119], "reslay": 88, "nonlinear": 88, "taken": 88, "residu": 88, "composit": 89, "larger": [89, 105, 118], "n_sensit": [90, 103], "n_atom_lay": [90, 103], "n_interaction_lay": [90, 103], "possible_speci": [90, 103, 104, 105], "n_input_featur": 90, "width": [90, 103], "midpoint": 90, "block": [90, 103], "exampl": [90, 98, 100, 101, 103, 104, 105, 108, 109, 113, 114, 115, 116, 118, 120], "hcno": 90, "6": [90, 103], "what": [90, 98, 103, 112, 113, 114, 118, 120], "paper": [90, 100], "size": [90, 103, 112, 114, 118], "suppli": 90, "z_data": 90, "en_data": 90, "fit_dtyp": 90, "whether": [90, 101, 111, 113, 119], "n_features_encod": 90, "ase": [98, 110, 116], "dynam": [98, 99, 112, 119], "import": [98, 99, 103, 104, 105, 106, 108, 114, 118, 120], "hippynncalcul": 98, "energy_nod": [98, 104], "node_from_nam": [98, 104], "calc": 98, "en_unit": 98, "unit": [98, 105, 117], "ev": 98, "dist_unit": 98, "These": [98, 100, 103, 104, 114, 116, 119], "consum": 98, "produc": [98, 105, 111, 113], "unspecifi": [98, 114], "kcal": 98, "angstrom": 98, "whatev": 98, "assign": [98, 115, 119], "proce": 98, "simul": [98, 104, 105], "desir": [98, 113, 118, 120], "stress": 98, "differenti": 98, "capabl": [98, 114, 115], "training_modul": [99, 103, 104, 105, 106, 108], "assembl": [99, 103, 105], "snippet": [99, 102], "schedul": 99, "optim": [99, 103, 108], "raisebatchsizeonplateau": 99, "patiencecontrol": 99, "adam": [99, 103], "lr": 99, "1e": [99, 120], "max_batch_s": 99, "patienc": 99, "max_epoch": [99, 103], "200": 99, "batch_siz": [99, 103, 107], "eval_batch_s": 99, "512": 99, "termination_pati": 99, "fraction_train_ev": 99, "stopping_kei": [99, 103], "early_stopping_kei": 99, "experiment_param": [99, 103, 108], "setupparam": [99, 103], "role": [99, 120], "govern": [99, 111], "outsid": 99, "updat": 99, "report": [99, 118], "stop": [99, 103], "transit": 100, "adiabat": 100, "coupl": 100, "detail": [100, 116], "pleas": 100, "see": [100, 102, 108, 115, 119], "li2023": 100, "ground": 100, "counterpart": 100, "n_state": 100, "mol_energi": [100, 114], "keyword": [100, 107, 108, 114], "consider": 100, "simpli": [100, 114], "perman": 100, "q": 100, "dipolenod": 100, "d": 100, "avoid": [100, 108], "singular": 100, "problem": [100, 103, 116], "nacrmultistatenod": 100, "scalednacr": 100, "boldsymbol": 100, "_": [100, 112], "ij": 100, "express": [100, 111], "delta": 100, "e_": [100, 112], "_i": 100, "frac": 100, "partial": 100, "_j": 100, "contain": [100, 103, 108, 113, 118, 119], "scratch": 100, "due": [100, 105, 108], "phase": 100, "mae": [100, 101, 103], "rmse": [100, 103, 118], "energy_ma": 100, "maeloss": [100, 103, 118], "of_nod": [100, 103, 118], "dipole_ma": 100, "maephaseloss": 100, "nacr_ma": 100, "msephaseloss": 100, "mse": [100, 101, 103], "possibl": [100, 103, 111, 113, 116, 117, 118, 119, 120], "complet": [100, 103, 114], "script": [100, 103, 104, 116, 119], "excited_states_azomethan": 100, "py": [100, 103, 115], "machin": [100, 109], "learn": [100, 103, 109], "framework": 100, "exciton": 100, "polariton": 100, "materi": [100, 111], "li": 100, "et": 100, "al": [100, 104], "2023": 100, "http": [100, 110], "arxiv": 100, "org": 100, "ab": 100, "2306": 100, "02523": 100, "gradientnod": 101, "sys_energi": 101, "grad": 101, "make": [101, 103, 106, 107, 114, 118, 120], "might": 101, "about": [102, 114, 116, 118, 119], "variou": [102, 120], "workflow": 102, "fledg": 102, "directori": [102, 103, 108], "repositori": [102, 109, 110], "lammp": [102, 110], "adiabiat": 102, "next": 103, "let": [103, 106, 107, 114], "ourselv": 103, "our": 103, "netnam": 103, "my_first_hippynn_model": 103, "dirnam": 103, "o": [103, 112], "path": 103, "mkdir": 103, "chdir": 103, "now": 103, "hyperparamet": [103, 104, 120], "entri": [103, 116], "peak": 103, "end": 103, "hard": [103, 120], "ll": [103, 105, 107], "dictionari": [103, 107, 108], "network_param": [103, 105, 120], "16": 103, "85": 103, "By": [103, 105, 108], "send": [103, 114], "underli": [103, 114], "hipnn_model": [103, 120], "regress": [103, 114], "individu": 103, "quantiti": [103, 116, 119], "whole": 103, "again": 103, "attribut": [103, 114, 118], "access": [103, 107, 108, 118], "hierarch": [103, 114], "simplest": 103, "rmse_energi": 103, "mseloss": 103, "mae_energi": [103, 118], "unsupervis": 103, "term": [103, 105, 120], "rbar": 103, "syntax": [103, 114, 116], "loss_error": 103, "metric": [103, 108, 116, 118], "epoch": 103, "validation_loss": [103, 105, 106], "hier": 103, "few": 103, "mani": [103, 105], "structur": [103, 113, 116], "tell": 103, "db_info": [103, 105, 106, 108], "assemble_for_train": [103, 105, 106], "three": [103, 112, 119], "graphmodul": [103, 107, 113, 119], "valid": [103, 108, 118], "load": [103, 104, 108, 115], "directorydatabas": 103, "someth": [103, 119], "prefix": [103, 119], "somewher": 103, "locat": [103, 109, 119], "test_siz": 103, "fraction": 103, "sampl": 103, "valid_s": 103, "seed": 103, "2001": 103, "splite": 103, "db_namesnam": 103, "fit": [103, 111], "set_e0_valu": 103, "trainable_aft": 103, "almost": [103, 105], "earli": 103, "rate": 103, "togeth": 103, "setup_and_train": [103, 108], "learning_r": 103, "001": 103, "good": [103, 108, 111], "begin": [103, 118], "setup_param": [103, 108], "everyth": [103, 108], "from_graph": [103, 107], "apply_to_db": 103, "apply_to_databas": 103, "split": 103, "test_output": 103, "test_hier_predict": 103, "test_energy_predict": 103, "molecule_energi": [103, 106, 107, 118], "barebon": 103, "obtain": 103, "process_qm7_data": 103, "folder": 103, "further": 103, "instruct": 103, "setup": 103, "set_default_dtyp": 103, "test_barebones_script": 103, "deliber": 103, "small": [103, 112, 120], "easili": [103, 108], "laptop": 103, "element": [103, 112], "qm7": 103, "neuron": 103, "bohr": 103, "mse_energi": 103, "too": 103, "better": [103, 112], "understand": 103, "stuff": 103, "drop": 103, "irrelev": 103, "save": [103, 104, 106, 108], "active_directori": 103, "log": 103, "training_log": 103, "txt": [103, 110], "log_termin": 103, "wt": 103, "dataset": [103, 105, 110, 115, 120], "qm7_process": 103, "examin": [103, 120], "tend": 103, "stabil": 103, "lot": 103, "ml": 104, "iap": 104, "unifi": 104, "abstract": [104, 116], "mliapinterfac": 104, "interatom": 104, "potenti": 104, "symbol": 104, "whose": [104, 113, 120], "agre": 104, "cuda": [104, 108], "bundl": 104, "load_checkpoint_from_cwd": [104, 108], "map_loc": [104, 108], "restore_db": 104, "model_devic": [104, 108], "mliap_unified_hippynn_al_multilay": 104, "pt": [104, 108], "after": [104, 105, 108, 116], "pickl": [104, 115], "pair_styl": 104, "mliap": 104, "mliap_unified_hippynn_": 104, "pair_coeff": 104, "mliappi": 104, "librari": [104, 109, 112, 114, 116, 117], "activate_mliappi": 104, "lmp": 104, "commands_str": 104, "before_load": 104, "mliap_unified_lj": 104, "mliapunifiedlj": 104, "load_unifi": 104, "after_load": 104, "befor": [104, 108, 110, 114, 116], "command": 104, "anyth": [104, 108, 119], "triclin": 105, "surround": 105, "nearest": 105, "27": 105, "replic": 105, "numer": [105, 120], "notic": [105, 111], "costli": 105, "skew": 105, "well": [105, 108, 114, 115], "fewer": 105, "highli": [105, 114], "flexibl": [105, 114, 117], "enc": [105, 114], "padidx": 105, "determin": [105, 107, 113], "upshot": 105, "howev": [105, 111, 112, 114, 118, 120], "cost": [105, 107], "independ": [105, 116], "rather": [105, 118], "slow": 105, "benefit": 105, "greater": 105, "side": 105, "altern": [105, 116], "exhibit": 105, "especi": [105, 112], "larg": [105, 120], "md": 105, "applic": [105, 114], "slightli": [105, 114], "subsquent": 105, "mitig": 105, "either": 105, "abov": [105, 111, 114, 115], "Then": [105, 118], "replac": [105, 114], "train_loss": [105, 106], "plot_mak": [105, 106], "caveat": 105, "n_worker": 105, "dataload": 105, "limit": [105, 111], "As": [105, 113, 120], "mix": [105, 114], "pbc": 105, "quit": 105, "handl": [105, 108, 117], "close": 105, "deal": [105, 118], "emb": 105, "veri": [105, 117, 120], "box": 105, "maker": 106, "hist2d": 106, "shown": 106, "plot_everi": 106, "thu": [106, 108, 120], "attach": 106, "without": [107, 111, 115, 116], "compil": [107, 113], "easi": [107, 114], "list_of_input_nod": 107, "list_of_output_nod": 107, "sai": [107, 120], "z_arrai": 107, "r_arrai": 107, "128": 107, "itself": [107, 111, 113, 114], "mol_en": 107, "t_predicted_arrai": 107, "equival": [107, 118], "previou": 108, "job": 108, "hpc": 108, "checkpoint": [108, 116], "measur": 108, "seen": 108, "break": 108, "down": [108, 114], "its": [108, 111], "setup_train": 108, "train_model": 108, "batch_callback": 108, "later": [108, 119], "load_checkpoint": 108, "experiment_structur": 108, "best_checkpoint": 108, "filenam": 108, "previous": 108, "load_model_from_cwd": 108, "wa": [108, 111], "longer": 108, "standard": [108, 119], "map_devic": 108, "tricki": [108, 116], "still": [108, 114, 120], "belong": 108, "transfer": 108, "much": [108, 112, 120], "environ": [108, 112, 119], "cuda_visible_devic": 108, "label": 108, "rng": 108, "restor": 108, "reset": 108, "reload": 108, "pre": [108, 118], "doe": [108, 114, 118, 119, 120], "involv": [108, 120], "retriev": 108, "idea": 108, "wholesal": 108, "typeerror": 108, "bytetensor": 108, "doc": 108, "destin": 108, "Not": [108, 119], "mention": 108, "hope": 109, "enjoi": 109, "stai": 109, "atomist": [109, 117], "aim": [109, 115], "high": 109, "modular": [109, 117], "design": [109, 120], "extend": [109, 114], "page": [109, 116], "develop": 109, "home": 109, "github": [109, 110], "instal": [109, 112, 115, 119], "guid": 109, "licens": 109, "acceler": 110, "matplotlib": [110, 116, 119], "tqdm": [110, 119], "progress": [110, 119], "bar": [110, 119], "graphviz": 110, "view": [110, 118], "figur": [110, 116, 119], "h5py": 110, "h5": 110, "pyanitool": 110, "pyseqm": [110, 116], "clone": 110, "navig": 110, "git": 110, "com": 110, "lanl": [110, 111], "cd": 110, "wish": [110, 118], "comment": [110, 120], "out": [110, 111], "conda_requir": 110, "channel": 110, "forg": 110, "feel": 110, "tinker": 110, "edit": 110, "full": [110, 114], "optional_depend": 110, "copyright": 111, "2019": 111, "triad": 111, "nation": 111, "secur": 111, "llc": 111, "reserv": 111, "program": 111, "contract": 111, "89233218cna000001": 111, "lo": 111, "alamo": 111, "laboratori": 111, "depart": 111, "nuclear": 111, "administr": 111, "grant": 111, "behalf": 111, "nonexclus": 111, "paid": 111, "irrevoc": 111, "worldwid": 111, "reproduc": 111, "prepar": 111, "deriv": 111, "distribut": 111, "copi": 111, "public": 111, "publicli": 111, "displai": 111, "permit": 111, "bsd": 111, "redistribut": 111, "binari": 111, "modif": 111, "met": 111, "retain": 111, "disclaim": 111, "neither": 111, "holder": 111, "nor": 111, "contributor": 111, "endors": 111, "promot": 111, "softwar": 111, "prior": 111, "written": [111, 116], "permiss": 111, "BY": 111, "THE": 111, "AND": 111, "AS": 111, "OR": 111, "impli": 111, "warranti": 111, "BUT": 111, "TO": 111, "OF": 111, "merchant": 111, "FOR": 111, "particular": [111, 112], "IN": 111, "NO": 111, "event": 111, "shall": 111, "BE": 111, "liabl": 111, "indirect": 111, "incident": 111, "special": 111, "exemplari": 111, "consequenti": 111, "damag": 111, "procur": 111, "substitut": 111, "servic": 111, "profit": 111, "busi": 111, "interrupt": 111, "caus": 111, "ON": 111, "theori": 111, "liabil": 111, "strict": 111, "tort": 111, "neglig": 111, "aris": [111, 114], "IF": 111, "advis": 111, "SUCH": 111, "analog": 112, "convolut": 112, "contin": 112, "point": [112, 118], "space": 112, "awkward": 112, "write": [112, 116], "effici": [112, 116], "backward": 112, "csr": 112, "mixtur": 112, "inner": 112, "outer": 112, "remain": 112, "switch": 112, "revert": 112, "footprint": [112, 116], "decent": 112, "amount": 112, "speedup": 112, "approxim": 112, "n_": 112, "mathrm": 112, "wherea": 112, "quickli": 112, "shallow": 112, "wast": 112, "proport": 112, "sensum": 112, "nu": 112, "sum_p": 112, "nu_": 112, "z_": 112, "p_j": 112, "s_": 112, "sum_": 112, "p_i": 112, "f_": 112, "ahead": 112, "basic": [113, 115, 117], "dress": 113, "metadata": [113, 116], "assist": 113, "link": [113, 116], "inclus": 113, "help": 113, "index_transform": 113, "cover": 113, "tandem": 113, "execut": [113, 114, 117, 119], "place": 113, "part": [114, 120], "contribut": [114, 120], "yourself": 114, "foomodul": 114, "foonod": 114, "_index_st": 114, "def": 114, "self": 114, "super": 114, "At": 114, "suitabl": 114, "_output_nam": 114, "addition": 114, "recogn": 114, "strip": 114, "target_modul": 114, "simplehenergynod": 114, "_input_nam": 114, "hier_featur": 114, "energy_term": 114, "_main_output": 114, "_output_index_st": 114, "_auto_module_class": 114, "auto_module_class": 114, "easier": 114, "atom_hi": 114, "mol_hier": 114, "batch_hier": 114, "_parent_expand": 114, "pdindex": 114, "mixin": 114, "superclass": 114, "arbitrarili": 114, "aspect": 114, "skip": 114, "whatsoev": 114, "rout": 114, "chargemomentnod": 114, "pdxer": 114, "throw": 114, "power": 114, "simplifi": 114, "perspect": 114, "unambigu": 114, "disk": 115, "format": 115, "system_vari": 115, "n_system": 115, "variable_shap": 115, "atom_vari": 115, "bond_vari": 115, "ill": 115, "yet": 115, "json": 115, "db": 115, "xyz": 115, "traj": 115, "etc": 115, "asedatabas": 115, "ase_db_exampl": 115, "utilz": 115, "most": [116, 120], "linear": 116, "scale": [116, 120], "moment": 116, "rest": 116, "mathemat": 116, "think": 116, "integr": 116, "pretti": 116, "advantag": 116, "explain": 117, "concept": 117, "divid": 118, "conceptu": 118, "domain": 118, "One": [118, 120], "reason": 118, "cleanli": 118, "distinct": 118, "made": 118, "suffici": 118, "verbos": [118, 119], "manual": 118, "statist": 118, "subset": 118, "equal": [118, 120], "detach": 118, "accumul": 118, "expens": 118, "operatino": 118, "But": 118, "post": 118, "accomplish": 118, "pred_per_atom": 118, "peratompredict": 118, "true_per_atom": 118, "peratomtru": 118, "mae_per_atom": 118, "perhap": 118, "simpler": 118, "en_per_atom": 118, "enperatom": 118, "epa": 118, "four": 119, "hippynnrc": 119, "config": 119, "section": 119, "hippynn_local_rc_fil": 119, "rc": 119, "hippynn_": 119, "hippynn_default_plot_filetyp": 119, "overwrit": 119, "earlier": 119, "column": 119, "ye": 119, "disabl": 119, "technic": 119, "default_plot_filetyp": 119, "filetyp": 119, "pdf": 119, "png": 119, "jpg": 119, "transparent_plot": 119, "background": 119, "transpar": [119, 120], "use_custom_kernel": 119, "tri": 119, "detect": 119, "info": 119, "warn": 119, "low": 119, "radial": 119, "debug_loss_broadcast": 119, "broadcast": 119, "badli": 119, "debug_graph_execut": 119, "unless": 119, "wrong": 119, "insid": 119, "respect": 120, "being": 120, "primari": 120, "natur": 120, "ask": 120, "philosophi": 120, "effect": 120, "choic": 120, "intrins": 120, "ti": 120, "lead": 120, "smaller": 120, "allevi": 120, "incorpor": 120, "scaled_charg": 120, "atom_charg": 120, "plai": 120, "squar": 120, "manner": 120, "roughli": 120, "revers": 120}, "objects": {"hippynn": [[1, 0, 0, "-", "custom_kernels"], [73, 0, 0, "-", "layers"], [89, 0, 0, "-", "networks"]], "hippynn.custom_kernels": [[2, 0, 0, "-", "autograd_wrapper"], [3, 0, 0, "-", "env_cupy"], [4, 0, 0, "-", "env_numba"], [5, 0, 0, "-", "env_pytorch"], [6, 0, 0, "-", "fast_convert"], [1, 1, 1, "", "set_custom_kernels"], [7, 0, 0, "-", "tensor_wrapper"], [8, 0, 0, "-", "test_env_cupy"], [9, 0, 0, "-", "test_env_numba"], [10, 0, 0, "-", "utils"]], "hippynn.custom_kernels.autograd_wrapper": [[2, 1, 1, "", "wrap_envops"]], "hippynn.custom_kernels.env_cupy": [[3, 2, 1, "", "CupyEnvsum"], [3, 2, 1, "", "CupyFeatsum"], [3, 2, 1, "", "CupyGPUKernel"], [3, 2, 1, "", "CupySensesum"]], "hippynn.custom_kernels.env_cupy.CupyGPUKernel": [[3, 3, 1, "", "__init__"]], "hippynn.custom_kernels.env_numba": [[4, 2, 1, "", "WrappedEnvsum"], [4, 2, 1, "", "WrappedFeatsum"], [4, 2, 1, "", "WrappedSensesum"]], "hippynn.custom_kernels.env_numba.WrappedEnvsum": [[4, 4, 1, "", "cpu_kernel"], [4, 3, 1, "", "launch_bounds"], [4, 3, 1, "", "make_kernel"], [4, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.env_numba.WrappedFeatsum": [[4, 4, 1, "", "cpu_kernel"], [4, 3, 1, "", "launch_bounds"], [4, 3, 1, "", "make_kernel"], [4, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.env_numba.WrappedSensesum": [[4, 4, 1, "", "cpu_kernel"], [4, 3, 1, "", "launch_bounds"], [4, 3, 1, "", "make_kernel"], [4, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.env_pytorch": [[5, 1, 1, "", "envsum"], [5, 1, 1, "", "featsum"], [5, 1, 1, "", "sensesum"]], "hippynn.custom_kernels.fast_convert": [[6, 1, 1, "", "batch_convert_torch_to_numba"]], "hippynn.custom_kernels.tensor_wrapper": [[7, 2, 1, "", "NumbaCompatibleTensorFunction"], [7, 1, 1, "", "via_numpy"]], "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "cpu_kernel"], [7, 3, 1, "", "launch_bounds"], [7, 3, 1, "", "make_kernel"], [7, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.test_env_numba": [[9, 2, 1, "", "Envops_tester"], [9, 2, 1, "", "TimedSnippet"], [9, 2, 1, "", "TimerHolder"], [9, 1, 1, "", "get_simulated_data"], [9, 1, 1, "", "main"]], "hippynn.custom_kernels.test_env_numba.Envops_tester": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "all_close_witherror"], [9, 3, 1, "", "check_all_grad"], [9, 3, 1, "", "check_all_grad_once"], [9, 3, 1, "", "check_allclose"], [9, 3, 1, "", "check_allclose_once"], [9, 3, 1, "", "check_correctness"], [9, 3, 1, "", "check_empty"], [9, 3, 1, "", "check_grad_and_gradgrad"], [9, 3, 1, "", "check_speed"]], "hippynn.custom_kernels.test_env_numba.TimedSnippet": [[9, 3, 1, "", "__init__"], [9, 5, 1, "", "elapsed"]], "hippynn.custom_kernels.test_env_numba.TimerHolder": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "add"], [9, 5, 1, "", "elapsed"], [9, 5, 1, "", "mean_elapsed"], [9, 5, 1, "", "median_elapsed"]], "hippynn.custom_kernels.utils": [[10, 1, 1, "", "resort_pairs_cached"]], "hippynn.graphs": [[33, 0, 0, "-", "indextypes"]], "hippynn.graphs.indextypes": [[33, 2, 1, "", "IdxType"], [33, 1, 1, "", "clear_index_cache"], [33, 1, 1, "", "db_form"], [33, 1, 1, "", "elementwise_compare_reduce"], [33, 1, 1, "", "get_reduced_index_state"], [33, 1, 1, "", "index_type_coercion"], [34, 0, 0, "-", "reduce_funcs"], [33, 1, 1, "", "register_index_transformer"], [35, 0, 0, "-", "registry"], [33, 1, 1, "", "soft_index_type_coercion"], [36, 0, 0, "-", "type_def"]], "hippynn.graphs.indextypes.IdxType": [[33, 4, 1, "", "Atoms"], [33, 4, 1, "", "MolAtom"], [33, 4, 1, "", "MolAtomAtom"], [33, 4, 1, "", "Molecules"], [33, 4, 1, "", "NotFound"], [33, 4, 1, "", "Pair"], [33, 4, 1, "", "QuadMol"], [33, 4, 1, "", "QuadPack"], [33, 4, 1, "", "Scalar"]], "hippynn.graphs.indextypes.reduce_funcs": [[34, 1, 1, "", "db_form"], [34, 1, 1, "", "db_state_of"], [34, 1, 1, "", "dispatch_indexing"], [34, 1, 1, "", "elementwise_compare_reduce"], [34, 1, 1, "", "get_reduced_index_state"], [34, 1, 1, "", "index_type_coercion"], [34, 1, 1, "", "soft_index_type_coercion"]], "hippynn.graphs.indextypes.registry": [[35, 1, 1, "", "clear_index_cache"], [35, 1, 1, "", "register_index_transformer"]], "hippynn.graphs.indextypes.type_def": [[36, 2, 1, "", "IdxType"]], "hippynn.graphs.indextypes.type_def.IdxType": [[36, 4, 1, "", "Atoms"], [36, 4, 1, "", "MolAtom"], [36, 4, 1, "", "MolAtomAtom"], [36, 4, 1, "", "Molecules"], [36, 4, 1, "", "NotFound"], [36, 4, 1, "", "Pair"], [36, 4, 1, "", "QuadMol"], [36, 4, 1, "", "QuadPack"], [36, 4, 1, "", "Scalar"]], "hippynn.graphs.nodes": [[38, 0, 0, "-", "base"], [45, 0, 0, "-", "indexers"], [46, 0, 0, "-", "inputs"], [49, 0, 0, "-", "networks"], [50, 0, 0, "-", "pairs"], [52, 0, 0, "-", "tags"], [53, 0, 0, "-", "targets"]], "hippynn.graphs.nodes.base": [[39, 0, 0, "-", "algebra"], [40, 0, 0, "-", "base"], [41, 0, 0, "-", "definition_helpers"], [42, 0, 0, "-", "multi"], [43, 0, 0, "-", "node_functions"]], "hippynn.graphs.nodes.base.algebra": [[39, 2, 1, "", "AddNode"], [39, 2, 1, "", "AtLeast2D"], [39, 2, 1, "", "BinNode"], [39, 2, 1, "", "DivNode"], [39, 2, 1, "", "InvNode"], [39, 2, 1, "", "MulNode"], [39, 2, 1, "", "NegNode"], [39, 2, 1, "", "PowNode"], [39, 2, 1, "", "SubNode"], [39, 2, 1, "", "UnaryNode"], [39, 2, 1, "", "ValueNode"], [39, 1, 1, "", "coerces_values_to_nodes"], [39, 1, 1, "", "wrap_as_node"]], "hippynn.graphs.nodes.base.algebra.AddNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.AtLeast2D": [[39, 3, 1, "", "__init__"], [39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.BinNode": [[39, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.algebra.DivNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.InvNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.MulNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.NegNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.PowNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.SubNode": [[39, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.UnaryNode": [[39, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.algebra.ValueNode": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.base.base": [[40, 2, 1, "", "InputNode"], [40, 2, 1, "", "LossInputNode"], [40, 2, 1, "", "LossPredNode"], [40, 2, 1, "", "LossTrueNode"], [40, 2, 1, "", "Node"], [40, 2, 1, "", "SingleNode"]], "hippynn.graphs.nodes.base.base.InputNode": [[40, 3, 1, "", "__init__"], [40, 4, 1, "", "input_type_str"], [40, 4, 1, "", "requires_grad"]], "hippynn.graphs.nodes.base.base.LossInputNode": [[40, 3, 1, "", "__init__"], [40, 5, 1, "", "pred"], [40, 5, 1, "", "true"]], "hippynn.graphs.nodes.base.base.LossPredNode": [[40, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.base.LossTrueNode": [[40, 3, 1, "", "__init__"], [40, 5, 1, "", "main_output"]], "hippynn.graphs.nodes.base.definition_helpers": [[41, 2, 1, "", "AlwaysMatch"], [41, 2, 1, "", "AutoKw"], [41, 2, 1, "", "AutoNoKw"], [41, 2, 1, "", "ExpandParentMeta"], [41, 2, 1, "", "ExpandParents"], [41, 2, 1, "", "FormAssertLength"], [41, 2, 1, "", "FormAssertion"], [41, 2, 1, "", "FormHandler"], [41, 2, 1, "", "FormTransformer"], [41, 2, 1, "", "IndexFormTransformer"], [41, 2, 1, "", "MainOutputTransformer"], [41, 2, 1, "", "ParentExpander"], [41, 6, 1, "", "TupleTypeMismatch"], [41, 1, 1, "", "adds_to_forms"], [41, 1, 1, "", "format_form_name"], [41, 1, 1, "", "temporary_parents"]], "hippynn.graphs.nodes.base.definition_helpers.AutoKw": [[41, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.base.definition_helpers.AutoNoKw": [[41, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.base.definition_helpers.ExpandParents": [[41, 3, 1, "", "expand_parents"]], "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.FormAssertion": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.FormHandler": [[41, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.FormTransformer": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "add_class_doc"], [41, 3, 1, "", "fn"]], "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "add_class_doc"], [41, 3, 1, "", "fn"]], "hippynn.graphs.nodes.base.definition_helpers.ParentExpander": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "assertion"], [41, 3, 1, "", "assertlen"], [41, 3, 1, "", "get_main_outputs"], [41, 3, 1, "", "match"], [41, 3, 1, "", "matched_idx_coercion"], [41, 3, 1, "", "matchlen"], [41, 3, 1, "", "require_idx_states"]], "hippynn.graphs.nodes.base.multi": [[42, 2, 1, "", "IndexNode"], [42, 2, 1, "", "MultiNode"]], "hippynn.graphs.nodes.base.multi.IndexNode": [[42, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.multi.MultiNode": [[42, 3, 1, "", "__init__"], [42, 5, 1, "", "main_output"], [42, 3, 1, "", "set_dbname"]], "hippynn.graphs.nodes.base.node_functions": [[43, 6, 1, "", "NodeAmbiguityError"], [43, 6, 1, "", "NodeNotFound"], [43, 6, 1, "", "NodeOperationError"], [43, 1, 1, "", "find_relatives"], [43, 1, 1, "", "find_unique_relative"], [43, 1, 1, "", "get_connected_nodes"]], "hippynn.graphs.nodes.indexers": [[45, 2, 1, "", "AtomDeIndexer"], [45, 2, 1, "", "AtomReIndexer"], [45, 2, 1, "", "FilterBondsOneway"], [45, 2, 1, "", "FuzzyHistogrammer"], [45, 2, 1, "", "OneHotEncoder"], [45, 2, 1, "", "PaddingIndexer"], [45, 2, 1, "", "QuadUnpackNode"], [45, 2, 1, "", "SysMaxOfAtomsNode"], [45, 1, 1, "", "acquire_encoding_padding"]], "hippynn.graphs.nodes.indexers.AtomDeIndexer": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.indexers.AtomReIndexer": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "expand0"], [45, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.indexers.FilterBondsOneway": [[45, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.indexers.FuzzyHistogrammer": [[45, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.indexers.OneHotEncoder": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.indexers.PaddingIndexer": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.indexers.QuadUnpackNode": [[45, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.indexers.SysMaxOfAtomsNode": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "expansion0"], [45, 3, 1, "", "expansion1"]], "hippynn.graphs.nodes.inputs": [[46, 2, 1, "", "CellNode"], [46, 2, 1, "", "ForceNode"], [46, 2, 1, "", "Indices"], [46, 2, 1, "", "InputCharges"], [46, 2, 1, "", "PairIndices"], [46, 2, 1, "", "PositionsNode"], [46, 2, 1, "", "SpeciesNode"], [46, 2, 1, "", "SplitIndices"]], "hippynn.graphs.nodes.inputs.CellNode": [[46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.ForceNode": [[46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.Indices": [[46, 3, 1, "", "__init__"], [46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.InputCharges": [[46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.PairIndices": [[46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.PositionsNode": [[46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.SpeciesNode": [[46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.SplitIndices": [[46, 3, 1, "", "__init__"], [46, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.networks": [[49, 2, 1, "", "DefaultNetworkExpansion"], [49, 2, 1, "", "Hipnn"], [49, 2, 1, "", "HipnnQuad"], [49, 2, 1, "", "HipnnVec"]], "hippynn.graphs.nodes.networks.DefaultNetworkExpansion": [[49, 3, 1, "", "expansion0"], [49, 3, 1, "", "expansion1"]], "hippynn.graphs.nodes.networks.Hipnn": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "expansion2"]], "hippynn.graphs.nodes.networks.HipnnVec": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "expansion2"]], "hippynn.graphs.nodes.pairs": [[50, 2, 1, "", "DynamicPeriodicPairs"], [50, 2, 1, "", "ExternalNeighborIndexer"], [50, 2, 1, "", "KDTreePairs"], [50, 2, 1, "", "KDTreePairsMemory"], [50, 2, 1, "", "Memory"], [50, 2, 1, "", "MinDistNode"], [50, 2, 1, "", "NumpyDynamicPairs"], [50, 2, 1, "", "OpenPairIndexer"], [50, 2, 1, "", "PaddedNeighborNode"], [50, 2, 1, "", "PairCacher"], [50, 2, 1, "", "PairDeIndexer"], [50, 2, 1, "", "PairFilter"], [50, 2, 1, "", "PairReIndexer"], [50, 2, 1, "", "PairUncacher"], [50, 2, 1, "", "PeriodicPairIndexer"], [50, 2, 1, "", "PeriodicPairIndexerMemory"], [50, 2, 1, "", "PeriodicPairOutputs"], [50, 2, 1, "", "RDFBins"]], "hippynn.graphs.nodes.pairs.ExternalNeighborIndexer": [[50, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.pairs.KDTreePairsMemory": [[50, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.pairs.Memory": [[50, 3, 1, "", "reset_reuse_percentage"], [50, 5, 1, "", "reuse_percentage"], [50, 5, 1, "", "skin"]], "hippynn.graphs.nodes.pairs.MinDistNode": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"], [50, 3, 1, "", "expand2"]], "hippynn.graphs.nodes.pairs.OpenPairIndexer": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "auto_module"], [50, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.pairs.PaddedNeighborNode": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.pairs.PairCacher": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PairDeIndexer": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PairFilter": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.pairs.PairReIndexer": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PairUncacher": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PeriodicPairIndexer": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PeriodicPairIndexerMemory": [[50, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.pairs.RDFBins": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "expand0"], [50, 3, 1, "", "expand1"], [50, 3, 1, "", "expand2"], [50, 3, 1, "", "expand3"]], "hippynn.graphs.nodes.tags": [[52, 2, 1, "", "AtomIndexer"], [52, 2, 1, "", "Charges"], [52, 2, 1, "", "Encoder"], [52, 2, 1, "", "Energies"], [52, 2, 1, "", "HAtomRegressor"], [52, 2, 1, "", "Network"], [52, 2, 1, "", "PairCache"], [52, 2, 1, "", "PairIndexer"], [52, 2, 1, "", "Positions"], [52, 2, 1, "", "Species"]], "hippynn.graphs.nodes.tags.Encoder": [[52, 4, 1, "", "species_set"]], "hippynn.graphs.nodes.targets": [[53, 2, 1, "", "HBondNode"], [53, 2, 1, "", "HChargeNode"], [53, 2, 1, "", "HEnergyNode"], [53, 2, 1, "", "LocalChargeEnergy"]], "hippynn.graphs.nodes.targets.HBondNode": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "expand0"], [53, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.targets.HChargeNode": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "expansion0"]], "hippynn.graphs.nodes.targets.HEnergyNode": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "expansion0"]], "hippynn.graphs.nodes.targets.LocalChargeEnergy": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "expansion0"]], "hippynn.layers": [[74, 0, 0, "-", "algebra"], [75, 0, 0, "-", "excited"], [76, 0, 0, "-", "hiplayers"], [77, 0, 0, "-", "indexers"], [78, 0, 0, "-", "pairs"], [85, 0, 0, "-", "physics"], [86, 0, 0, "-", "regularization"], [87, 0, 0, "-", "targets"], [88, 0, 0, "-", "transform"]], "hippynn.layers.algebra": [[74, 2, 1, "", "AtLeast2D"], [74, 2, 1, "", "Idx"], [74, 2, 1, "", "LambdaModule"], [74, 2, 1, "", "ListMod"], [74, 2, 1, "", "ValueMod"]], "hippynn.layers.algebra.AtLeast2D": [[74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.algebra.Idx": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "extra_repr"], [74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.algebra.LambdaModule": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "extra_repr"], [74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.algebra.ListMod": [[74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.algebra.ValueMod": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "extra_repr"], [74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.excited": [[75, 2, 1, "", "LocalEnergy"], [75, 2, 1, "", "NACR"], [75, 2, 1, "", "NACRMultiState"]], "hippynn.layers.excited.LocalEnergy": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "forward"], [75, 4, 1, "", "training"]], "hippynn.layers.excited.NACR": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "forward"], [75, 4, 1, "", "training"]], "hippynn.layers.excited.NACRMultiState": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "forward"], [75, 4, 1, "", "training"]], "hippynn.layers.hiplayers": [[76, 2, 1, "", "CosCutoff"], [76, 2, 1, "", "GaussianSensitivityModule"], [76, 2, 1, "", "InteractLayer"], [76, 2, 1, "", "InteractLayerQuad"], [76, 2, 1, "", "InteractLayerVec"], [76, 2, 1, "", "InverseSensitivityModule"], [76, 2, 1, "", "SensitivityBottleneck"], [76, 2, 1, "", "SensitivityModule"], [76, 1, 1, "", "warn_if_under"]], "hippynn.layers.hiplayers.CosCutoff": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.GaussianSensitivityModule": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InteractLayer": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 3, 1, "", "regularization_params"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InteractLayerQuad": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InteractLayerVec": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InverseSensitivityModule": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.SensitivityBottleneck": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.hiplayers.SensitivityModule": [[76, 3, 1, "", "__init__"], [76, 4, 1, "", "training"]], "hippynn.layers.indexers": [[77, 2, 1, "", "AtomDeIndexer"], [77, 2, 1, "", "AtomReIndexer"], [77, 2, 1, "", "CellScaleInducer"], [77, 2, 1, "", "FilterBondsOneway"], [77, 2, 1, "", "FuzzyHistogram"], [77, 2, 1, "", "MolSummer"], [77, 2, 1, "", "OneHotSpecies"], [77, 2, 1, "", "PaddingIndexer"], [77, 2, 1, "", "QuadPack"], [77, 2, 1, "", "QuadUnpack"], [77, 2, 1, "", "SysMaxOfAtoms"]], "hippynn.layers.indexers.AtomDeIndexer": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.AtomReIndexer": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.CellScaleInducer": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.FilterBondsOneway": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.FuzzyHistogram": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.MolSummer": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.OneHotSpecies": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.PaddingIndexer": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.QuadPack": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.QuadUnpack": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.indexers.SysMaxOfAtoms": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.pairs": [[79, 0, 0, "-", "analysis"], [80, 0, 0, "-", "dispatch"], [81, 0, 0, "-", "filters"], [82, 0, 0, "-", "indexing"], [83, 0, 0, "-", "open"], [84, 0, 0, "-", "periodic"]], "hippynn.layers.pairs.analysis": [[79, 2, 1, "", "MinDistModule"], [79, 2, 1, "", "RDFBins"], [79, 1, 1, "", "min_dist_info"]], "hippynn.layers.pairs.analysis.MinDistModule": [[79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.pairs.analysis.RDFBins": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "bin_info"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.pairs.dispatch": [[80, 2, 1, "", "KDTreeNeighbors"], [80, 2, 1, "", "KDTreePairsMemory"], [80, 2, 1, "", "NPNeighbors"], [80, 2, 1, "", "TorchNeighbors"], [80, 1, 1, "", "neighbor_list_kdtree"], [80, 1, 1, "", "neighbor_list_np"], [80, 1, 1, "", "wrap_points_np"]], "hippynn.layers.pairs.dispatch.KDTreeNeighbors": [[80, 3, 1, "", "compute_one"], [80, 4, 1, "", "training"]], "hippynn.layers.pairs.dispatch.KDTreePairsMemory": [[80, 3, 1, "", "forward"], [80, 4, 1, "", "training"]], "hippynn.layers.pairs.dispatch.NPNeighbors": [[80, 3, 1, "", "compute_one"], [80, 4, 1, "", "training"]], "hippynn.layers.pairs.dispatch.TorchNeighbors": [[80, 3, 1, "", "compute_one"], [80, 4, 1, "", "training"]], "hippynn.layers.pairs.filters": [[81, 2, 1, "", "FilterDistance"]], "hippynn.layers.pairs.filters.FilterDistance": [[81, 3, 1, "", "forward"], [81, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing": [[82, 2, 1, "", "ExternalNeighbors"], [82, 2, 1, "", "MolPairSummer"], [82, 2, 1, "", "PaddedNeighModule"], [82, 2, 1, "", "PairCacher"], [82, 2, 1, "", "PairDeIndexer"], [82, 2, 1, "", "PairReIndexer"], [82, 2, 1, "", "PairUncacher"], [82, 1, 1, "", "padded_neighlist"]], "hippynn.layers.pairs.indexing.ExternalNeighbors": [[82, 3, 1, "", "forward"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.MolPairSummer": [[82, 3, 1, "", "forward"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PaddedNeighModule": [[82, 3, 1, "", "forward"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairCacher": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "forward"], [82, 3, 1, "", "set_images"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairDeIndexer": [[82, 3, 1, "", "forward"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairReIndexer": [[82, 3, 1, "", "forward"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairUncacher": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "forward"], [82, 3, 1, "", "set_images"], [82, 4, 1, "", "training"]], "hippynn.layers.pairs.open": [[83, 2, 1, "", "OpenPairIndexer"], [83, 2, 1, "", "PairMemory"]], "hippynn.layers.pairs.open.OpenPairIndexer": [[83, 3, 1, "", "forward"], [83, 4, 1, "", "training"]], "hippynn.layers.pairs.open.PairMemory": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "initialize_buffers"], [83, 3, 1, "", "recalculation_needed"], [83, 3, 1, "", "reset_reuse_percentage"], [83, 5, 1, "", "reuse_percentage"], [83, 3, 1, "", "set_skin"], [83, 5, 1, "", "skin"], [83, 4, 1, "", "training"]], "hippynn.layers.pairs.periodic": [[84, 2, 1, "", "PeriodicPairIndexer"], [84, 2, 1, "", "PeriodicPairIndexerMemory"], [84, 2, 1, "", "StaticImagePeriodicPairIndexer"]], "hippynn.layers.pairs.periodic.PeriodicPairIndexer": [[84, 3, 1, "", "forward"], [84, 4, 1, "", "training"]], "hippynn.layers.pairs.periodic.PeriodicPairIndexerMemory": [[84, 3, 1, "", "forward"], [84, 4, 1, "", "training"]], "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "forward"], [84, 4, 1, "", "training"]], "hippynn.layers.physics": [[85, 2, 1, "", "AlphaScreening"], [85, 2, 1, "", "CombineEnergy"], [85, 2, 1, "", "CombineScreenings"], [85, 2, 1, "", "CoulombEnergy"], [85, 2, 1, "", "Dipole"], [85, 2, 1, "", "EwaldRealSpaceScreening"], [85, 2, 1, "", "Gradient"], [85, 2, 1, "", "LocalDampingCosine"], [85, 2, 1, "", "MultiGradient"], [85, 2, 1, "", "PerAtom"], [85, 2, 1, "", "QScreening"], [85, 2, 1, "", "Quadrupole"], [85, 2, 1, "", "ScreenedCoulombEnergy"], [85, 2, 1, "", "StressForce"], [85, 2, 1, "", "VecMag"], [85, 2, 1, "", "WolfScreening"]], "hippynn.layers.physics.AlphaScreening": [[85, 3, 1, "", "__init__"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.CombineEnergy": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.CombineScreenings": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.CoulombEnergy": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.Dipole": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.EwaldRealSpaceScreening": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.Gradient": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.LocalDampingCosine": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.MultiGradient": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.PerAtom": [[85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.QScreening": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 5, 1, "", "p_value"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.Quadrupole": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.ScreenedCoulombEnergy": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.StressForce": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.VecMag": [[85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.physics.WolfScreening": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "forward"], [85, 4, 1, "", "training"]], "hippynn.layers.regularization": [[86, 2, 1, "", "LPReg"]], "hippynn.layers.regularization.LPReg": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "forward"], [86, 4, 1, "", "training"]], "hippynn.layers.targets": [[87, 2, 1, "", "HBondSymmetric"], [87, 2, 1, "", "HCharge"], [87, 2, 1, "", "HEnergy"], [87, 2, 1, "", "LocalChargeEnergy"]], "hippynn.layers.targets.HBondSymmetric": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "forward"], [87, 4, 1, "", "training"]], "hippynn.layers.targets.HCharge": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "forward"], [87, 4, 1, "", "training"]], "hippynn.layers.targets.HEnergy": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "forward"], [87, 4, 1, "", "training"]], "hippynn.layers.targets.LocalChargeEnergy": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "forward"], [87, 4, 1, "", "training"]], "hippynn.layers.transform": [[88, 2, 1, "", "ResNetWrapper"]], "hippynn.layers.transform.ResNetWrapper": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "forward"], [88, 3, 1, "", "regularization_params"], [88, 4, 1, "", "training"]], "hippynn.networks": [[90, 0, 0, "-", "hipnn"]], "hippynn.networks.hipnn": [[90, 2, 1, "", "Hipnn"], [90, 2, 1, "", "HipnnQuad"], [90, 2, 1, "", "HipnnVec"], [90, 1, 1, "", "compute_hipnn_e0"]], "hippynn.networks.hipnn.Hipnn": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "forward"], [90, 5, 1, "", "interaction_layers"], [90, 3, 1, "", "regularization_params"], [90, 5, 1, "", "sensitivity_layers"], [90, 4, 1, "", "training"]], "hippynn.networks.hipnn.HipnnQuad": [[90, 4, 1, "", "resnet"], [90, 4, 1, "", "training"]], "hippynn.networks.hipnn.HipnnVec": [[90, 3, 1, "", "forward"], [90, 4, 1, "", "resnet"], [90, 4, 1, "", "training"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"hippynn": [0, 97, 109, 113, 116, 119, 120], "packag": [0, 1, 11, 17, 26, 29, 33, 37, 38, 56, 57, 62, 64, 72, 73, 78, 89, 91], "custom_kernel": 1, "autograd_wrapp": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96], "env_cupi": 3, "env_numba": 4, "env_pytorch": 5, "fast_convert": 6, "tensor_wrapp": 7, "test_env_cupi": 8, "test_env_numba": 9, "util": 10, "databas": [11, 13, 115], "snapjson": 12, "h5_pyanitool": 14, "ondisk": 15, "restart": [16, 108], "experi": [17, 113, 116], "assembli": 18, "control": [19, 99], "devic": [20, 108], "evalu": 21, "metric_track": 22, "routin": 23, "serial": 24, "step_funct": 25, "graph": [26, 28, 113, 116, 118], "gop": 27, "indextransform": 29, "atom": 30, "pair": [31, 50, 78, 105], "tensor": 32, "indextyp": 33, "reduce_func": 34, "registri": 35, "type_def": 36, "node": [37, 113, 114], "base": [38, 40], "algebra": [39, 74], "definition_help": 41, "multi": 42, "node_funct": 43, "excit": [44, 75, 100], "index": [45, 77, 82], "input": 46, "loss": [47, 118], "misc": 48, "network": [49, 89, 113], "physic": [51, 85], "tag": 52, "target": [53, 87], "predictor": [54, 107], "viz": 55, "interfac": [56, 104, 116], "ase_interfac": 57, "ase_databas": 58, "ase_unittest": 59, "calcul": [60, 98], "pairfind": 61, "lammps_interfac": 62, "mliap_interfac": 63, "pyseqm_interfac": 64, "callback": 65, "check": 66, "gen_par": 67, "mlseqm": 68, "seqm_modul": 69, "seqm_nod": 70, "seqm_on": 71, "schnetpack_interfac": 72, "layer": [73, 113, 116], "hiplay": 76, "analysi": 79, "dispatch": 80, "filter": 81, "open": 83, "period": [84, 105], "regular": 86, "transform": 88, "hipnn": 90, "plot": [91, 106, 116], "plotmak": 92, "plotter": 93, "timeplot": 94, "pretrain": 95, "tool": 96, "ASE": [98, 115], "non": 100, "adiabiat": 100, "state": 100, "forc": 101, "train": [101, 108, 116], "exampl": 102, "minim": 103, "workflow": 103, "lammp": 104, "boundari": 105, "condit": 105, "dynam": 105, "finder": 105, "memori": 105, "cach": 105, "pre": 105, "comput": 105, "what": [105, 109], "": [105, 109], "yet": 105, "support": 105, "simpl": [108, 116], "cross": 108, "advanc": 108, "detail": 108, "welcom": 109, "document": 109, "i": 109, "content": [109, 117], "indic": 109, "tabl": 109, "instal": 110, "requir": 110, "instruct": 110, "depend": 110, "us": 110, "conda": 110, "pip": 110, "note": 110, "licens": 111, "custom": [112, 114, 116], "kernel": [112, 116], "concept": 113, "creat": 114, "type": 114, "The": 114, "veri": 114, "basic": 114, "A": 114, "multinod": 114, "parent": 114, "expans": 114, "ad": 114, "constraint": 114, "possibl": 114, "object": 115, "handl": 115, "featur": 116, "modular": 116, "set": [116, 119], "pytorch": 116, "atomist": 116, "oper": 116, "level": 116, "api": 116, "flexibl": 116, "construct": 116, "model": [116, 118], "from": 116, "compon": 116, "track": 116, "your": 116, "fast": 116, "execut": 116, "user": 117, "guid": 117, "librari": 119, "summari": 119, "unit": 120}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"hippynn package": [[0, "hippynn-package"]], "custom_kernels package": [[1, "custom-kernels-package"]], "autograd_wrapper module": [[2, "autograd-wrapper-module"]], "env_cupy module": [[3, "env-cupy-module"]], "env_numba module": [[4, "env-numba-module"]], "env_pytorch module": [[5, "env-pytorch-module"]], "fast_convert module": [[6, "fast-convert-module"]], "tensor_wrapper module": [[7, "tensor-wrapper-module"]], "test_env_cupy module": [[8, "test-env-cupy-module"]], "test_env_numba module": [[9, "test-env-numba-module"]], "utils module": [[10, "utils-module"]], "databases package": [[11, "databases-package"]], "SNAPJson module": [[12, "snapjson-module"]], "database module": [[13, "database-module"]], "h5_pyanitools module": [[14, "h5-pyanitools-module"]], "ondisk module": [[15, "ondisk-module"]], "restarter module": [[16, "restarter-module"]], "experiment package": [[17, "experiment-package"]], "assembly module": [[18, "assembly-module"]], "controllers module": [[19, "controllers-module"]], "device module": [[20, "device-module"]], "evaluator module": [[21, "evaluator-module"]], "metric_tracker module": [[22, "metric-tracker-module"]], "routines module": [[23, "routines-module"]], "serialization module": [[24, "serialization-module"]], "step_functions module": [[25, "step-functions-module"]], "graphs package": [[26, "graphs-package"]], "gops module": [[27, "gops-module"]], "graph module": [[28, "graph-module"]], "indextransformers package": [[29, "indextransformers-package"]], "atoms module": [[30, "atoms-module"]], "pairs module": [[31, "pairs-module"], [50, "pairs-module"]], "tensors module": [[32, "tensors-module"]], "indextypes package": [[33, "indextypes-package"]], "reduce_funcs module": [[34, "reduce-funcs-module"]], "registry module": [[35, "registry-module"]], "type_def module": [[36, "type-def-module"]], "nodes package": [[37, "nodes-package"]], "base package": [[38, "base-package"]], "algebra module": [[39, "algebra-module"], [74, "algebra-module"]], "base module": [[40, "base-module"]], "definition_helpers module": [[41, "definition-helpers-module"]], "multi module": [[42, "multi-module"]], "node_functions module": [[43, "node-functions-module"]], "excited module": [[44, "excited-module"], [75, "excited-module"]], "indexers module": [[45, "indexers-module"], [77, "indexers-module"]], "inputs module": [[46, "inputs-module"]], "loss module": [[47, "loss-module"]], "misc module": [[48, "misc-module"]], "networks module": [[49, "networks-module"]], "physics module": [[51, "physics-module"], [85, "physics-module"]], "tags module": [[52, "tags-module"]], "targets module": [[53, "targets-module"], [87, "targets-module"]], "predictor module": [[54, "predictor-module"]], "viz module": [[55, "viz-module"]], "interfaces package": [[56, "interfaces-package"]], "ase_interface package": [[57, "ase-interface-package"]], "ase_database module": [[58, "ase-database-module"]], "ase_unittests module": [[59, "ase-unittests-module"]], "calculator module": [[60, "calculator-module"]], "pairfinder module": [[61, "pairfinder-module"]], "lammps_interface package": [[62, "lammps-interface-package"]], "mliap_interface module": [[63, "mliap-interface-module"]], "pyseqm_interface package": [[64, "pyseqm-interface-package"]], "callback module": [[65, "callback-module"]], "check module": [[66, "check-module"]], "gen_par module": [[67, "gen-par-module"]], "mlseqm module": [[68, "mlseqm-module"]], "seqm_modules module": [[69, "seqm-modules-module"]], "seqm_nodes module": [[70, "seqm-nodes-module"]], "seqm_one module": [[71, "seqm-one-module"]], "schnetpack_interface package": [[72, "schnetpack-interface-package"]], "layers package": [[73, "layers-package"]], "hiplayers module": [[76, "hiplayers-module"]], "pairs package": [[78, "pairs-package"]], "analysis module": [[79, "analysis-module"]], "dispatch module": [[80, "dispatch-module"]], "filters module": [[81, "filters-module"]], "indexing module": [[82, "indexing-module"]], "open module": [[83, "open-module"]], "periodic module": [[84, "periodic-module"]], "regularization module": [[86, "regularization-module"]], "transform module": [[88, "transform-module"]], "networks package": [[89, "networks-package"]], "hipnn module": [[90, "hipnn-module"]], "plotting package": [[91, "plotting-package"]], "plotmaker module": [[92, "plotmaker-module"]], "plotters module": [[93, "plotters-module"]], "timeplots module": [[94, "timeplots-module"]], "pretraining module": [[95, "pretraining-module"]], "tools module": [[96, "tools-module"]], "hippynn": [[97, "hippynn"]], "ASE Calculators": [[98, "ase-calculators"]], "Controller": [[99, "controller"]], "Non-Adiabiatic Excited States": [[100, "non-adiabiatic-excited-states"]], "Force Training": [[101, "force-training"]], "Examples": [[102, "examples"]], "Minimal Workflow": [[103, "minimal-workflow"]], "LAMMPS interface": [[104, "lammps-interface"]], "Periodic Boundary Conditions": [[105, "periodic-boundary-conditions"]], "Dynamic Pair Finder": [[105, "dynamic-pair-finder"]], "Pair Finder Memory": [[105, "pair-finder-memory"]], "Caching Pre-computed Pairs": [[105, "caching-pre-computed-pairs"]], "What\u2019s not yet supported": [[105, "what-s-not-yet-supported"]], "Plotting": [[106, "plotting"]], "Predictor": [[107, "predictor"]], "Restarting training": [[108, "restarting-training"]], "Simple restart": [[108, "simple-restart"]], "Cross-device restart": [[108, "cross-device-restart"]], "Advanced Details": [[108, "advanced-details"]], "Welcome to hippynn\u2019s documentation!": [[109, "welcome-to-hippynn-s-documentation"]], "What is hippynn?": [[109, "what-is-hippynn"]], "Contents:": [[109, null], [117, null]], "Indices and tables": [[109, "indices-and-tables"]], "Installation": [[110, "installation"]], "Requirements": [[110, "requirements"]], "Installation Instructions": [[110, "installation-instructions"]], "Dependencies using conda": [[110, "dependencies-using-conda"]], "Dependencies using pip": [[110, "dependencies-using-pip"]], "Notes": [[110, "notes"]], "License": [[111, "license"]], "Custom Kernels": [[112, "custom-kernels"]], "hippynn Concepts": [[113, "hippynn-concepts"]], "Layers/Networks": [[113, "layers-networks"]], "Nodes": [[113, "nodes"]], "Graphs": [[113, "graphs"]], "Experiment": [[113, "experiment"]], "Creating Custom Node Types": [[114, "creating-custom-node-types"]], "The very basics": [[114, "the-very-basics"]], "A MultiNode": [[114, "a-multinode"]], "Parent expansion": [[114, "parent-expansion"]], "Adding constraints to possible parents": [[114, "adding-constraints-to-possible-parents"]], "Databases": [[115, "databases"]], "ASE Objects Database handling": [[115, "ase-objects-database-handling"]], "hippynn Features": [[116, "hippynn-features"]], "Modular set of pytorch layers for atomistic operations": [[116, "modular-set-of-pytorch-layers-for-atomistic-operations"]], "Graph level API for simple and flexible construction of models from pytorch components.": [[116, "graph-level-api-for-simple-and-flexible-construction-of-models-from-pytorch-components"]], "Plot level API for tracking your training.": [[116, "plot-level-api-for-tracking-your-training"]], "Training & Experiment API": [[116, "training-experiment-api"]], "Custom Kernels for fast execution": [[116, "custom-kernels-for-fast-execution"]], "Interfaces": [[116, "interfaces"]], "User Guide": [[117, "user-guide"]], "Model and Loss Graphs": [[118, "model-and-loss-graphs"]], "Library Settings": [[119, "library-settings"]], "Hippynn Settings Summary": [[119, "id1"]], "Units in hippynn": [[120, "units-in-hippynn"]]}, "indexentries": {"hippynn.custom_kernels": [[1, "module-hippynn.custom_kernels"]], "module": [[1, "module-hippynn.custom_kernels"], [2, "module-hippynn.custom_kernels.autograd_wrapper"], [3, "module-hippynn.custom_kernels.env_cupy"], [4, "module-hippynn.custom_kernels.env_numba"], [5, "module-hippynn.custom_kernels.env_pytorch"], [6, "module-hippynn.custom_kernels.fast_convert"], [7, "module-hippynn.custom_kernels.tensor_wrapper"], [8, "module-hippynn.custom_kernels.test_env_cupy"], [9, "module-hippynn.custom_kernels.test_env_numba"], [10, "module-hippynn.custom_kernels.utils"], [33, "module-hippynn.graphs.indextypes"], [34, "module-hippynn.graphs.indextypes.reduce_funcs"], [35, "module-hippynn.graphs.indextypes.registry"], [36, "module-hippynn.graphs.indextypes.type_def"], [38, "module-hippynn.graphs.nodes.base"], [39, "module-hippynn.graphs.nodes.base.algebra"], [40, "module-hippynn.graphs.nodes.base.base"], [41, "module-hippynn.graphs.nodes.base.definition_helpers"], [42, "module-hippynn.graphs.nodes.base.multi"], [43, "module-hippynn.graphs.nodes.base.node_functions"], [45, "module-hippynn.graphs.nodes.indexers"], [46, "module-hippynn.graphs.nodes.inputs"], [49, "module-hippynn.graphs.nodes.networks"], [50, "module-hippynn.graphs.nodes.pairs"], [52, "module-hippynn.graphs.nodes.tags"], [53, "module-hippynn.graphs.nodes.targets"], [73, "module-hippynn.layers"], [74, "module-hippynn.layers.algebra"], [75, "module-hippynn.layers.excited"], [76, "module-hippynn.layers.hiplayers"], [77, "module-hippynn.layers.indexers"], [78, "module-hippynn.layers.pairs"], [79, "module-hippynn.layers.pairs.analysis"], [80, "module-hippynn.layers.pairs.dispatch"], [81, "module-hippynn.layers.pairs.filters"], [82, "module-hippynn.layers.pairs.indexing"], [83, "module-hippynn.layers.pairs.open"], [84, "module-hippynn.layers.pairs.periodic"], [85, "module-hippynn.layers.physics"], [86, "module-hippynn.layers.regularization"], [87, "module-hippynn.layers.targets"], [88, "module-hippynn.layers.transform"], [89, "module-hippynn.networks"], [90, "module-hippynn.networks.hipnn"]], "set_custom_kernels() (in module hippynn.custom_kernels)": [[1, "hippynn.custom_kernels.set_custom_kernels"]], "hippynn.custom_kernels.autograd_wrapper": [[2, "module-hippynn.custom_kernels.autograd_wrapper"]], "wrap_envops() (in module hippynn.custom_kernels.autograd_wrapper)": [[2, "hippynn.custom_kernels.autograd_wrapper.wrap_envops"]], "cupyenvsum (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupyEnvsum"]], "cupyfeatsum (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupyFeatsum"]], "cupygpukernel (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupyGPUKernel"]], "cupysensesum (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupySensesum"]], "__init__() (cupygpukernel method)": [[3, "hippynn.custom_kernels.env_cupy.CupyGPUKernel.__init__"]], "hippynn.custom_kernels.env_cupy": [[3, "module-hippynn.custom_kernels.env_cupy"]], "wrappedenvsum (class in hippynn.custom_kernels.env_numba)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum"]], "wrappedfeatsum (class in hippynn.custom_kernels.env_numba)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum"]], "wrappedsensesum (class in hippynn.custom_kernels.env_numba)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum"]], "cpu_kernel (wrappedenvsum attribute)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.cpu_kernel"]], "cpu_kernel (wrappedfeatsum attribute)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.cpu_kernel"]], "cpu_kernel (wrappedsensesum attribute)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.cpu_kernel"]], "hippynn.custom_kernels.env_numba": [[4, "module-hippynn.custom_kernels.env_numba"]], "launch_bounds() (wrappedenvsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.launch_bounds"]], "launch_bounds() (wrappedfeatsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.launch_bounds"]], "launch_bounds() (wrappedsensesum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.launch_bounds"]], "make_kernel() (wrappedenvsum static method)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.make_kernel"]], "make_kernel() (wrappedfeatsum static method)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.make_kernel"]], "make_kernel() (wrappedsensesum static method)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.make_kernel"]], "out_shape() (wrappedenvsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.out_shape"]], "out_shape() (wrappedfeatsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.out_shape"]], "out_shape() (wrappedsensesum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.out_shape"]], "envsum() (in module hippynn.custom_kernels.env_pytorch)": [[5, "hippynn.custom_kernels.env_pytorch.envsum"]], "featsum() (in module hippynn.custom_kernels.env_pytorch)": [[5, "hippynn.custom_kernels.env_pytorch.featsum"]], "hippynn.custom_kernels.env_pytorch": [[5, "module-hippynn.custom_kernels.env_pytorch"]], "sensesum() (in module hippynn.custom_kernels.env_pytorch)": [[5, "hippynn.custom_kernels.env_pytorch.sensesum"]], "batch_convert_torch_to_numba() (in module hippynn.custom_kernels.fast_convert)": [[6, "hippynn.custom_kernels.fast_convert.batch_convert_torch_to_numba"]], "hippynn.custom_kernels.fast_convert": [[6, "module-hippynn.custom_kernels.fast_convert"]], "numbacompatibletensorfunction (class in hippynn.custom_kernels.tensor_wrapper)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction"]], "__init__() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.__init__"]], "cpu_kernel() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.cpu_kernel"]], "hippynn.custom_kernels.tensor_wrapper": [[7, "module-hippynn.custom_kernels.tensor_wrapper"]], "launch_bounds() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.launch_bounds"]], "make_kernel() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.make_kernel"]], "out_shape() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.out_shape"]], "via_numpy() (in module hippynn.custom_kernels.tensor_wrapper)": [[7, "hippynn.custom_kernels.tensor_wrapper.via_numpy"]], "hippynn.custom_kernels.test_env_cupy": [[8, "module-hippynn.custom_kernels.test_env_cupy"]], "envops_tester (class in hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester"]], "timedsnippet (class in hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.TimedSnippet"]], "timerholder (class in hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder"]], "__init__() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.__init__"]], "__init__() (timedsnippet method)": [[9, "hippynn.custom_kernels.test_env_numba.TimedSnippet.__init__"]], "__init__() (timerholder method)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.__init__"]], "add() (timerholder method)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.add"]], "all_close_witherror() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.all_close_witherror"]], "check_all_grad() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_all_grad"]], "check_all_grad_once() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_all_grad_once"]], "check_allclose() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_allclose"]], "check_allclose_once() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_allclose_once"]], "check_correctness() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_correctness"]], "check_empty() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_empty"]], "check_grad_and_gradgrad() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_grad_and_gradgrad"]], "check_speed() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_speed"]], "elapsed (timedsnippet property)": [[9, "hippynn.custom_kernels.test_env_numba.TimedSnippet.elapsed"]], "elapsed (timerholder property)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.elapsed"]], "get_simulated_data() (in module hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.get_simulated_data"]], "hippynn.custom_kernels.test_env_numba": [[9, "module-hippynn.custom_kernels.test_env_numba"]], "main() (in module hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.main"]], "mean_elapsed (timerholder property)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.mean_elapsed"]], "median_elapsed (timerholder property)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.median_elapsed"]], "hippynn.custom_kernels.utils": [[10, "module-hippynn.custom_kernels.utils"]], "resort_pairs_cached() (in module hippynn.custom_kernels.utils)": [[10, "hippynn.custom_kernels.utils.resort_pairs_cached"]], "atoms (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.Atoms"], [36, "hippynn.graphs.indextypes.type_def.IdxType.Atoms"]], "idxtype (class in hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.IdxType"]], "molatom (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.MolAtom"], [36, "hippynn.graphs.indextypes.type_def.IdxType.MolAtom"]], "molatomatom (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.MolAtomAtom"], [36, "hippynn.graphs.indextypes.type_def.IdxType.MolAtomAtom"]], "molecules (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.Molecules"], [36, "hippynn.graphs.indextypes.type_def.IdxType.Molecules"]], "notfound (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.NotFound"], [36, "hippynn.graphs.indextypes.type_def.IdxType.NotFound"]], "pair (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.Pair"], [36, "hippynn.graphs.indextypes.type_def.IdxType.Pair"]], "quadmol (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.QuadMol"], [36, "hippynn.graphs.indextypes.type_def.IdxType.QuadMol"]], "quadpack (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.QuadPack"], [36, "hippynn.graphs.indextypes.type_def.IdxType.QuadPack"]], "scalar (idxtype attribute)": [[33, "hippynn.graphs.indextypes.IdxType.Scalar"], [36, "hippynn.graphs.indextypes.type_def.IdxType.Scalar"]], "clear_index_cache() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.clear_index_cache"]], "db_form() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.db_form"]], "elementwise_compare_reduce() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.elementwise_compare_reduce"]], "get_reduced_index_state() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.get_reduced_index_state"]], "hippynn.graphs.indextypes": [[33, "module-hippynn.graphs.indextypes"]], "index_type_coercion() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.index_type_coercion"]], "register_index_transformer() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.register_index_transformer"]], "soft_index_type_coercion() (in module hippynn.graphs.indextypes)": [[33, "hippynn.graphs.indextypes.soft_index_type_coercion"]], "db_form() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.db_form"]], "db_state_of() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.db_state_of"]], "dispatch_indexing() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.dispatch_indexing"]], "elementwise_compare_reduce() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.elementwise_compare_reduce"]], "get_reduced_index_state() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.get_reduced_index_state"]], "hippynn.graphs.indextypes.reduce_funcs": [[34, "module-hippynn.graphs.indextypes.reduce_funcs"]], "index_type_coercion() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.index_type_coercion"]], "soft_index_type_coercion() (in module hippynn.graphs.indextypes.reduce_funcs)": [[34, "hippynn.graphs.indextypes.reduce_funcs.soft_index_type_coercion"]], "clear_index_cache() (in module hippynn.graphs.indextypes.registry)": [[35, "hippynn.graphs.indextypes.registry.clear_index_cache"]], "hippynn.graphs.indextypes.registry": [[35, "module-hippynn.graphs.indextypes.registry"]], "register_index_transformer() (in module hippynn.graphs.indextypes.registry)": [[35, "hippynn.graphs.indextypes.registry.register_index_transformer"]], "idxtype (class in hippynn.graphs.indextypes.type_def)": [[36, "hippynn.graphs.indextypes.type_def.IdxType"]], "hippynn.graphs.indextypes.type_def": [[36, "module-hippynn.graphs.indextypes.type_def"]], "hippynn.graphs.nodes.base": [[38, "module-hippynn.graphs.nodes.base"]], "addnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.AddNode"]], "atleast2d (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.AtLeast2D"]], "binnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.BinNode"]], "divnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.DivNode"]], "invnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.InvNode"]], "mulnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.MulNode"]], "negnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.NegNode"]], "pownode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.PowNode"]], "subnode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.SubNode"]], "unarynode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.UnaryNode"]], "valuenode (class in hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.ValueNode"]], "__init__() (atleast2d method)": [[39, "hippynn.graphs.nodes.base.algebra.AtLeast2D.__init__"]], "__init__() (binnode method)": [[39, "hippynn.graphs.nodes.base.algebra.BinNode.__init__"]], "__init__() (unarynode method)": [[39, "hippynn.graphs.nodes.base.algebra.UnaryNode.__init__"]], "__init__() (valuenode method)": [[39, "hippynn.graphs.nodes.base.algebra.ValueNode.__init__"]], "auto_module() (valuenode method)": [[39, "hippynn.graphs.nodes.base.algebra.ValueNode.auto_module"]], "coerces_values_to_nodes() (in module hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.coerces_values_to_nodes"]], "hippynn.graphs.nodes.base.algebra": [[39, "module-hippynn.graphs.nodes.base.algebra"]], "torch_module (addnode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.AddNode.torch_module"]], "torch_module (atleast2d attribute)": [[39, "hippynn.graphs.nodes.base.algebra.AtLeast2D.torch_module"]], "torch_module (divnode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.DivNode.torch_module"]], "torch_module (invnode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.InvNode.torch_module"]], "torch_module (mulnode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.MulNode.torch_module"]], "torch_module (negnode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.NegNode.torch_module"]], "torch_module (pownode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.PowNode.torch_module"]], "torch_module (subnode attribute)": [[39, "hippynn.graphs.nodes.base.algebra.SubNode.torch_module"]], "wrap_as_node() (in module hippynn.graphs.nodes.base.algebra)": [[39, "hippynn.graphs.nodes.base.algebra.wrap_as_node"]], "inputnode (class in hippynn.graphs.nodes.base.base)": [[40, "hippynn.graphs.nodes.base.base.InputNode"]], "lossinputnode (class in hippynn.graphs.nodes.base.base)": [[40, "hippynn.graphs.nodes.base.base.LossInputNode"]], "lossprednode (class in hippynn.graphs.nodes.base.base)": [[40, "hippynn.graphs.nodes.base.base.LossPredNode"]], "losstruenode (class in hippynn.graphs.nodes.base.base)": [[40, "hippynn.graphs.nodes.base.base.LossTrueNode"]], "node (class in hippynn.graphs.nodes.base.base)": [[40, "hippynn.graphs.nodes.base.base.Node"]], "singlenode (class in hippynn.graphs.nodes.base.base)": [[40, "hippynn.graphs.nodes.base.base.SingleNode"]], "__init__() (inputnode method)": [[40, "hippynn.graphs.nodes.base.base.InputNode.__init__"]], "__init__() (lossinputnode method)": [[40, "hippynn.graphs.nodes.base.base.LossInputNode.__init__"]], "__init__() (lossprednode method)": [[40, "hippynn.graphs.nodes.base.base.LossPredNode.__init__"]], "__init__() (losstruenode method)": [[40, "hippynn.graphs.nodes.base.base.LossTrueNode.__init__"]], "hippynn.graphs.nodes.base.base": [[40, "module-hippynn.graphs.nodes.base.base"]], "input_type_str (inputnode attribute)": [[40, "hippynn.graphs.nodes.base.base.InputNode.input_type_str"]], "main_output (losstruenode property)": [[40, "hippynn.graphs.nodes.base.base.LossTrueNode.main_output"]], "pred (lossinputnode property)": [[40, "hippynn.graphs.nodes.base.base.LossInputNode.pred"]], "requires_grad (inputnode attribute)": [[40, "hippynn.graphs.nodes.base.base.InputNode.requires_grad"]], "true (lossinputnode property)": [[40, "hippynn.graphs.nodes.base.base.LossInputNode.true"]], "alwaysmatch (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.AlwaysMatch"]], "autokw (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.AutoKw"]], "autonokw (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.AutoNoKw"]], "expandparentmeta (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ExpandParentMeta"]], "expandparents (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ExpandParents"]], "formassertlength (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength"]], "formassertion (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormAssertion"]], "formhandler (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormHandler"]], "formtransformer (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormTransformer"]], "indexformtransformer (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer"]], "mainoutputtransformer (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer"]], "parentexpander (class in hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander"]], "tupletypemismatch": [[41, "hippynn.graphs.nodes.base.definition_helpers.TupleTypeMismatch"]], "__init__() (formassertlength method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength.__init__"]], "__init__() (formassertion method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormAssertion.__init__"]], "__init__() (formtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormTransformer.__init__"]], "__init__() (indexformtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer.__init__"]], "__init__() (mainoutputtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer.__init__"]], "__init__() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.__init__"]], "add_class_doc() (formassertlength method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength.add_class_doc"]], "add_class_doc() (formassertion method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormAssertion.add_class_doc"]], "add_class_doc() (formhandler method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormHandler.add_class_doc"]], "add_class_doc() (formtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.FormTransformer.add_class_doc"]], "add_class_doc() (indexformtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer.add_class_doc"]], "add_class_doc() (mainoutputtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer.add_class_doc"]], "adds_to_forms() (in module hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.adds_to_forms"]], "assertion() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.assertion"]], "assertlen() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.assertlen"]], "auto_module() (autokw method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.AutoKw.auto_module"]], "auto_module() (autonokw method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.AutoNoKw.auto_module"]], "expand_parents() (expandparents method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ExpandParents.expand_parents"]], "fn() (indexformtransformer method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer.fn"]], "fn() (mainoutputtransformer static method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer.fn"]], "format_form_name() (in module hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.format_form_name"]], "get_main_outputs() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.get_main_outputs"]], "hippynn.graphs.nodes.base.definition_helpers": [[41, "module-hippynn.graphs.nodes.base.definition_helpers"]], "match() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.match"]], "matched_idx_coercion() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.matched_idx_coercion"]], "matchlen() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.matchlen"]], "require_idx_states() (parentexpander method)": [[41, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.require_idx_states"]], "temporary_parents() (in module hippynn.graphs.nodes.base.definition_helpers)": [[41, "hippynn.graphs.nodes.base.definition_helpers.temporary_parents"]], "indexnode (class in hippynn.graphs.nodes.base.multi)": [[42, "hippynn.graphs.nodes.base.multi.IndexNode"]], "multinode (class in hippynn.graphs.nodes.base.multi)": [[42, "hippynn.graphs.nodes.base.multi.MultiNode"]], "__init__() (indexnode method)": [[42, "hippynn.graphs.nodes.base.multi.IndexNode.__init__"]], "__init__() (multinode method)": [[42, "hippynn.graphs.nodes.base.multi.MultiNode.__init__"]], "hippynn.graphs.nodes.base.multi": [[42, "module-hippynn.graphs.nodes.base.multi"]], "main_output (multinode property)": [[42, "hippynn.graphs.nodes.base.multi.MultiNode.main_output"]], "set_dbname() (multinode method)": [[42, "hippynn.graphs.nodes.base.multi.MultiNode.set_dbname"]], "nodeambiguityerror": [[43, "hippynn.graphs.nodes.base.node_functions.NodeAmbiguityError"]], "nodenotfound": [[43, "hippynn.graphs.nodes.base.node_functions.NodeNotFound"]], "nodeoperationerror": [[43, "hippynn.graphs.nodes.base.node_functions.NodeOperationError"]], "find_relatives() (in module hippynn.graphs.nodes.base.node_functions)": [[43, "hippynn.graphs.nodes.base.node_functions.find_relatives"]], "find_unique_relative() (in module hippynn.graphs.nodes.base.node_functions)": [[43, "hippynn.graphs.nodes.base.node_functions.find_unique_relative"]], "get_connected_nodes() (in module hippynn.graphs.nodes.base.node_functions)": [[43, "hippynn.graphs.nodes.base.node_functions.get_connected_nodes"]], "hippynn.graphs.nodes.base.node_functions": [[43, "module-hippynn.graphs.nodes.base.node_functions"]], "atomdeindexer (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.AtomDeIndexer"]], "atomreindexer (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.AtomReIndexer"]], "filterbondsoneway (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.FilterBondsOneway"]], "fuzzyhistogrammer (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.FuzzyHistogrammer"]], "onehotencoder (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.OneHotEncoder"]], "paddingindexer (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.PaddingIndexer"]], "quadunpacknode (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.QuadUnpackNode"]], "sysmaxofatomsnode (class in hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.SysMaxOfAtomsNode"]], "__init__() (atomdeindexer method)": [[45, "hippynn.graphs.nodes.indexers.AtomDeIndexer.__init__"]], "__init__() (atomreindexer method)": [[45, "hippynn.graphs.nodes.indexers.AtomReIndexer.__init__"]], "__init__() (filterbondsoneway method)": [[45, "hippynn.graphs.nodes.indexers.FilterBondsOneway.__init__"]], "__init__() (fuzzyhistogrammer method)": [[45, "hippynn.graphs.nodes.indexers.FuzzyHistogrammer.__init__"]], "__init__() (onehotencoder method)": [[45, "hippynn.graphs.nodes.indexers.OneHotEncoder.__init__"]], "__init__() (paddingindexer method)": [[45, "hippynn.graphs.nodes.indexers.PaddingIndexer.__init__"]], "__init__() (quadunpacknode method)": [[45, "hippynn.graphs.nodes.indexers.QuadUnpackNode.__init__"]], "__init__() (sysmaxofatomsnode method)": [[45, "hippynn.graphs.nodes.indexers.SysMaxOfAtomsNode.__init__"]], "acquire_encoding_padding() (in module hippynn.graphs.nodes.indexers)": [[45, "hippynn.graphs.nodes.indexers.acquire_encoding_padding"]], "auto_module() (onehotencoder method)": [[45, "hippynn.graphs.nodes.indexers.OneHotEncoder.auto_module"]], "expand0() (atomdeindexer method)": [[45, "hippynn.graphs.nodes.indexers.AtomDeIndexer.expand0"]], "expand0() (atomreindexer method)": [[45, "hippynn.graphs.nodes.indexers.AtomReIndexer.expand0"]], "expand0() (paddingindexer method)": [[45, "hippynn.graphs.nodes.indexers.PaddingIndexer.expand0"]], "expand1() (atomreindexer method)": [[45, "hippynn.graphs.nodes.indexers.AtomReIndexer.expand1"]], "expansion0() (sysmaxofatomsnode method)": [[45, "hippynn.graphs.nodes.indexers.SysMaxOfAtomsNode.expansion0"]], "expansion1() (sysmaxofatomsnode method)": [[45, "hippynn.graphs.nodes.indexers.SysMaxOfAtomsNode.expansion1"]], "hippynn.graphs.nodes.indexers": [[45, "module-hippynn.graphs.nodes.indexers"]], "cellnode (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.CellNode"]], "forcenode (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.ForceNode"]], "indices (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.Indices"]], "inputcharges (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.InputCharges"]], "pairindices (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.PairIndices"]], "positionsnode (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.PositionsNode"]], "speciesnode (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.SpeciesNode"]], "splitindices (class in hippynn.graphs.nodes.inputs)": [[46, "hippynn.graphs.nodes.inputs.SplitIndices"]], "__init__() (indices method)": [[46, "hippynn.graphs.nodes.inputs.Indices.__init__"]], "__init__() (splitindices method)": [[46, "hippynn.graphs.nodes.inputs.SplitIndices.__init__"]], "hippynn.graphs.nodes.inputs": [[46, "module-hippynn.graphs.nodes.inputs"]], "input_type_str (cellnode attribute)": [[46, "hippynn.graphs.nodes.inputs.CellNode.input_type_str"]], "input_type_str (forcenode attribute)": [[46, "hippynn.graphs.nodes.inputs.ForceNode.input_type_str"]], "input_type_str (indices attribute)": [[46, "hippynn.graphs.nodes.inputs.Indices.input_type_str"]], "input_type_str (inputcharges attribute)": [[46, "hippynn.graphs.nodes.inputs.InputCharges.input_type_str"]], "input_type_str (pairindices attribute)": [[46, "hippynn.graphs.nodes.inputs.PairIndices.input_type_str"]], "input_type_str (positionsnode attribute)": [[46, "hippynn.graphs.nodes.inputs.PositionsNode.input_type_str"]], "input_type_str (speciesnode attribute)": [[46, "hippynn.graphs.nodes.inputs.SpeciesNode.input_type_str"]], "input_type_str (splitindices attribute)": [[46, "hippynn.graphs.nodes.inputs.SplitIndices.input_type_str"]], "defaultnetworkexpansion (class in hippynn.graphs.nodes.networks)": [[49, "hippynn.graphs.nodes.networks.DefaultNetworkExpansion"]], "hipnn (class in hippynn.graphs.nodes.networks)": [[49, "hippynn.graphs.nodes.networks.Hipnn"]], "hipnnquad (class in hippynn.graphs.nodes.networks)": [[49, "hippynn.graphs.nodes.networks.HipnnQuad"]], "hipnnvec (class in hippynn.graphs.nodes.networks)": [[49, "hippynn.graphs.nodes.networks.HipnnVec"]], "__init__() (hipnn method)": [[49, "hippynn.graphs.nodes.networks.Hipnn.__init__"], [90, "hippynn.networks.hipnn.Hipnn.__init__"]], "__init__() (hipnnvec method)": [[49, "hippynn.graphs.nodes.networks.HipnnVec.__init__"]], "expansion0() (defaultnetworkexpansion method)": [[49, "hippynn.graphs.nodes.networks.DefaultNetworkExpansion.expansion0"]], "expansion1() (defaultnetworkexpansion method)": [[49, "hippynn.graphs.nodes.networks.DefaultNetworkExpansion.expansion1"]], "expansion2() (hipnn method)": [[49, "hippynn.graphs.nodes.networks.Hipnn.expansion2"]], "expansion2() (hipnnvec method)": [[49, "hippynn.graphs.nodes.networks.HipnnVec.expansion2"]], "hippynn.graphs.nodes.networks": [[49, "module-hippynn.graphs.nodes.networks"]], "dynamicperiodicpairs (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.DynamicPeriodicPairs"]], "externalneighborindexer (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.ExternalNeighborIndexer"]], "kdtreepairs (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.KDTreePairs"]], "kdtreepairsmemory (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.KDTreePairsMemory"]], "memory (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.Memory"]], "mindistnode (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.MinDistNode"]], "numpydynamicpairs (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.NumpyDynamicPairs"]], "openpairindexer (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.OpenPairIndexer"]], "paddedneighbornode (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PaddedNeighborNode"]], "paircacher (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PairCacher"]], "pairdeindexer (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PairDeIndexer"]], "pairfilter (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PairFilter"]], "pairreindexer (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PairReIndexer"]], "pairuncacher (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PairUncacher"]], "periodicpairindexer (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer"]], "periodicpairindexermemory (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairIndexerMemory"]], "periodicpairoutputs (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairOutputs"]], "rdfbins (class in hippynn.graphs.nodes.pairs)": [[50, "hippynn.graphs.nodes.pairs.RDFBins"]], "__init__() (externalneighborindexer method)": [[50, "hippynn.graphs.nodes.pairs.ExternalNeighborIndexer.__init__"]], "__init__() (kdtreepairsmemory method)": [[50, "hippynn.graphs.nodes.pairs.KDTreePairsMemory.__init__"]], "__init__() (mindistnode method)": [[50, "hippynn.graphs.nodes.pairs.MinDistNode.__init__"]], "__init__() (openpairindexer method)": [[50, "hippynn.graphs.nodes.pairs.OpenPairIndexer.__init__"]], "__init__() (paddedneighbornode method)": [[50, "hippynn.graphs.nodes.pairs.PaddedNeighborNode.__init__"]], "__init__() (paircacher method)": [[50, "hippynn.graphs.nodes.pairs.PairCacher.__init__"], [82, "hippynn.layers.pairs.indexing.PairCacher.__init__"]], "__init__() (pairdeindexer method)": [[50, "hippynn.graphs.nodes.pairs.PairDeIndexer.__init__"]], "__init__() (pairfilter method)": [[50, "hippynn.graphs.nodes.pairs.PairFilter.__init__"]], "__init__() (pairreindexer method)": [[50, "hippynn.graphs.nodes.pairs.PairReIndexer.__init__"]], "__init__() (pairuncacher method)": [[50, "hippynn.graphs.nodes.pairs.PairUncacher.__init__"], [82, "hippynn.layers.pairs.indexing.PairUncacher.__init__"]], "__init__() (periodicpairindexer method)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer.__init__"]], "__init__() (periodicpairindexermemory method)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairIndexerMemory.__init__"]], "__init__() (rdfbins method)": [[50, "hippynn.graphs.nodes.pairs.RDFBins.__init__"], [79, "hippynn.layers.pairs.analysis.RDFBins.__init__"]], "auto_module() (openpairindexer method)": [[50, "hippynn.graphs.nodes.pairs.OpenPairIndexer.auto_module"]], "expand0() (mindistnode method)": [[50, "hippynn.graphs.nodes.pairs.MinDistNode.expand0"]], "expand0() (openpairindexer method)": [[50, "hippynn.graphs.nodes.pairs.OpenPairIndexer.expand0"]], "expand0() (paddedneighbornode method)": [[50, "hippynn.graphs.nodes.pairs.PaddedNeighborNode.expand0"]], "expand0() (paircacher method)": [[50, "hippynn.graphs.nodes.pairs.PairCacher.expand0"]], "expand0() (pairdeindexer method)": [[50, "hippynn.graphs.nodes.pairs.PairDeIndexer.expand0"]], "expand0() (pairfilter method)": [[50, "hippynn.graphs.nodes.pairs.PairFilter.expand0"]], "expand0() (pairreindexer method)": [[50, "hippynn.graphs.nodes.pairs.PairReIndexer.expand0"]], "expand0() (pairuncacher method)": [[50, "hippynn.graphs.nodes.pairs.PairUncacher.expand0"]], "expand0() (periodicpairindexer method)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer.expand0"]], "expand0() (rdfbins method)": [[50, "hippynn.graphs.nodes.pairs.RDFBins.expand0"]], "expand1() (mindistnode method)": [[50, "hippynn.graphs.nodes.pairs.MinDistNode.expand1"]], "expand1() (paircacher method)": [[50, "hippynn.graphs.nodes.pairs.PairCacher.expand1"]], "expand1() (pairdeindexer method)": [[50, "hippynn.graphs.nodes.pairs.PairDeIndexer.expand1"]], "expand1() (pairreindexer method)": [[50, "hippynn.graphs.nodes.pairs.PairReIndexer.expand1"]], "expand1() (pairuncacher method)": [[50, "hippynn.graphs.nodes.pairs.PairUncacher.expand1"]], "expand1() (periodicpairindexer method)": [[50, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer.expand1"]], "expand1() (rdfbins method)": [[50, "hippynn.graphs.nodes.pairs.RDFBins.expand1"]], "expand2() (mindistnode method)": [[50, "hippynn.graphs.nodes.pairs.MinDistNode.expand2"]], "expand2() (rdfbins method)": [[50, "hippynn.graphs.nodes.pairs.RDFBins.expand2"]], "expand3() (rdfbins method)": [[50, "hippynn.graphs.nodes.pairs.RDFBins.expand3"]], "hippynn.graphs.nodes.pairs": [[50, "module-hippynn.graphs.nodes.pairs"]], "reset_reuse_percentage() (memory method)": [[50, "hippynn.graphs.nodes.pairs.Memory.reset_reuse_percentage"]], "reuse_percentage (memory property)": [[50, "hippynn.graphs.nodes.pairs.Memory.reuse_percentage"]], "skin (memory property)": [[50, "hippynn.graphs.nodes.pairs.Memory.skin"]], "atomindexer (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.AtomIndexer"]], "charges (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.Charges"]], "encoder (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.Encoder"]], "energies (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.Energies"]], "hatomregressor (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.HAtomRegressor"]], "network (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.Network"]], "paircache (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.PairCache"]], "pairindexer (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.PairIndexer"]], "positions (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.Positions"]], "species (class in hippynn.graphs.nodes.tags)": [[52, "hippynn.graphs.nodes.tags.Species"]], "hippynn.graphs.nodes.tags": [[52, "module-hippynn.graphs.nodes.tags"]], "species_set (encoder attribute)": [[52, "hippynn.graphs.nodes.tags.Encoder.species_set"]], "hbondnode (class in hippynn.graphs.nodes.targets)": [[53, "hippynn.graphs.nodes.targets.HBondNode"]], "hchargenode (class in hippynn.graphs.nodes.targets)": [[53, "hippynn.graphs.nodes.targets.HChargeNode"]], "henergynode (class in hippynn.graphs.nodes.targets)": [[53, "hippynn.graphs.nodes.targets.HEnergyNode"]], "localchargeenergy (class in hippynn.graphs.nodes.targets)": [[53, "hippynn.graphs.nodes.targets.LocalChargeEnergy"]], "__init__() (hbondnode method)": [[53, "hippynn.graphs.nodes.targets.HBondNode.__init__"]], "__init__() (hchargenode method)": [[53, "hippynn.graphs.nodes.targets.HChargeNode.__init__"]], "__init__() (henergynode method)": [[53, "hippynn.graphs.nodes.targets.HEnergyNode.__init__"]], "__init__() (localchargeenergy method)": [[53, "hippynn.graphs.nodes.targets.LocalChargeEnergy.__init__"], [87, "hippynn.layers.targets.LocalChargeEnergy.__init__"]], "expand0() (hbondnode method)": [[53, "hippynn.graphs.nodes.targets.HBondNode.expand0"]], "expand1() (hbondnode method)": [[53, "hippynn.graphs.nodes.targets.HBondNode.expand1"]], "expansion0() (hchargenode method)": [[53, "hippynn.graphs.nodes.targets.HChargeNode.expansion0"]], "expansion0() (henergynode method)": [[53, "hippynn.graphs.nodes.targets.HEnergyNode.expansion0"]], "expansion0() (localchargeenergy method)": [[53, "hippynn.graphs.nodes.targets.LocalChargeEnergy.expansion0"]], "hippynn.graphs.nodes.targets": [[53, "module-hippynn.graphs.nodes.targets"]], "hippynn.layers": [[73, "module-hippynn.layers"]], "atleast2d (class in hippynn.layers.algebra)": [[74, "hippynn.layers.algebra.AtLeast2D"]], "idx (class in hippynn.layers.algebra)": [[74, "hippynn.layers.algebra.Idx"]], "lambdamodule (class in hippynn.layers.algebra)": [[74, "hippynn.layers.algebra.LambdaModule"]], "listmod (class in hippynn.layers.algebra)": [[74, "hippynn.layers.algebra.ListMod"]], "valuemod (class in hippynn.layers.algebra)": [[74, "hippynn.layers.algebra.ValueMod"]], "__init__() (idx method)": [[74, "hippynn.layers.algebra.Idx.__init__"]], "__init__() (lambdamodule method)": [[74, "hippynn.layers.algebra.LambdaModule.__init__"]], "__init__() (valuemod method)": [[74, "hippynn.layers.algebra.ValueMod.__init__"]], "extra_repr() (idx method)": [[74, "hippynn.layers.algebra.Idx.extra_repr"]], "extra_repr() (lambdamodule method)": [[74, "hippynn.layers.algebra.LambdaModule.extra_repr"]], "extra_repr() (valuemod method)": [[74, "hippynn.layers.algebra.ValueMod.extra_repr"]], "forward() (atleast2d method)": [[74, "hippynn.layers.algebra.AtLeast2D.forward"]], "forward() (idx method)": [[74, "hippynn.layers.algebra.Idx.forward"]], "forward() (lambdamodule method)": [[74, "hippynn.layers.algebra.LambdaModule.forward"]], "forward() (listmod method)": [[74, "hippynn.layers.algebra.ListMod.forward"]], "forward() (valuemod method)": [[74, "hippynn.layers.algebra.ValueMod.forward"]], "hippynn.layers.algebra": [[74, "module-hippynn.layers.algebra"]], "training (atleast2d attribute)": [[74, "hippynn.layers.algebra.AtLeast2D.training"]], "training (idx attribute)": [[74, "hippynn.layers.algebra.Idx.training"]], "training (lambdamodule attribute)": [[74, "hippynn.layers.algebra.LambdaModule.training"]], "training (listmod attribute)": [[74, "hippynn.layers.algebra.ListMod.training"]], "training (valuemod attribute)": [[74, "hippynn.layers.algebra.ValueMod.training"]], "localenergy (class in hippynn.layers.excited)": [[75, "hippynn.layers.excited.LocalEnergy"]], "nacr (class in hippynn.layers.excited)": [[75, "hippynn.layers.excited.NACR"]], "nacrmultistate (class in hippynn.layers.excited)": [[75, "hippynn.layers.excited.NACRMultiState"]], "__init__() (localenergy method)": [[75, "hippynn.layers.excited.LocalEnergy.__init__"]], "__init__() (nacr method)": [[75, "hippynn.layers.excited.NACR.__init__"]], "__init__() (nacrmultistate method)": [[75, "hippynn.layers.excited.NACRMultiState.__init__"]], "forward() (localenergy method)": [[75, "hippynn.layers.excited.LocalEnergy.forward"]], "forward() (nacr method)": [[75, "hippynn.layers.excited.NACR.forward"]], "forward() (nacrmultistate method)": [[75, "hippynn.layers.excited.NACRMultiState.forward"]], "hippynn.layers.excited": [[75, "module-hippynn.layers.excited"]], "training (localenergy attribute)": [[75, "hippynn.layers.excited.LocalEnergy.training"]], "training (nacr attribute)": [[75, "hippynn.layers.excited.NACR.training"]], "training (nacrmultistate attribute)": [[75, "hippynn.layers.excited.NACRMultiState.training"]], "coscutoff (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.CosCutoff"]], "gaussiansensitivitymodule (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.GaussianSensitivityModule"]], "interactlayer (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.InteractLayer"]], "interactlayerquad (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.InteractLayerQuad"]], "interactlayervec (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.InteractLayerVec"]], "inversesensitivitymodule (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.InverseSensitivityModule"]], "sensitivitybottleneck (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.SensitivityBottleneck"]], "sensitivitymodule (class in hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.SensitivityModule"]], "__init__() (coscutoff method)": [[76, "hippynn.layers.hiplayers.CosCutoff.__init__"]], "__init__() (gaussiansensitivitymodule method)": [[76, "hippynn.layers.hiplayers.GaussianSensitivityModule.__init__"]], "__init__() (interactlayer method)": [[76, "hippynn.layers.hiplayers.InteractLayer.__init__"]], "__init__() (interactlayerquad method)": [[76, "hippynn.layers.hiplayers.InteractLayerQuad.__init__"]], "__init__() (interactlayervec method)": [[76, "hippynn.layers.hiplayers.InteractLayerVec.__init__"]], "__init__() (inversesensitivitymodule method)": [[76, "hippynn.layers.hiplayers.InverseSensitivityModule.__init__"]], "__init__() (sensitivitybottleneck method)": [[76, "hippynn.layers.hiplayers.SensitivityBottleneck.__init__"]], "__init__() (sensitivitymodule method)": [[76, "hippynn.layers.hiplayers.SensitivityModule.__init__"]], "forward() (coscutoff method)": [[76, "hippynn.layers.hiplayers.CosCutoff.forward"]], "forward() (gaussiansensitivitymodule method)": [[76, "hippynn.layers.hiplayers.GaussianSensitivityModule.forward"]], "forward() (interactlayer method)": [[76, "hippynn.layers.hiplayers.InteractLayer.forward"]], "forward() (interactlayerquad method)": [[76, "hippynn.layers.hiplayers.InteractLayerQuad.forward"]], "forward() (interactlayervec method)": [[76, "hippynn.layers.hiplayers.InteractLayerVec.forward"]], "forward() (inversesensitivitymodule method)": [[76, "hippynn.layers.hiplayers.InverseSensitivityModule.forward"]], "forward() (sensitivitybottleneck method)": [[76, "hippynn.layers.hiplayers.SensitivityBottleneck.forward"]], "hippynn.layers.hiplayers": [[76, "module-hippynn.layers.hiplayers"]], "regularization_params() (interactlayer method)": [[76, "hippynn.layers.hiplayers.InteractLayer.regularization_params"]], "training (coscutoff attribute)": [[76, "hippynn.layers.hiplayers.CosCutoff.training"]], "training (gaussiansensitivitymodule attribute)": [[76, "hippynn.layers.hiplayers.GaussianSensitivityModule.training"]], "training (interactlayer attribute)": [[76, "hippynn.layers.hiplayers.InteractLayer.training"]], "training (interactlayerquad attribute)": [[76, "hippynn.layers.hiplayers.InteractLayerQuad.training"]], "training (interactlayervec attribute)": [[76, "hippynn.layers.hiplayers.InteractLayerVec.training"]], "training (inversesensitivitymodule attribute)": [[76, "hippynn.layers.hiplayers.InverseSensitivityModule.training"]], "training (sensitivitybottleneck attribute)": [[76, "hippynn.layers.hiplayers.SensitivityBottleneck.training"]], "training (sensitivitymodule attribute)": [[76, "hippynn.layers.hiplayers.SensitivityModule.training"]], "warn_if_under() (in module hippynn.layers.hiplayers)": [[76, "hippynn.layers.hiplayers.warn_if_under"]], "atomdeindexer (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.AtomDeIndexer"]], "atomreindexer (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.AtomReIndexer"]], "cellscaleinducer (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.CellScaleInducer"]], "filterbondsoneway (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.FilterBondsOneway"]], "fuzzyhistogram (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.FuzzyHistogram"]], "molsummer (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.MolSummer"]], "onehotspecies (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.OneHotSpecies"]], "paddingindexer (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.PaddingIndexer"]], "quadpack (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.QuadPack"]], "quadunpack (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.QuadUnpack"]], "sysmaxofatoms (class in hippynn.layers.indexers)": [[77, "hippynn.layers.indexers.SysMaxOfAtoms"]], "__init__() (cellscaleinducer method)": [[77, "hippynn.layers.indexers.CellScaleInducer.__init__"]], "__init__() (fuzzyhistogram method)": [[77, "hippynn.layers.indexers.FuzzyHistogram.__init__"]], "__init__() (onehotspecies method)": [[77, "hippynn.layers.indexers.OneHotSpecies.__init__"]], "__init__() (quadpack method)": [[77, "hippynn.layers.indexers.QuadPack.__init__"]], "__init__() (quadunpack method)": [[77, "hippynn.layers.indexers.QuadUnpack.__init__"]], "forward() (atomdeindexer method)": [[77, "hippynn.layers.indexers.AtomDeIndexer.forward"]], "forward() (atomreindexer method)": [[77, "hippynn.layers.indexers.AtomReIndexer.forward"]], "forward() (cellscaleinducer method)": [[77, "hippynn.layers.indexers.CellScaleInducer.forward"]], "forward() (filterbondsoneway method)": [[77, "hippynn.layers.indexers.FilterBondsOneway.forward"]], "forward() (fuzzyhistogram method)": [[77, "hippynn.layers.indexers.FuzzyHistogram.forward"]], "forward() (molsummer method)": [[77, "hippynn.layers.indexers.MolSummer.forward"]], "forward() (onehotspecies method)": [[77, "hippynn.layers.indexers.OneHotSpecies.forward"]], "forward() (paddingindexer method)": [[77, "hippynn.layers.indexers.PaddingIndexer.forward"]], "forward() (quadpack method)": [[77, "hippynn.layers.indexers.QuadPack.forward"]], "forward() (quadunpack method)": [[77, "hippynn.layers.indexers.QuadUnpack.forward"]], "forward() (sysmaxofatoms method)": [[77, "hippynn.layers.indexers.SysMaxOfAtoms.forward"]], "hippynn.layers.indexers": [[77, "module-hippynn.layers.indexers"]], "training (atomdeindexer attribute)": [[77, "hippynn.layers.indexers.AtomDeIndexer.training"]], "training (atomreindexer attribute)": [[77, "hippynn.layers.indexers.AtomReIndexer.training"]], "training (cellscaleinducer attribute)": [[77, "hippynn.layers.indexers.CellScaleInducer.training"]], "training (filterbondsoneway attribute)": [[77, "hippynn.layers.indexers.FilterBondsOneway.training"]], "training (fuzzyhistogram attribute)": [[77, "hippynn.layers.indexers.FuzzyHistogram.training"]], "training (molsummer attribute)": [[77, "hippynn.layers.indexers.MolSummer.training"]], "training (onehotspecies attribute)": [[77, "hippynn.layers.indexers.OneHotSpecies.training"]], "training (paddingindexer attribute)": [[77, "hippynn.layers.indexers.PaddingIndexer.training"]], "training (quadpack attribute)": [[77, "hippynn.layers.indexers.QuadPack.training"]], "training (quadunpack attribute)": [[77, "hippynn.layers.indexers.QuadUnpack.training"]], "training (sysmaxofatoms attribute)": [[77, "hippynn.layers.indexers.SysMaxOfAtoms.training"]], "hippynn.layers.pairs": [[78, "module-hippynn.layers.pairs"]], "mindistmodule (class in hippynn.layers.pairs.analysis)": [[79, "hippynn.layers.pairs.analysis.MinDistModule"]], "rdfbins (class in hippynn.layers.pairs.analysis)": [[79, "hippynn.layers.pairs.analysis.RDFBins"]], "bin_info() (rdfbins method)": [[79, "hippynn.layers.pairs.analysis.RDFBins.bin_info"]], "forward() (mindistmodule method)": [[79, "hippynn.layers.pairs.analysis.MinDistModule.forward"]], "forward() (rdfbins method)": [[79, "hippynn.layers.pairs.analysis.RDFBins.forward"]], "hippynn.layers.pairs.analysis": [[79, "module-hippynn.layers.pairs.analysis"]], "min_dist_info() (in module hippynn.layers.pairs.analysis)": [[79, "hippynn.layers.pairs.analysis.min_dist_info"]], "training (mindistmodule attribute)": [[79, "hippynn.layers.pairs.analysis.MinDistModule.training"]], "training (rdfbins attribute)": [[79, "hippynn.layers.pairs.analysis.RDFBins.training"]], "kdtreeneighbors (class in hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.KDTreeNeighbors"]], "kdtreepairsmemory (class in hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.KDTreePairsMemory"]], "npneighbors (class in hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.NPNeighbors"]], "torchneighbors (class in hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.TorchNeighbors"]], "compute_one() (kdtreeneighbors method)": [[80, "hippynn.layers.pairs.dispatch.KDTreeNeighbors.compute_one"]], "compute_one() (npneighbors method)": [[80, "hippynn.layers.pairs.dispatch.NPNeighbors.compute_one"]], "compute_one() (torchneighbors method)": [[80, "hippynn.layers.pairs.dispatch.TorchNeighbors.compute_one"]], "forward() (kdtreepairsmemory method)": [[80, "hippynn.layers.pairs.dispatch.KDTreePairsMemory.forward"]], "hippynn.layers.pairs.dispatch": [[80, "module-hippynn.layers.pairs.dispatch"]], "neighbor_list_kdtree() (in module hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.neighbor_list_kdtree"]], "neighbor_list_np() (in module hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.neighbor_list_np"]], "training (kdtreeneighbors attribute)": [[80, "hippynn.layers.pairs.dispatch.KDTreeNeighbors.training"]], "training (kdtreepairsmemory attribute)": [[80, "hippynn.layers.pairs.dispatch.KDTreePairsMemory.training"]], "training (npneighbors attribute)": [[80, "hippynn.layers.pairs.dispatch.NPNeighbors.training"]], "training (torchneighbors attribute)": [[80, "hippynn.layers.pairs.dispatch.TorchNeighbors.training"]], "wrap_points_np() (in module hippynn.layers.pairs.dispatch)": [[80, "hippynn.layers.pairs.dispatch.wrap_points_np"]], "filterdistance (class in hippynn.layers.pairs.filters)": [[81, "hippynn.layers.pairs.filters.FilterDistance"]], "forward() (filterdistance method)": [[81, "hippynn.layers.pairs.filters.FilterDistance.forward"]], "hippynn.layers.pairs.filters": [[81, "module-hippynn.layers.pairs.filters"]], "training (filterdistance attribute)": [[81, "hippynn.layers.pairs.filters.FilterDistance.training"]], "externalneighbors (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.ExternalNeighbors"]], "molpairsummer (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.MolPairSummer"]], "paddedneighmodule (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.PaddedNeighModule"]], "paircacher (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.PairCacher"]], "pairdeindexer (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.PairDeIndexer"]], "pairreindexer (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.PairReIndexer"]], "pairuncacher (class in hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.PairUncacher"]], "forward() (externalneighbors method)": [[82, "hippynn.layers.pairs.indexing.ExternalNeighbors.forward"]], "forward() (molpairsummer method)": [[82, "hippynn.layers.pairs.indexing.MolPairSummer.forward"]], "forward() (paddedneighmodule method)": [[82, "hippynn.layers.pairs.indexing.PaddedNeighModule.forward"]], "forward() (paircacher method)": [[82, "hippynn.layers.pairs.indexing.PairCacher.forward"]], "forward() (pairdeindexer method)": [[82, "hippynn.layers.pairs.indexing.PairDeIndexer.forward"]], "forward() (pairreindexer method)": [[82, "hippynn.layers.pairs.indexing.PairReIndexer.forward"]], "forward() (pairuncacher method)": [[82, "hippynn.layers.pairs.indexing.PairUncacher.forward"]], "hippynn.layers.pairs.indexing": [[82, "module-hippynn.layers.pairs.indexing"]], "padded_neighlist() (in module hippynn.layers.pairs.indexing)": [[82, "hippynn.layers.pairs.indexing.padded_neighlist"]], "set_images() (paircacher method)": [[82, "hippynn.layers.pairs.indexing.PairCacher.set_images"]], "set_images() (pairuncacher method)": [[82, "hippynn.layers.pairs.indexing.PairUncacher.set_images"]], "training (externalneighbors attribute)": [[82, "hippynn.layers.pairs.indexing.ExternalNeighbors.training"]], "training (molpairsummer attribute)": [[82, "hippynn.layers.pairs.indexing.MolPairSummer.training"]], "training (paddedneighmodule attribute)": [[82, "hippynn.layers.pairs.indexing.PaddedNeighModule.training"]], "training (paircacher attribute)": [[82, "hippynn.layers.pairs.indexing.PairCacher.training"]], "training (pairdeindexer attribute)": [[82, "hippynn.layers.pairs.indexing.PairDeIndexer.training"]], "training (pairreindexer attribute)": [[82, "hippynn.layers.pairs.indexing.PairReIndexer.training"]], "training (pairuncacher attribute)": [[82, "hippynn.layers.pairs.indexing.PairUncacher.training"]], "openpairindexer (class in hippynn.layers.pairs.open)": [[83, "hippynn.layers.pairs.open.OpenPairIndexer"]], "pairmemory (class in hippynn.layers.pairs.open)": [[83, "hippynn.layers.pairs.open.PairMemory"]], "__init__() (pairmemory method)": [[83, "hippynn.layers.pairs.open.PairMemory.__init__"]], "forward() (openpairindexer method)": [[83, "hippynn.layers.pairs.open.OpenPairIndexer.forward"]], "forward() (pairmemory method)": [[83, "hippynn.layers.pairs.open.PairMemory.forward"]], "hippynn.layers.pairs.open": [[83, "module-hippynn.layers.pairs.open"]], "initialize_buffers() (pairmemory method)": [[83, "hippynn.layers.pairs.open.PairMemory.initialize_buffers"]], "recalculation_needed() (pairmemory method)": [[83, "hippynn.layers.pairs.open.PairMemory.recalculation_needed"]], "reset_reuse_percentage() (pairmemory method)": [[83, "hippynn.layers.pairs.open.PairMemory.reset_reuse_percentage"]], "reuse_percentage (pairmemory property)": [[83, "hippynn.layers.pairs.open.PairMemory.reuse_percentage"]], "set_skin() (pairmemory method)": [[83, "hippynn.layers.pairs.open.PairMemory.set_skin"]], "skin (pairmemory property)": [[83, "hippynn.layers.pairs.open.PairMemory.skin"]], "training (openpairindexer attribute)": [[83, "hippynn.layers.pairs.open.OpenPairIndexer.training"]], "training (pairmemory attribute)": [[83, "hippynn.layers.pairs.open.PairMemory.training"]], "periodicpairindexer (class in hippynn.layers.pairs.periodic)": [[84, "hippynn.layers.pairs.periodic.PeriodicPairIndexer"]], "periodicpairindexermemory (class in hippynn.layers.pairs.periodic)": [[84, "hippynn.layers.pairs.periodic.PeriodicPairIndexerMemory"]], "staticimageperiodicpairindexer (class in hippynn.layers.pairs.periodic)": [[84, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer"]], "__init__() (staticimageperiodicpairindexer method)": [[84, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer.__init__"]], "forward() (periodicpairindexer method)": [[84, "hippynn.layers.pairs.periodic.PeriodicPairIndexer.forward"]], "forward() (periodicpairindexermemory method)": [[84, "hippynn.layers.pairs.periodic.PeriodicPairIndexerMemory.forward"]], "forward() (staticimageperiodicpairindexer method)": [[84, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer.forward"]], "hippynn.layers.pairs.periodic": [[84, "module-hippynn.layers.pairs.periodic"]], "training (periodicpairindexer attribute)": [[84, "hippynn.layers.pairs.periodic.PeriodicPairIndexer.training"]], "training (periodicpairindexermemory attribute)": [[84, "hippynn.layers.pairs.periodic.PeriodicPairIndexerMemory.training"]], "training (staticimageperiodicpairindexer attribute)": [[84, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer.training"]], "alphascreening (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.AlphaScreening"]], "combineenergy (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.CombineEnergy"]], "combinescreenings (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.CombineScreenings"]], "coulombenergy (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.CoulombEnergy"]], "dipole (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.Dipole"]], "ewaldrealspacescreening (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.EwaldRealSpaceScreening"]], "gradient (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.Gradient"]], "localdampingcosine (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.LocalDampingCosine"]], "multigradient (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.MultiGradient"]], "peratom (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.PerAtom"]], "qscreening (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.QScreening"]], "quadrupole (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.Quadrupole"]], "screenedcoulombenergy (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.ScreenedCoulombEnergy"]], "stressforce (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.StressForce"]], "vecmag (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.VecMag"]], "wolfscreening (class in hippynn.layers.physics)": [[85, "hippynn.layers.physics.WolfScreening"]], "__init__() (alphascreening method)": [[85, "hippynn.layers.physics.AlphaScreening.__init__"]], "__init__() (combineenergy method)": [[85, "hippynn.layers.physics.CombineEnergy.__init__"]], "__init__() (combinescreenings method)": [[85, "hippynn.layers.physics.CombineScreenings.__init__"]], "__init__() (coulombenergy method)": [[85, "hippynn.layers.physics.CoulombEnergy.__init__"]], "__init__() (dipole method)": [[85, "hippynn.layers.physics.Dipole.__init__"]], "__init__() (ewaldrealspacescreening method)": [[85, "hippynn.layers.physics.EwaldRealSpaceScreening.__init__"]], "__init__() (gradient method)": [[85, "hippynn.layers.physics.Gradient.__init__"]], "__init__() (localdampingcosine method)": [[85, "hippynn.layers.physics.LocalDampingCosine.__init__"]], "__init__() (multigradient method)": [[85, "hippynn.layers.physics.MultiGradient.__init__"]], "__init__() (qscreening method)": [[85, "hippynn.layers.physics.QScreening.__init__"]], "__init__() (quadrupole method)": [[85, "hippynn.layers.physics.Quadrupole.__init__"]], "__init__() (screenedcoulombenergy method)": [[85, "hippynn.layers.physics.ScreenedCoulombEnergy.__init__"]], "__init__() (stressforce method)": [[85, "hippynn.layers.physics.StressForce.__init__"]], "__init__() (wolfscreening method)": [[85, "hippynn.layers.physics.WolfScreening.__init__"]], "forward() (combineenergy method)": [[85, "hippynn.layers.physics.CombineEnergy.forward"]], "forward() (combinescreenings method)": [[85, "hippynn.layers.physics.CombineScreenings.forward"]], "forward() (coulombenergy method)": [[85, "hippynn.layers.physics.CoulombEnergy.forward"]], "forward() (dipole method)": [[85, "hippynn.layers.physics.Dipole.forward"]], "forward() (ewaldrealspacescreening method)": [[85, "hippynn.layers.physics.EwaldRealSpaceScreening.forward"]], "forward() (gradient method)": [[85, "hippynn.layers.physics.Gradient.forward"]], "forward() (localdampingcosine method)": [[85, "hippynn.layers.physics.LocalDampingCosine.forward"]], "forward() (multigradient method)": [[85, "hippynn.layers.physics.MultiGradient.forward"]], "forward() (peratom method)": [[85, "hippynn.layers.physics.PerAtom.forward"]], "forward() (qscreening method)": [[85, "hippynn.layers.physics.QScreening.forward"]], "forward() (quadrupole method)": [[85, "hippynn.layers.physics.Quadrupole.forward"]], "forward() (screenedcoulombenergy method)": [[85, "hippynn.layers.physics.ScreenedCoulombEnergy.forward"]], "forward() (stressforce method)": [[85, "hippynn.layers.physics.StressForce.forward"]], "forward() (vecmag method)": [[85, "hippynn.layers.physics.VecMag.forward"]], "forward() (wolfscreening method)": [[85, "hippynn.layers.physics.WolfScreening.forward"]], "hippynn.layers.physics": [[85, "module-hippynn.layers.physics"]], "p_value (qscreening property)": [[85, "hippynn.layers.physics.QScreening.p_value"]], "training (alphascreening attribute)": [[85, "hippynn.layers.physics.AlphaScreening.training"]], "training (combineenergy attribute)": [[85, "hippynn.layers.physics.CombineEnergy.training"]], "training (combinescreenings attribute)": [[85, "hippynn.layers.physics.CombineScreenings.training"]], "training (coulombenergy attribute)": [[85, "hippynn.layers.physics.CoulombEnergy.training"]], "training (dipole attribute)": [[85, "hippynn.layers.physics.Dipole.training"]], "training (ewaldrealspacescreening attribute)": [[85, "hippynn.layers.physics.EwaldRealSpaceScreening.training"]], "training (gradient attribute)": [[85, "hippynn.layers.physics.Gradient.training"]], "training (localdampingcosine attribute)": [[85, "hippynn.layers.physics.LocalDampingCosine.training"]], "training (multigradient attribute)": [[85, "hippynn.layers.physics.MultiGradient.training"]], "training (peratom attribute)": [[85, "hippynn.layers.physics.PerAtom.training"]], "training (qscreening attribute)": [[85, "hippynn.layers.physics.QScreening.training"]], "training (quadrupole attribute)": [[85, "hippynn.layers.physics.Quadrupole.training"]], "training (screenedcoulombenergy attribute)": [[85, "hippynn.layers.physics.ScreenedCoulombEnergy.training"]], "training (stressforce attribute)": [[85, "hippynn.layers.physics.StressForce.training"]], "training (vecmag attribute)": [[85, "hippynn.layers.physics.VecMag.training"]], "training (wolfscreening attribute)": [[85, "hippynn.layers.physics.WolfScreening.training"]], "lpreg (class in hippynn.layers.regularization)": [[86, "hippynn.layers.regularization.LPReg"]], "__init__() (lpreg method)": [[86, "hippynn.layers.regularization.LPReg.__init__"]], "forward() (lpreg method)": [[86, "hippynn.layers.regularization.LPReg.forward"]], "hippynn.layers.regularization": [[86, "module-hippynn.layers.regularization"]], "training (lpreg attribute)": [[86, "hippynn.layers.regularization.LPReg.training"]], "hbondsymmetric (class in hippynn.layers.targets)": [[87, "hippynn.layers.targets.HBondSymmetric"]], "hcharge (class in hippynn.layers.targets)": [[87, "hippynn.layers.targets.HCharge"]], "henergy (class in hippynn.layers.targets)": [[87, "hippynn.layers.targets.HEnergy"]], "localchargeenergy (class in hippynn.layers.targets)": [[87, "hippynn.layers.targets.LocalChargeEnergy"]], "__init__() (hbondsymmetric method)": [[87, "hippynn.layers.targets.HBondSymmetric.__init__"]], "__init__() (hcharge method)": [[87, "hippynn.layers.targets.HCharge.__init__"]], "__init__() (henergy method)": [[87, "hippynn.layers.targets.HEnergy.__init__"]], "forward() (hbondsymmetric method)": [[87, "hippynn.layers.targets.HBondSymmetric.forward"]], "forward() (hcharge method)": [[87, "hippynn.layers.targets.HCharge.forward"]], "forward() (henergy method)": [[87, "hippynn.layers.targets.HEnergy.forward"]], "forward() (localchargeenergy method)": [[87, "hippynn.layers.targets.LocalChargeEnergy.forward"]], "hippynn.layers.targets": [[87, "module-hippynn.layers.targets"]], "training (hbondsymmetric attribute)": [[87, "hippynn.layers.targets.HBondSymmetric.training"]], "training (hcharge attribute)": [[87, "hippynn.layers.targets.HCharge.training"]], "training (henergy attribute)": [[87, "hippynn.layers.targets.HEnergy.training"]], "training (localchargeenergy attribute)": [[87, "hippynn.layers.targets.LocalChargeEnergy.training"]], "resnetwrapper (class in hippynn.layers.transform)": [[88, "hippynn.layers.transform.ResNetWrapper"]], "__init__() (resnetwrapper method)": [[88, "hippynn.layers.transform.ResNetWrapper.__init__"]], "forward() (resnetwrapper method)": [[88, "hippynn.layers.transform.ResNetWrapper.forward"]], "hippynn.layers.transform": [[88, "module-hippynn.layers.transform"]], "regularization_params() (resnetwrapper method)": [[88, "hippynn.layers.transform.ResNetWrapper.regularization_params"]], "training (resnetwrapper attribute)": [[88, "hippynn.layers.transform.ResNetWrapper.training"]], "hippynn.networks": [[89, "module-hippynn.networks"]], "hipnn (class in hippynn.networks.hipnn)": [[90, "hippynn.networks.hipnn.Hipnn"]], "hipnnquad (class in hippynn.networks.hipnn)": [[90, "hippynn.networks.hipnn.HipnnQuad"]], "hipnnvec (class in hippynn.networks.hipnn)": [[90, "hippynn.networks.hipnn.HipnnVec"]], "compute_hipnn_e0() (in module hippynn.networks.hipnn)": [[90, "hippynn.networks.hipnn.compute_hipnn_e0"]], "forward() (hipnn method)": [[90, "hippynn.networks.hipnn.Hipnn.forward"]], "forward() (hipnnvec method)": [[90, "hippynn.networks.hipnn.HipnnVec.forward"]], "hippynn.networks.hipnn": [[90, "module-hippynn.networks.hipnn"]], "interaction_layers (hipnn property)": [[90, "hippynn.networks.hipnn.Hipnn.interaction_layers"]], "regularization_params() (hipnn method)": [[90, "hippynn.networks.hipnn.Hipnn.regularization_params"]], "resnet (hipnnquad attribute)": [[90, "hippynn.networks.hipnn.HipnnQuad.resnet"]], "resnet (hipnnvec attribute)": [[90, "hippynn.networks.hipnn.HipnnVec.resnet"]], "sensitivity_layers (hipnn property)": [[90, "hippynn.networks.hipnn.Hipnn.sensitivity_layers"]], "training (hipnn attribute)": [[90, "hippynn.networks.hipnn.Hipnn.training"]], "training (hipnnquad attribute)": [[90, "hippynn.networks.hipnn.HipnnQuad.training"]], "training (hipnnvec attribute)": [[90, "hippynn.networks.hipnn.HipnnVec.training"]]}})