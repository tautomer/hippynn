Search.setIndex({"docnames": ["api_documentation/hippynn", "api_documentation/hippynn.custom_kernels", "api_documentation/hippynn.custom_kernels.autograd_wrapper", "api_documentation/hippynn.custom_kernels.env_cupy", "api_documentation/hippynn.custom_kernels.env_numba", "api_documentation/hippynn.custom_kernels.env_pytorch", "api_documentation/hippynn.custom_kernels.fast_convert", "api_documentation/hippynn.custom_kernels.tensor_wrapper", "api_documentation/hippynn.custom_kernels.test_env_cupy", "api_documentation/hippynn.custom_kernels.test_env_numba", "api_documentation/hippynn.custom_kernels.utils", "api_documentation/hippynn.databases", "api_documentation/hippynn.databases.SNAPJson", "api_documentation/hippynn.databases.database", "api_documentation/hippynn.databases.h5_pyanitools", "api_documentation/hippynn.databases.ondisk", "api_documentation/hippynn.databases.restarter", "api_documentation/hippynn.experiment", "api_documentation/hippynn.experiment.assembly", "api_documentation/hippynn.experiment.controllers", "api_documentation/hippynn.experiment.device", "api_documentation/hippynn.experiment.evaluator", "api_documentation/hippynn.experiment.metric_tracker", "api_documentation/hippynn.experiment.routines", "api_documentation/hippynn.experiment.serialization", "api_documentation/hippynn.graphs", "api_documentation/hippynn.graphs.gops", "api_documentation/hippynn.graphs.graph", "api_documentation/hippynn.graphs.indextransformers", "api_documentation/hippynn.graphs.indextransformers.atoms", "api_documentation/hippynn.graphs.indextransformers.pairs", "api_documentation/hippynn.graphs.indextransformers.tensors", "api_documentation/hippynn.graphs.indextypes", "api_documentation/hippynn.graphs.indextypes.reduce_funcs", "api_documentation/hippynn.graphs.indextypes.registry", "api_documentation/hippynn.graphs.indextypes.type_def", "api_documentation/hippynn.graphs.nodes", "api_documentation/hippynn.graphs.nodes.base", "api_documentation/hippynn.graphs.nodes.base.algebra", "api_documentation/hippynn.graphs.nodes.base.base", "api_documentation/hippynn.graphs.nodes.base.definition_helpers", "api_documentation/hippynn.graphs.nodes.base.multi", "api_documentation/hippynn.graphs.nodes.base.node_functions", "api_documentation/hippynn.graphs.nodes.indexers", "api_documentation/hippynn.graphs.nodes.inputs", "api_documentation/hippynn.graphs.nodes.loss", "api_documentation/hippynn.graphs.nodes.misc", "api_documentation/hippynn.graphs.nodes.networks", "api_documentation/hippynn.graphs.nodes.pairs", "api_documentation/hippynn.graphs.nodes.physics", "api_documentation/hippynn.graphs.nodes.tags", "api_documentation/hippynn.graphs.nodes.targets", "api_documentation/hippynn.graphs.predictor", "api_documentation/hippynn.graphs.viz", "api_documentation/hippynn.interfaces", "api_documentation/hippynn.interfaces.ase_interface", "api_documentation/hippynn.interfaces.ase_interface.calculator", "api_documentation/hippynn.interfaces.ase_interface.pairfinder", "api_documentation/hippynn.interfaces.lammps_interface", "api_documentation/hippynn.interfaces.lammps_interface.mliap_interface", "api_documentation/hippynn.interfaces.pyseqm_interface", "api_documentation/hippynn.interfaces.pyseqm_interface.callback", "api_documentation/hippynn.interfaces.pyseqm_interface.check", "api_documentation/hippynn.interfaces.pyseqm_interface.gen_par", "api_documentation/hippynn.interfaces.pyseqm_interface.mlseqm", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_modules", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_nodes", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_one", "api_documentation/hippynn.interfaces.schnetpack_interface", "api_documentation/hippynn.layers", "api_documentation/hippynn.layers.algebra", "api_documentation/hippynn.layers.hiplayers", "api_documentation/hippynn.layers.indexers", "api_documentation/hippynn.layers.pairs", "api_documentation/hippynn.layers.pairs.analysis", "api_documentation/hippynn.layers.pairs.dispatch", "api_documentation/hippynn.layers.pairs.indexing", "api_documentation/hippynn.layers.pairs.open", "api_documentation/hippynn.layers.pairs.periodic", "api_documentation/hippynn.layers.physics", "api_documentation/hippynn.layers.regularization", "api_documentation/hippynn.layers.targets", "api_documentation/hippynn.layers.transform", "api_documentation/hippynn.networks", "api_documentation/hippynn.networks.hipnn", "api_documentation/hippynn.plotting", "api_documentation/hippynn.plotting.plotmaker", "api_documentation/hippynn.plotting.plotters", "api_documentation/hippynn.plotting.timeplots", "api_documentation/hippynn.pretraining", "api_documentation/hippynn.tools", "api_documentation/modules", "examples/ase_calculator", "examples/controller", "examples/forces", "examples/index", "examples/minimal_workflow", "examples/mliap_unified", "examples/periodic", "examples/plotting", "examples/predictor", "examples/restarting", "index", "installation", "license", "user_guide/ckernels", "user_guide/concepts", "user_guide/custom_nodes", "user_guide/databases", "user_guide/features", "user_guide/index", "user_guide/loss_graph", "user_guide/settings", "user_guide/units"], "filenames": ["api_documentation/hippynn.rst", "api_documentation/hippynn.custom_kernels.rst", "api_documentation/hippynn.custom_kernels.autograd_wrapper.rst", "api_documentation/hippynn.custom_kernels.env_cupy.rst", "api_documentation/hippynn.custom_kernels.env_numba.rst", "api_documentation/hippynn.custom_kernels.env_pytorch.rst", "api_documentation/hippynn.custom_kernels.fast_convert.rst", "api_documentation/hippynn.custom_kernels.tensor_wrapper.rst", "api_documentation/hippynn.custom_kernels.test_env_cupy.rst", "api_documentation/hippynn.custom_kernels.test_env_numba.rst", "api_documentation/hippynn.custom_kernels.utils.rst", "api_documentation/hippynn.databases.rst", "api_documentation/hippynn.databases.SNAPJson.rst", "api_documentation/hippynn.databases.database.rst", "api_documentation/hippynn.databases.h5_pyanitools.rst", "api_documentation/hippynn.databases.ondisk.rst", "api_documentation/hippynn.databases.restarter.rst", "api_documentation/hippynn.experiment.rst", "api_documentation/hippynn.experiment.assembly.rst", "api_documentation/hippynn.experiment.controllers.rst", "api_documentation/hippynn.experiment.device.rst", "api_documentation/hippynn.experiment.evaluator.rst", "api_documentation/hippynn.experiment.metric_tracker.rst", "api_documentation/hippynn.experiment.routines.rst", "api_documentation/hippynn.experiment.serialization.rst", "api_documentation/hippynn.graphs.rst", "api_documentation/hippynn.graphs.gops.rst", "api_documentation/hippynn.graphs.graph.rst", "api_documentation/hippynn.graphs.indextransformers.rst", "api_documentation/hippynn.graphs.indextransformers.atoms.rst", "api_documentation/hippynn.graphs.indextransformers.pairs.rst", "api_documentation/hippynn.graphs.indextransformers.tensors.rst", "api_documentation/hippynn.graphs.indextypes.rst", "api_documentation/hippynn.graphs.indextypes.reduce_funcs.rst", "api_documentation/hippynn.graphs.indextypes.registry.rst", "api_documentation/hippynn.graphs.indextypes.type_def.rst", "api_documentation/hippynn.graphs.nodes.rst", "api_documentation/hippynn.graphs.nodes.base.rst", "api_documentation/hippynn.graphs.nodes.base.algebra.rst", "api_documentation/hippynn.graphs.nodes.base.base.rst", "api_documentation/hippynn.graphs.nodes.base.definition_helpers.rst", "api_documentation/hippynn.graphs.nodes.base.multi.rst", "api_documentation/hippynn.graphs.nodes.base.node_functions.rst", "api_documentation/hippynn.graphs.nodes.indexers.rst", "api_documentation/hippynn.graphs.nodes.inputs.rst", "api_documentation/hippynn.graphs.nodes.loss.rst", "api_documentation/hippynn.graphs.nodes.misc.rst", "api_documentation/hippynn.graphs.nodes.networks.rst", "api_documentation/hippynn.graphs.nodes.pairs.rst", "api_documentation/hippynn.graphs.nodes.physics.rst", "api_documentation/hippynn.graphs.nodes.tags.rst", "api_documentation/hippynn.graphs.nodes.targets.rst", "api_documentation/hippynn.graphs.predictor.rst", "api_documentation/hippynn.graphs.viz.rst", "api_documentation/hippynn.interfaces.rst", "api_documentation/hippynn.interfaces.ase_interface.rst", "api_documentation/hippynn.interfaces.ase_interface.calculator.rst", "api_documentation/hippynn.interfaces.ase_interface.pairfinder.rst", "api_documentation/hippynn.interfaces.lammps_interface.rst", "api_documentation/hippynn.interfaces.lammps_interface.mliap_interface.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.callback.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.check.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.gen_par.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.mlseqm.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_modules.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_nodes.rst", "api_documentation/hippynn.interfaces.pyseqm_interface.seqm_one.rst", "api_documentation/hippynn.interfaces.schnetpack_interface.rst", "api_documentation/hippynn.layers.rst", "api_documentation/hippynn.layers.algebra.rst", "api_documentation/hippynn.layers.hiplayers.rst", "api_documentation/hippynn.layers.indexers.rst", "api_documentation/hippynn.layers.pairs.rst", "api_documentation/hippynn.layers.pairs.analysis.rst", "api_documentation/hippynn.layers.pairs.dispatch.rst", "api_documentation/hippynn.layers.pairs.indexing.rst", "api_documentation/hippynn.layers.pairs.open.rst", "api_documentation/hippynn.layers.pairs.periodic.rst", "api_documentation/hippynn.layers.physics.rst", "api_documentation/hippynn.layers.regularization.rst", "api_documentation/hippynn.layers.targets.rst", "api_documentation/hippynn.layers.transform.rst", "api_documentation/hippynn.networks.rst", "api_documentation/hippynn.networks.hipnn.rst", "api_documentation/hippynn.plotting.rst", "api_documentation/hippynn.plotting.plotmaker.rst", "api_documentation/hippynn.plotting.plotters.rst", "api_documentation/hippynn.plotting.timeplots.rst", "api_documentation/hippynn.pretraining.rst", "api_documentation/hippynn.tools.rst", "api_documentation/modules.rst", "examples/ase_calculator.rst", "examples/controller.rst", "examples/forces.rst", "examples/index.rst", "examples/minimal_workflow.rst", "examples/mliap_unified.rst", "examples/periodic.rst", "examples/plotting.rst", "examples/predictor.rst", "examples/restarting.rst", "index.rst", "installation.rst", "license.rst", "user_guide/ckernels.rst", "user_guide/concepts.rst", "user_guide/custom_nodes.rst", "user_guide/databases.rst", "user_guide/features.rst", "user_guide/index.rst", "user_guide/loss_graph.rst", "user_guide/settings.rst", "user_guide/units.rst"], "titles": ["hippynn package", "custom_kernels package", "autograd_wrapper module", "env_cupy module", "env_numba module", "env_pytorch module", "fast_convert module", "tensor_wrapper module", "test_env_cupy module", "test_env_numba module", "utils module", "databases package", "SNAPJson module", "database module", "h5_pyanitools module", "ondisk module", "restarter module", "experiment package", "assembly module", "controllers module", "device module", "evaluator module", "metric_tracker module", "routines module", "serialization module", "graphs package", "gops module", "graph module", "indextransformers package", "atoms module", "pairs module", "tensors module", "indextypes package", "reduce_funcs module", "registry module", "type_def module", "nodes package", "base package", "algebra module", "base module", "definition_helpers module", "multi module", "node_functions module", "indexers module", "inputs module", "loss module", "misc module", "networks module", "pairs module", "physics module", "tags module", "targets module", "predictor module", "viz module", "interfaces package", "ase_interface package", "calculator module", "pairfinder module", "lammps_interface package", "mliap_interface module", "pyseqm_interface package", "callback module", "check module", "gen_par module", "mlseqm module", "seqm_modules module", "seqm_nodes module", "seqm_one module", "schnetpack_interface package", "layers package", "algebra module", "hiplayers module", "indexers module", "pairs package", "analysis module", "dispatch module", "indexing module", "open module", "periodic module", "physics module", "regularization module", "targets module", "transform module", "networks package", "hipnn module", "plotting package", "plotmaker module", "plotters module", "timeplots module", "pretraining module", "tools module", "hippynn", "ASE Calculators", "Controller", "Force Training", "Examples", "Minimal Workflow", "LAMMPS interface", "Periodic Boundary Conditions", "Plotting", "Predictor", "Restarting training", "Welcome to hippynn\u2019s documentation!", "Installation", "License", "Custom Kernels", "hippynn Concepts", "Creating Custom Node Types", "Databases", "hippynn Features", "User Guide", "Model and Loss Graphs", "Library Settings", "Units in hippynn"], "terms": {"document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 107, 109], "The": [0, 11, 15, 17, 19, 21, 23, 25, 26, 32, 34, 40, 52, 53, 72, 82, 86, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113], "python": [0, 38, 96, 97, 102, 103, 105, 109, 112], "subpackag": [0, 25, 36, 54, 69, 105, 106], "custom_kernel": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 91, 105], "envsum": [0, 1, 2, 3, 4, 5, 91, 105], "featsum": [0, 1, 2, 5, 91, 105], "sensesum": [0, 1, 2, 5, 91], "set_custom_kernel": [0, 1, 91, 105, 112], "autograd_wrapp": [0, 1, 91], "modul": [0, 1, 11, 17, 25, 28, 32, 36, 37, 54, 55, 58, 60, 68, 69, 73, 83, 85, 91, 96, 98, 101, 102, 106, 107, 109, 112], "wrap_envop": [0, 1, 2, 91], "env_cupi": [0, 1, 91], "cupyenvsum": [0, 1, 3, 91], "cupyfeatsum": [0, 1, 3, 91], "cupygpukernel": [0, 1, 3, 91], "__init__": [0, 1, 3, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 27, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 107], "cupysensesum": [0, 1, 3, 91], "env_numba": [0, 1, 91], "wrappedenvsum": [0, 1, 3, 4, 91], "cpu_kernel": [0, 1, 4, 7, 91], "launch_bound": [0, 1, 4, 7, 91], "make_kernel": [0, 1, 4, 7, 91], "out_shap": [0, 1, 4, 7, 91], "wrappedfeatsum": [0, 1, 3, 4, 91], "wrappedsensesum": [0, 1, 3, 4, 91], "env_pytorch": [0, 1, 91], "fast_convert": [0, 1, 91], "batch_convert_torch_to_numba": [0, 1, 6, 91], "tensor_wrapp": [0, 1, 91], "numbacompatibletensorfunct": [0, 1, 4, 7, 91], "via_numpi": [0, 1, 7, 91], "test_env_cupi": [0, 1, 91], "test_env_numba": [0, 1, 91], "envops_test": [0, 1, 9, 91], "all_close_witherror": [0, 1, 9, 91], "check_all_grad": [0, 1, 9, 91], "check_all_grad_onc": [0, 1, 9, 91], "check_allclos": [0, 1, 9, 91], "check_allclose_onc": [0, 1, 9, 91], "check_correct": [0, 1, 9, 91], "check_empti": [0, 1, 9, 91], "check_grad_and_gradgrad": [0, 1, 9, 91], "check_spe": [0, 1, 9, 91], "timedsnippet": [0, 1, 9, 91], "elaps": [0, 1, 9, 91], "timerhold": [0, 1, 9, 91], "add": [0, 1, 7, 9, 22, 38, 91, 96, 107], "mean_elaps": [0, 1, 9, 91], "median_elaps": [0, 1, 9, 91], "get_simulated_data": [0, 1, 9, 91], "main": [0, 1, 9, 40, 47, 48, 49, 84, 91, 96, 107], "util": [0, 1, 91, 105], "resort_pairs_cach": [0, 1, 10, 91], "databas": [0, 12, 14, 15, 16, 17, 18, 23, 24, 32, 33, 38, 39, 41, 44, 45, 84, 89, 91, 93, 96, 98, 100, 101, 109, 110, 111, 113], "make_explicit_split": [0, 11, 13, 91], "make_gener": [0, 11, 13, 91], "make_random_split": [0, 11, 13, 91], "make_trainvalidtest_split": [0, 11, 13, 91], "send_to_devic": [0, 11, 13, 91], "split_the_rest": [0, 11, 13, 91], "var_list": [0, 11, 13, 17, 21, 91], "directorydatabas": [0, 11, 15, 91, 96], "get_file_dict": [0, 11, 15, 91], "load_arrai": [0, 11, 12, 14, 15, 91], "npzdatabas": [0, 11, 15, 91], "snapjson": [0, 11, 91], "snapdirectorydatabas": [0, 11, 12, 91], "extract_snap_fil": [0, 11, 12, 91], "filter_arrai": [0, 11, 12, 14, 91], "process_config": [0, 11, 12, 91], "namedtensordataset": [0, 11, 13, 91], "tensor": [0, 6, 11, 13, 24, 25, 28, 32, 41, 52, 79, 81, 89, 91, 98, 100, 101, 106, 107, 109], "compute_index_mask": [0, 11, 13, 91], "prettyprint_arrai": [0, 11, 13, 91], "h5_pyanitool": [0, 11, 91], "pyanidirectorydb": [0, 11, 14, 91], "pyanifiledb": [0, 11, 14, 91], "pyanimethod": [0, 11, 14, 91], "determine_key_structur": [0, 11, 14, 91], "extract_full_fil": [0, 11, 14, 91], "process_batch": [0, 11, 14, 91], "ondisk": [0, 11, 91], "restart": [0, 11, 12, 14, 15, 24, 91, 95, 108], "norestart": [0, 11, 16, 91], "attempt_reload": [0, 11, 16, 91], "restartdb": [0, 11, 16, 91], "make_restart": [0, 11, 16, 91], "experi": [0, 18, 19, 20, 21, 22, 23, 24, 48, 91, 93, 96, 98, 99, 101, 110], "setupparam": [0, 17, 23, 91, 93, 96], "batch_siz": [0, 11, 13, 17, 18, 19, 23, 25, 52, 89, 91, 93, 96, 100], "control": [0, 11, 17, 23, 24, 25, 61, 91, 95, 101], "devic": [0, 9, 11, 13, 17, 18, 21, 23, 24, 25, 52, 59, 63, 89, 91, 93, 97], "eval_batch_s": [0, 17, 19, 23, 91, 93], "fraction_train_ev": [0, 17, 19, 23, 91, 93], "learning_r": [0, 17, 23, 91, 96], "max_epoch": [0, 17, 19, 23, 91, 93, 96], "optim": [0, 17, 19, 20, 23, 90, 91, 93, 96, 101], "schedul": [0, 17, 19, 23, 91, 93], "stopping_kei": [0, 17, 19, 22, 23, 91, 93, 96], "assemble_for_train": [0, 17, 18, 91, 96, 98, 99], "setup_and_train": [0, 17, 23, 91, 96, 101], "setup_train": [0, 17, 23, 91, 101], "test_model": [0, 17, 23, 91], "train_model": [0, 17, 23, 91, 101], "assembli": [0, 17, 48, 91, 98], "trainingmodul": [0, 17, 18, 23, 24, 91], "evalu": [0, 11, 13, 17, 18, 19, 20, 22, 23, 25, 26, 79, 89, 91, 96, 98, 99, 101, 109, 111, 112], "loss": [0, 17, 18, 20, 21, 23, 24, 25, 32, 33, 36, 39, 91, 94, 96, 101, 104, 109, 110, 112, 113], "model": [0, 11, 13, 17, 18, 20, 21, 22, 23, 24, 25, 39, 52, 54, 55, 56, 59, 69, 83, 84, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 105, 107, 110, 113], "build_loss_modul": [0, 17, 18, 91], "determine_out_in_targ": [0, 17, 18, 91], "gemerate_database_info": [0, 17, 18, 91], "precompute_pair": [0, 17, 18, 48, 91, 98], "load_state_dict": [0, 17, 19, 91], "push_epoch": [0, 17, 19, 91], "state_dict": [0, 17, 19, 23, 24, 91], "patiencecontrol": [0, 17, 19, 24, 91, 93], "raisebatchsizeonplateau": [0, 17, 19, 91, 93], "set_control": [0, 17, 19, 91], "step": [0, 17, 19, 23, 40, 91, 98, 101], "is_scheduler_lik": [0, 17, 19, 91], "set_devic": [0, 17, 20, 91], "metric_track": [0, 17, 23, 24, 61, 91], "metrictrack": [0, 17, 22, 23, 24, 91], "current_epoch": [0, 17, 22, 91], "evaluation_print": [0, 17, 22, 91], "evaluation_print_bett": [0, 17, 22, 91], "from_evalu": [0, 17, 22, 91], "plot_over_tim": [0, 17, 22, 85, 88, 91], "register_metr": [0, 17, 22, 91], "table_evaluation_print": [0, 17, 22, 91], "table_evaluation_print_bett": [0, 17, 22, 91], "routin": [0, 17, 20, 91], "training_loop": [0, 17, 23, 91], "serial": [0, 17, 20, 91, 98, 101], "check_mapping_devic": [0, 17, 24, 91], "create_st": [0, 17, 24, 91], "create_structure_fil": [0, 17, 24, 91], "load_checkpoint": [0, 17, 24, 91, 101], "load_checkpoint_from_cwd": [0, 17, 24, 91, 97, 101], "load_model_from_cwd": [0, 17, 24, 91, 101], "load_saved_tensor": [0, 17, 24, 91], "restore_checkpoint": [0, 17, 24, 91], "graph": [0, 17, 18, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 76, 91, 96, 100, 103, 107, 110, 112, 113], "graphmodul": [0, 17, 18, 20, 21, 24, 25, 27, 52, 53, 55, 56, 91, 96, 100, 106, 112], "extra_repr": [0, 25, 27, 69, 70, 91], "forward": [0, 25, 26, 27, 36, 45, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 105], "get_modul": [0, 25, 27, 91], "node_from_nam": [0, 25, 27, 91, 92, 97], "print_structur": [0, 25, 27, 91], "train": [0, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 45, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 95, 96, 97, 98, 99, 100, 106, 108, 110, 111, 112, 113], "idxtyp": [0, 25, 32, 33, 34, 35, 47, 48, 49, 91, 106, 107], "atom": [0, 9, 25, 28, 32, 35, 43, 47, 49, 51, 54, 55, 56, 59, 66, 72, 76, 81, 84, 89, 91, 92, 96, 97, 98, 105, 106, 107, 108, 111, 112], "molatom": [0, 25, 32, 35, 43, 48, 91], "molatomatom": [0, 25, 32, 35, 48, 91], "molecul": [0, 9, 25, 32, 35, 66, 72, 81, 91, 100, 106, 107], "notfound": [0, 25, 32, 35, 91], "pair": [0, 9, 18, 25, 26, 28, 32, 35, 36, 43, 51, 69, 72, 74, 75, 76, 77, 78, 79, 89, 91, 105, 106, 108], "quadmol": [0, 25, 32, 35, 91], "quadpack": [0, 25, 32, 35, 69, 72, 91], "scalar": [0, 25, 32, 35, 51, 81, 91, 107], "predictor": [0, 25, 91, 95, 96, 101], "add_output": [0, 25, 52, 91], "apply_to_databas": [0, 25, 52, 91, 96], "from_graph": [0, 25, 52, 91, 96, 100], "input": [0, 11, 12, 13, 14, 15, 17, 18, 25, 26, 27, 32, 33, 36, 38, 39, 41, 42, 45, 52, 59, 71, 82, 84, 91, 96, 97, 98, 100, 105, 107, 108, 113], "model_devic": [0, 24, 25, 52, 59, 91, 97, 101], "output": [0, 9, 11, 12, 13, 14, 15, 17, 18, 25, 26, 32, 33, 34, 40, 41, 47, 48, 49, 52, 53, 55, 56, 71, 82, 86, 91, 92, 96, 98, 100, 106, 107, 111, 113], "predict_al": [0, 25, 52, 91], "predict_batch": [0, 25, 52, 91], "wrap_output": [0, 25, 52, 91], "compute_evaluation_ord": [0, 25, 26, 91], "copy_subgraph": [0, 25, 26, 91], "find_rel": [0, 25, 36, 37, 40, 42, 91], "find_unique_rel": [0, 25, 36, 37, 40, 42, 91, 107], "get_connected_nod": [0, 25, 36, 37, 42, 91], "get_subgraph": [0, 25, 26, 91], "replace_nod": [0, 25, 26, 91], "indextransform": [0, 25, 29, 30, 31, 34, 91], "idx_atom_molatom": [0, 25, 28, 29, 91], "idx_molatom_atom": [0, 25, 28, 29, 91], "idx_molatomatom_pair": [0, 25, 28, 30, 91], "idx_pair_molatomatom": [0, 25, 28, 30, 91], "idx_quadtrimol": [0, 25, 28, 31, 91], "indextyp": [0, 25, 33, 34, 35, 91, 109], "clear_index_cach": [0, 25, 32, 34, 91], "db_form": [0, 25, 32, 33, 91], "elementwise_compare_reduc": [0, 25, 32, 33, 91], "get_reduced_index_st": [0, 25, 32, 33, 91], "index_type_coercion": [0, 25, 32, 33, 91, 107], "register_index_transform": [0, 25, 32, 34, 91], "soft_index_type_coercion": [0, 25, 32, 33, 91], "reduce_func": [0, 25, 32, 91], "db_state_of": [0, 25, 32, 33, 91], "dispatch_index": [0, 25, 32, 33, 91], "registri": [0, 25, 32, 91], "type_def": [0, 25, 32, 91], "node": [0, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 66, 89, 91, 92, 94, 96, 97, 98, 99, 100, 108, 109, 110, 111, 113], "base": [0, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 97, 100, 106, 107, 109], "algebra": [0, 25, 36, 37, 69, 91, 96], "addnod": [0, 25, 36, 37, 38], "atleast2d": [0, 25, 36, 37, 38, 69, 70, 91], "binnod": [0, 25, 36, 37, 38], "divnod": [0, 25, 36, 37, 38], "invnod": [0, 25, 36, 37, 38], "mulnod": [0, 25, 36, 37, 38], "negnod": [0, 25, 36, 37, 38], "pownod": [0, 25, 36, 37, 38], "subnod": [0, 25, 36, 37, 38], "unarynod": [0, 25, 36, 37, 38], "valuenod": [0, 25, 36, 37, 38], "coerces_values_to_nod": [0, 25, 36, 37, 38], "wrap_as_nod": [0, 25, 36, 37, 38], "inputnod": [0, 25, 36, 37, 39, 44, 67], "lossinputnod": [0, 25, 36, 37, 39], "lossprednod": [0, 25, 36, 37, 39], "losstruenod": [0, 25, 36, 37, 39], "singlenod": [0, 25, 36, 37, 39, 41, 43, 45, 46, 47, 48, 49, 66, 68, 106, 107], "definition_help": [0, 25, 36, 37, 91, 107], "alwaysmatch": [0, 25, 36, 37, 40], "autokw": [0, 25, 36, 37, 40, 43, 47, 48, 49, 51, 64, 66, 67, 68, 107], "autonokw": [0, 25, 36, 37, 40, 43, 46, 48, 49, 59, 107], "expandparentmeta": [0, 25, 36, 37, 40], "expandpar": [0, 25, 36, 37, 40, 43, 47, 48, 49, 51, 59, 66, 67, 107], "formassertlength": [0, 25, 36, 37, 40], "formassert": [0, 25, 36, 37, 40], "formhandl": [0, 25, 36, 37, 40], "formtransform": [0, 25, 36, 37, 40], "indexformtransform": [0, 25, 36, 37, 40], "mainoutputtransform": [0, 25, 36, 37, 40], "parentexpand": [0, 25, 36, 37, 40, 107], "tupletypemismatch": [0, 25, 36, 37, 40], "adds_to_form": [0, 25, 36, 37, 40], "format_form_nam": [0, 25, 36, 37, 40], "temporary_par": [0, 25, 36, 37, 40], "multi": [0, 25, 27, 36, 37, 70, 91], "indexnod": [0, 25, 36, 37, 41], "multinod": [0, 25, 32, 33, 36, 37, 40, 41, 43, 46, 47, 48, 49, 51, 53, 59, 64, 66, 67, 96, 106, 110], "node_funct": [0, 25, 36, 37, 91], "nodeambiguityerror": [0, 25, 26, 36, 37, 42], "nodenotfound": [0, 25, 36, 37, 42], "nodeoperationerror": [0, 25, 26, 36, 37, 42], "index": [0, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 40, 41, 44, 47, 48, 49, 52, 69, 70, 73, 81, 91, 98, 102, 106, 107], "atomdeindex": [0, 25, 36, 43, 69, 72, 91], "expand0": [0, 25, 36, 43, 48, 51, 54, 60, 66, 67], "atomreindex": [0, 25, 36, 43, 69, 72, 91], "expand1": [0, 25, 36, 43, 48, 51], "filterbondsonewai": [0, 25, 36, 43, 69, 72, 91], "onehotencod": [0, 25, 36, 43, 48, 91], "auto_modul": [0, 25, 36, 37, 38, 40, 43, 48, 51], "paddingindex": [0, 25, 36, 43, 48, 49, 69, 72, 91], "quadunpacknod": [0, 25, 36, 43, 91], "acquire_encoding_pad": [0, 25, 36, 43, 91, 98, 107], "cellnod": [0, 25, 36, 44, 47, 48, 91, 98], "input_type_str": [0, 25, 36, 37, 39, 44, 54, 60, 67], "indic": [0, 13, 17, 23, 25, 36, 44, 91, 112], "inputcharg": [0, 25, 36, 44, 91], "pairindic": [0, 25, 36, 44, 91], "positionsnod": [0, 25, 36, 44, 47, 48, 49, 91, 96, 98, 107, 113], "speciesnod": [0, 25, 36, 44, 47, 48, 49, 91, 96, 98, 113], "splitindic": [0, 25, 36, 44, 91], "maeloss": [0, 25, 36, 45, 91, 96, 111], "torch_modul": [0, 25, 36, 37, 38, 45, 106, 107], "mseloss": [0, 25, 36, 45, 91, 96], "mean": [0, 25, 26, 32, 36, 45, 91, 96, 111, 112, 113], "meansq": [0, 25, 36, 45, 91], "reducesinglenod": [0, 25, 36, 45, 91], "of_nod": [0, 25, 36, 45, 96, 111], "rsq": [0, 25, 36, 45, 91], "rsqmod": [0, 25, 36, 45, 91], "std": [0, 25, 36, 45, 91], "var": [0, 25, 36, 45, 65, 91], "l1reg": [0, 25, 36, 45, 91], "l2reg": [0, 25, 36, 45, 91], "lpreg": [0, 25, 36, 45, 69, 80, 91], "mean_sq": [0, 25, 36, 45, 91], "misc": [0, 25, 36, 90, 91], "listnod": [0, 25, 36, 46, 91], "straininduc": [0, 25, 36, 46, 91], "network": [0, 18, 21, 25, 27, 36, 45, 50, 51, 66, 67, 68, 80, 84, 89, 91, 96, 98, 107, 110, 113], "defaultnetworkexpans": [0, 25, 36, 47, 91], "expansion0": [0, 25, 36, 47, 49, 51, 107], "expansion1": [0, 25, 36, 47, 49, 51, 107], "hipnn": [0, 9, 25, 36, 47, 71, 72, 79, 83, 91, 96, 98, 113], "expansion2": [0, 25, 36, 47, 49, 107], "hipnnquad": [0, 25, 36, 47, 83, 84, 91], "hipnnvec": [0, 25, 36, 47, 83, 84, 91], "dynamicperiodicpair": [0, 25, 36, 48, 91, 98], "externalneighborindex": [0, 25, 36, 48, 91], "mindistnod": [0, 25, 36, 48, 91], "expand2": [0, 25, 36, 48], "numpydynamicpair": [0, 25, 36, 48, 91], "openpairindex": [0, 25, 36, 48, 69, 73, 77, 91], "paddedneighbornod": [0, 25, 36, 48, 91], "paircach": [0, 25, 36, 44, 48, 50, 69, 73, 76, 91], "pairdeindex": [0, 25, 36, 48, 69, 73, 76, 91], "pairreindex": [0, 25, 36, 48, 69, 73, 76, 91], "pairuncach": [0, 25, 36, 48, 69, 73, 76, 91], "periodicpairindex": [0, 25, 36, 48, 69, 73, 78, 91, 98], "periodicpairoutput": [0, 25, 36, 48, 91], "rdfbin": [0, 25, 36, 48, 69, 73, 74, 91], "expand3": [0, 25, 36, 48], "physic": [0, 25, 36, 69, 91, 94, 96, 101, 109, 111], "atomtomolsumm": [0, 25, 36, 49, 91], "bondtomolsummm": [0, 25, 36, 49, 91], "chargemomentnod": [0, 25, 36, 49, 91, 107], "chargepairsetup": [0, 25, 36, 49, 91], "expansion3": [0, 25, 36, 49], "expansion4": [0, 25, 36, 49], "coulombenergynod": [0, 25, 36, 49, 91], "dipolenod": [0, 25, 36, 49, 91], "gradientnod": [0, 25, 36, 49, 91, 94], "peratom": [0, 25, 36, 49, 69, 79, 84, 89, 91, 111], "quadrupolenod": [0, 25, 36, 49, 91], "screenedcoulombenergynod": [0, 25, 36, 49, 91], "stressforcenod": [0, 25, 36, 49, 91], "vecmag": [0, 25, 36, 49, 69, 79, 91], "tag": [0, 25, 26, 36, 62, 91, 107], "atomindex": [0, 25, 36, 43, 47, 48, 49, 50, 51, 91, 107], "charg": [0, 25, 36, 44, 49, 50, 51, 55, 56, 66, 79, 81, 91, 92, 107, 108, 109, 113], "encod": [0, 25, 36, 43, 47, 48, 49, 50, 72, 84, 89, 91], "species_set": [0, 25, 36, 43, 47, 50, 72, 74, 98, 107], "energi": [0, 25, 36, 50, 51, 55, 56, 59, 65, 66, 67, 79, 81, 84, 89, 91, 92, 96, 97, 100, 104, 107, 109, 111], "hatomregressor": [0, 25, 36, 50, 51, 91, 107], "pairindex": [0, 18, 25, 36, 47, 48, 49, 50, 91], "posit": [0, 25, 36, 44, 49, 50, 57, 63, 75, 79, 81, 89, 91, 94, 96, 98, 100, 107, 108, 113], "speci": [0, 14, 25, 36, 43, 44, 47, 49, 50, 63, 64, 65, 67, 72, 79, 84, 89, 91, 96, 97, 98, 100, 108, 111, 113], "target": [0, 11, 12, 13, 14, 15, 17, 18, 20, 25, 26, 36, 38, 39, 41, 44, 45, 65, 69, 86, 91, 96, 107, 113], "hbondnod": [0, 25, 36, 51, 91], "hchargenod": [0, 25, 36, 51, 91, 113], "henergynod": [0, 25, 36, 51, 89, 91, 96, 107], "localchargeenergi": [0, 25, 36, 51, 69, 81, 91], "localenergynod": [0, 25, 36, 51, 91], "gop": [0, 25, 91], "graphinconsist": [0, 25, 26, 91], "check_evaluation_ord": [0, 25, 26, 91], "check_link_consist": [0, 25, 26, 91], "replace_node_with_const": [0, 25, 26, 91], "search_by_nam": [0, 25, 26, 91], "viz": [0, 25, 91], "visualize_connected_nod": [0, 25, 53, 91], "visualize_graph_modul": [0, 25, 53, 91], "visualize_node_set": [0, 25, 53, 91], "interfac": [0, 25, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 91, 92, 95, 98, 103, 108, 110], "ase_interfac": [0, 54, 56, 57, 91, 92], "hippynncalcul": [0, 54, 55, 56, 91, 92], "calcul": [0, 23, 54, 55, 89, 91, 95, 96, 97, 106, 109, 111], "calculation_requir": [0, 54, 55, 56, 91], "get_charg": [0, 54, 55, 56, 91], "get_dipol": [0, 54, 55, 56, 91], "get_dipole_mo": [0, 54, 55, 56, 91], "get_energi": [0, 54, 55, 56, 91], "get_forc": [0, 54, 55, 56, 91], "get_free_energi": [0, 54, 55, 56, 91], "get_magmom": [0, 54, 55, 56, 91], "get_potential_energi": [0, 54, 55, 56, 91], "get_properti": [0, 54, 55, 56, 91], "get_stress": [0, 54, 55, 56, 91], "rebuild_neighbor": [0, 54, 55, 56, 91], "set_atom": [0, 54, 55, 56, 91], "calculator_from_model": [0, 54, 55, 56, 91], "pbchandl": [0, 54, 55, 56, 91], "set": [0, 1, 11, 12, 13, 14, 15, 17, 19, 20, 23, 25, 26, 27, 40, 42, 43, 47, 53, 54, 55, 56, 70, 72, 89, 93, 96, 98, 105, 106, 107, 108, 110, 111], "pass_to_pytorch": [0, 54, 55, 56, 91], "setup_ase_graph": [0, 54, 55, 56, 91], "pairfind": [0, 47, 49, 51, 54, 55, 91, 98], "aseneighbor": [0, 54, 55, 57, 91], "compute_on": [0, 54, 55, 57, 69, 73, 75], "asepairnod": [0, 54, 55, 57, 91], "ase_compute_neighbor": [0, 54, 55, 57, 91], "lammps_interfac": [0, 54, 59, 91], "mliap_interfac": [0, 54, 58, 91], "localatomenergynod": [0, 54, 58, 59, 91], "localatomsenergi": [0, 54, 58, 59, 91], "mliapinterfac": [0, 54, 58, 59, 91, 97], "compute_descriptor": [0, 54, 58, 59], "compute_forc": [0, 54, 58, 59], "compute_gradi": [0, 54, 58, 59], "setup_lammps_graph": [0, 54, 58, 59, 91], "pyseqm_interfac": [0, 54, 61, 62, 63, 64, 65, 66, 67, 91], "callback": [0, 17, 18, 23, 54, 60, 87, 91, 101, 109], "save_and_stop_aft": [0, 54, 60, 61, 91], "update_scf_backward_ep": [0, 54, 60, 61, 91], "update_scf_ep": [0, 54, 60, 61, 91], "check": [0, 11, 12, 13, 14, 15, 18, 24, 26, 54, 55, 56, 60, 91, 96, 101, 112], "check_dist": [0, 54, 60, 62, 91], "check_gradi": [0, 54, 60, 62, 91], "save": [0, 16, 17, 23, 24, 54, 60, 62, 64, 87, 91, 96, 97, 99, 101], "gen_par": [0, 54, 60, 91], "mlseqm": [0, 54, 60, 91], "mlseqm_nod": [0, 54, 60, 64, 91], "seqm_modul": [0, 54, 60, 91], "atommask": [0, 54, 60, 65, 91], "seqm_al": [0, 54, 60, 65, 67, 91], "seqm_energi": [0, 54, 60, 63, 65, 67, 91], "seqm_maskonmol": [0, 54, 60, 65, 91], "seqm_maskonmolatom": [0, 54, 60, 65, 91], "seqm_maskonmolorbit": [0, 54, 60, 65, 91], "seqm_maskonmolorbitalatom": [0, 54, 60, 65, 91], "seqm_molmask": [0, 54, 60, 65, 91], "seqm_orbitalmask": [0, 54, 60, 65, 91], "scale": [0, 54, 60, 65, 91, 109, 113], "num_orb": [0, 54, 60, 65, 91], "pack_par": [0, 54, 60, 65, 91], "seqm_nod": [0, 54, 60, 91], "atommasknod": [0, 54, 60, 66, 91], "seqm_allnod": [0, 54, 60, 66, 91], "seqm_energynod": [0, 54, 60, 66, 91], "seqm_maskonmolatomnod": [0, 54, 60, 66, 91], "seqm_maskonmolnod": [0, 54, 60, 66, 91], "seqm_maskonmolorbitalatomnod": [0, 54, 60, 66, 91], "seqm_maskonmolorbitalnod": [0, 54, 60, 66, 91], "seqm_molmasknod": [0, 54, 60, 66, 91], "seqm_orbitalmasknod": [0, 54, 60, 66, 91], "scalenod": [0, 54, 60, 66, 91], "seqm_on": [0, 54, 60, 91], "densitymatrixnod": [0, 54, 60, 67, 91], "energy_on": [0, 54, 60, 67, 91], "hamiltonian_on": [0, 54, 60, 67, 91], "notconvergednod": [0, 54, 60, 67, 91], "seqm_one_al": [0, 54, 60, 67, 91], "seqm_one_allnod": [0, 54, 60, 67, 91], "seqm_one_energi": [0, 54, 60, 67, 91], "seqm_one_energynod": [0, 54, 60, 67, 91], "schnetpack_interfac": [0, 54, 91], "schnetnod": [0, 54, 68, 91], "schnetwrapp": [0, 54, 68, 91], "create_schnetpack_input": [0, 54, 68, 91], "layer": [0, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 91, 96, 105, 107, 110], "analysi": [0, 69, 73, 91], "mindistmodul": [0, 69, 73, 74, 91], "bin_info": [0, 69, 73, 74], "min_dist_info": [0, 69, 73, 74, 91], "dispatch": [0, 32, 34, 69, 73, 91], "npneighbor": [0, 69, 73, 75, 91], "torchneighbor": [0, 69, 73, 75, 91], "neighbor_list_np": [0, 69, 73, 75, 91], "wrap_points_np": [0, 69, 73, 75, 91], "externalneighbor": [0, 69, 73, 76, 91], "molpairsumm": [0, 69, 73, 76, 91], "paddedneighmodul": [0, 69, 73, 76, 91], "set_imag": [0, 69, 73, 76], "padded_neighlist": [0, 69, 73, 76, 91], "open": [0, 48, 68, 69, 73, 89, 90, 91, 98, 104, 108], "period": [0, 47, 48, 69, 73, 89, 91, 95, 108, 109], "staticimageperiodicpairindex": [0, 69, 73, 78, 91], "idx": [0, 69, 70, 91], "lambdamodul": [0, 38, 45, 69, 70, 91], "listmod": [0, 69, 70, 91], "valuemod": [0, 69, 70, 91], "hiplay": [0, 69, 81, 91], "coscutoff": [0, 69, 71, 91], "gaussiansensitivitymodul": [0, 69, 71, 91], "interactlay": [0, 69, 71, 91], "regularization_param": [0, 69, 71, 82, 83, 84, 91], "interactlayerquad": [0, 69, 71, 91], "interactlayervec": [0, 69, 71, 91], "inversesensitivitymodul": [0, 69, 71, 81, 91], "sensitivitybottleneck": [0, 69, 71, 91], "sensitivitymodul": [0, 69, 71, 91], "warn_if_und": [0, 69, 71, 91], "cellscaleinduc": [0, 69, 72, 91], "molsumm": [0, 69, 72, 91], "onehotspeci": [0, 69, 72, 91], "quadunpack": [0, 69, 72, 91], "alphascreen": [0, 69, 79, 91], "coulombenergi": [0, 69, 79, 91], "dipol": [0, 49, 69, 79, 91, 92, 107], "ewaldrealspacescreen": [0, 69, 79, 91], "gradient": [0, 49, 69, 79, 91, 94], "localdampingcosin": [0, 69, 79, 91], "qscreen": [0, 69, 79, 91], "p_valu": [0, 69, 79, 91], "quadrupol": [0, 49, 69, 72, 79, 91, 107], "screenedcoulombenergi": [0, 69, 79, 91], "stressforc": [0, 69, 79, 91], "wolfscreen": [0, 69, 79, 91], "regular": [0, 69, 91, 96, 113], "hbondsymmetr": [0, 69, 81, 91], "hcharg": [0, 69, 81, 91, 113], "henergi": [0, 69, 81, 91, 96, 97, 107], "localenergi": [0, 69, 81, 91], "transform": [0, 26, 28, 32, 33, 34, 47, 48, 49, 69, 91, 106], "resnetwrapp": [0, 69, 82, 91], "interaction_lay": [0, 83, 84, 91], "sensitivity_lay": [0, 83, 84, 91], "resnet": [0, 82, 83, 84, 91], "compute_hipnn_e0": [0, 83, 84, 91], "plot": [0, 17, 18, 21, 23, 32, 33, 86, 87, 88, 91, 95, 96, 103, 110, 112], "plotmak": [0, 17, 18, 85, 91, 99], "assemble_modul": [0, 23, 85, 86, 91], "make_full_loc": [0, 85, 86, 91], "make_plot": [0, 85, 86, 87, 91], "plot_phas": [0, 85, 86, 91], "required_nod": [0, 25, 26, 85, 86, 91], "plotter": [0, 21, 85, 86, 91], "composedplott": [0, 85, 87, 91], "plt_fn": [0, 85, 87, 91], "hierarchicalityplot": [0, 85, 87, 91], "hist1d": [0, 85, 87, 91], "hist1dcomp": [0, 85, 87, 91], "hist2d": [0, 85, 87, 91, 99], "norm": [0, 85, 87, 91], "interactionplot": [0, 85, 87, 91], "sensitivityplot": [0, 85, 87, 91], "as_numpi": [0, 85, 87, 91], "timeplot": [0, 85, 91], "plot_all_over_tim": [0, 85, 88, 91], "submodul": [0, 1, 11, 17, 25, 28, 32, 36, 37, 55, 58, 60, 69, 73, 83, 85], "pretrain": [0, 91, 96], "calculate_min_dist": [0, 89, 91], "set_e0_valu": [0, 89, 91, 96], "tool": [0, 7, 40, 91, 96], "active_directori": [0, 90, 91, 96], "arrdict_len": [0, 90, 91], "device_fallback": [0, 90, 91], "isiter": [0, 90, 91], "log_termin": [0, 90, 91, 96], "np_of_torchdefaultdtyp": [0, 90, 91], "pad_np_array_to_length_with_zero": [0, 90, 91], "param_print": [0, 90, 91], "print_lr": [0, 90, 91], "progress_bar": [0, 90, 91], "teed_file_output": [0, 90, 91], "flush": [0, 90, 91], "write": [0, 59, 90, 91, 105, 109], "hippynn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 107, 108, 110, 111], "custom": [1, 3, 25, 27, 70, 93, 110, 112], "kernel": [1, 3, 110, 112], "hip": [1, 47, 71, 84, 105], "nn": [1, 18, 20, 47, 59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 84, 105, 106, 109], "interact": [1, 71, 72, 84, 89, 96, 105, 113], "sum": [1, 9, 51, 55, 56, 72, 81, 96, 105, 107], "thi": [1, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 89, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113], "provid": [1, 17, 23, 41, 59, 101, 102, 104, 105, 107, 108, 109], "implement": [1, 2, 3, 4, 5, 6, 9, 19, 25, 27, 32, 33, 40, 55, 56, 70, 73, 84, 101, 105, 106, 107, 109], "pytorch": [1, 2, 5, 9, 11, 12, 13, 14, 15, 17, 19, 23, 25, 27, 38, 39, 41, 44, 45, 69, 71, 72, 81, 82, 83, 92, 96, 98, 100, 101, 103, 105, 106, 107, 108, 110, 112], "numba": [1, 4, 6, 7, 103, 105, 109, 112], "cupi": [1, 3, 103, 105, 112], "take": [1, 17, 18, 21, 23, 25, 27, 45, 52, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 92, 96, 107, 108], "extra": [1, 25, 27, 70, 106], "memori": [1, 18, 21, 25, 52, 98, 100, 105, 109], "launch": [1, 105], "faster": [1, 105], "than": [1, 17, 22, 23, 25, 26, 42, 48, 98, 101, 105, 111, 113], "us": [1, 2, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 32, 33, 34, 40, 42, 43, 47, 48, 49, 51, 52, 55, 56, 58, 60, 66, 67, 68, 72, 79, 87, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 109, 111, 112, 113], "far": [1, 19, 22, 101, 113], "less": [1, 96, 98, 105], "do": [1, 17, 18, 19, 23, 25, 34, 52, 53, 89, 96, 98, 100, 101, 103, 104, 107, 111, 112], "come": [1, 107], "some": [1, 9, 25, 26, 42, 95, 96, 98, 101, 105, 106, 107, 111, 112], "overhead": [1, 7, 105], "gpu": [1, 3, 17, 21, 23, 98, 101, 105, 109], "onli": [1, 16, 17, 18, 23, 24, 40, 68, 72, 84, 90, 96, 101, 103, 107], "work": [1, 9, 16, 24, 72, 90, 96, 101, 104, 107, 110, 112, 113], "ar": [1, 9, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 34, 40, 47, 52, 55, 56, 65, 68, 70, 84, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "requir": [1, 25, 26, 40, 49, 98, 107], "cpu": [1, 9, 17, 18, 20, 21, 25, 52, 59, 63, 93, 97, 101, 103, 105, 109, 111], "oper": [1, 4, 5, 25, 26, 32, 33, 38, 52, 70, 79, 98, 104, 105, 107, 110, 113], "activ": [1, 17, 18, 21, 82, 84, 101, 113], "union": [1, 17, 20, 23, 24, 32, 34, 84], "bool": [1, 22, 25, 27, 45, 57, 59, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84], "str": [1, 11, 13, 17, 19, 20, 21, 23, 24, 32, 34, 84, 89], "true": [1, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 25, 26, 36, 37, 39, 45, 52, 53, 55, 56, 61, 81, 84, 87, 90, 96, 98, 99, 105, 109, 111, 112], "sourc": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 104, 112], "deactiv": 1, "paramet": [1, 2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 49, 52, 53, 55, 56, 59, 67, 71, 72, 79, 80, 81, 82, 84, 89, 90, 92, 93, 96, 101, 112, 113], "If": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 32, 33, 34, 42, 43, 47, 48, 49, 51, 52, 53, 55, 56, 84, 89, 90, 92, 100, 101, 103, 105, 106, 107, 112], "best": [1, 17, 19, 22, 23, 101], "avail": [1, 17, 23, 32, 33, 54, 107, 112], "fals": [1, 9, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 39, 47, 51, 52, 61, 81, 84, 87, 89, 90, 96, 97, 99, 107, 112], "turn": [1, 112], "them": [1, 9, 17, 19, 23, 25, 27, 32, 34, 45, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 96, 100, 103, 105, 107, 109, 112, 113], "off": [1, 101, 105], "default": [1, 17, 18, 19, 23, 24, 25, 32, 34, 47, 48, 52, 54, 55, 56, 84, 98, 101, 105, 107, 112], "those": [1, 72, 96, 105, 107], "explicitli": [1, 11, 15, 54, 101, 111, 112], "auto": [1, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 57, 59, 64, 66, 67, 68, 89, 101, 107, 112], "return": [1, 2, 11, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 33, 40, 42, 43, 47, 52, 53, 55, 56, 59, 68, 71, 72, 79, 81, 82, 84, 89, 90, 101, 106, 107], "none": [1, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 39, 40, 41, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 59, 65, 66, 67, 68, 70, 71, 79, 84, 86, 87, 89, 90, 98, 101, 107, 112], "wrap": [2, 20, 38, 55, 56, 68, 82, 98, 106, 108], "non": [2, 7, 9, 38, 89, 96], "autograd": [2, 109, 111], "envsum_impl": 2, "sensesum_impl": 2, "featsum_impl": 2, "implementt": 2, "class": [3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 90, 97, 106, 107], "object": [3, 7, 9, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 40, 48, 50, 52, 56, 59, 65, 66, 86, 87, 89, 90, 92, 93, 97, 98, 100, 101, 107, 108], "sense_shap": 4, "f": [4, 11, 15, 32, 34], "pf": 4, "pss": 4, "atom1_ids_shap": 4, "other_shap": 4, "static": [4, 40, 111], "kernel_dtyp": 4, "feat_shap": 4, "env_shap": 4, "pfirst_shap": 4, "psecond_shap": 4, "atom2_id_shap": 4, "atom2_startshap": 4, "pure": [5, 40, 55, 56, 105, 106, 109], "sensit": [5, 9, 71, 84, 96, 105, 112, 113], "featur": [5, 9, 17, 23, 43, 47, 49, 51, 70, 71, 72, 76, 79, 81, 82, 84, 95, 96, 102, 105, 107, 110, 113], "pair_first": [5, 9, 71, 72, 74, 76, 79, 81, 84], "pair_second": [5, 9, 71, 72, 74, 76, 79, 81, 84], "env": 5, "sens": 5, "version": [6, 107], "convert": [6, 7, 25, 32, 33, 43, 48, 52, 72, 76, 107], "note": [6, 9, 14, 18, 21, 25, 48, 52, 68, 72, 79, 84, 92, 96, 97, 107, 108, 112], "i": [6, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 33, 34, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 56, 65, 76, 79, 81, 82, 84, 86, 89, 90, 92, 93, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113], "entir": [6, 89, 100, 106, 111], "api": [6, 100, 102, 107, 110], "safe": 6, "ha": [6, 19, 26, 32, 33, 43, 47, 48, 49, 51, 54, 55, 56, 76, 89, 92, 93, 96, 98, 106, 112, 113], "expos": 6, "all": [6, 9, 16, 17, 18, 19, 23, 25, 26, 27, 40, 45, 53, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 90, 96, 100, 101, 103, 104, 105, 108, 111, 112], "function": [6, 7, 9, 11, 13, 15, 16, 17, 20, 24, 25, 26, 27, 31, 32, 33, 34, 37, 40, 45, 53, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 90, 96, 106, 107, 109, 112, 113], "directli": [6, 40, 97, 100, 101, 106, 109, 112], "typedict": 6, "torch": [6, 7, 11, 17, 18, 20, 23, 24, 25, 59, 79, 84, 89, 92, 93, 96, 97, 100, 101, 106, 107], "complex64": 6, "dtype": [6, 9, 79], "complex128": 6, "float16": 6, "float32": [6, 11, 96], "float64": [6, 11, 79, 92], "uint8": 6, "int8": 6, "int16": 6, "int32": 6, "int64": 6, "between": [7, 9, 16, 25, 32, 33, 34, 96, 108], "compat": [7, 19, 25, 32, 33, 42, 55, 56, 90, 106, 109], "arrai": [7, 9, 11, 12, 13, 14, 15, 18, 79, 89, 90, 94, 96, 108], "shape": [7, 66, 76, 84, 108], "func": [7, 9, 38, 65, 66], "decor": [7, 32, 34, 40, 107], "pipe": [7, 90], "through": [7, 98], "numpi": [7, 11, 12, 13, 14, 15, 89, 103, 108], "give": [7, 25, 52], "result": [7, 17, 21, 22, 23, 25, 26, 32, 34, 52, 59], "back": [7, 17, 23, 26], "A": [7, 17, 19, 23, 41, 53, 55, 56, 96, 99, 104, 106, 110, 112], "bit": [7, 101], "riguou": 7, "test": [7, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 92, 96], "show": [7, 53, 93, 98], "order": [7, 16, 25, 26, 51, 97, 107, 109, 111, 112, 113], "microsecond": 7, "verifi": 9, "correct": [9, 26, 101, 111], "against": [9, 112], "envsum_raw": 9, "sensesum_raw": 9, "featsum_raw": 9, "suspicious_devi": 9, "0": [9, 11, 13, 17, 18, 19, 23, 55, 56, 61, 66, 67, 72, 84, 87, 89, 90, 93, 96, 97, 101], "5": [9, 19, 43, 47, 48, 51, 72, 89, 93, 96], "r1": 9, "r2": 9, "repeat": 9, "3": [9, 72, 79, 93, 96, 103, 104, 108], "type": [9, 11, 13, 17, 20, 22, 23, 24, 25, 26, 32, 33, 34, 40, 42, 52, 59, 63, 65, 66, 72, 84, 105, 106, 110, 112], "30": 9, "use_larg": 9, "n_grad": 9, "1": [9, 11, 12, 13, 17, 18, 19, 21, 23, 47, 55, 56, 59, 61, 65, 72, 76, 78, 79, 81, 84, 87, 93, 94, 96, 98, 101, 103, 104, 106, 107, 108], "n_small": 9, "100": [9, 96], "n_larg": 9, "differentiable_input": 9, "funcnam": 9, "n_repetit": 9, "10": [9, 18, 19, 72, 93, 96, 99, 113], "data_s": 9, "atom_prob": 9, "7": [9, 84, 96, 103], "n_atom": [9, 43, 76], "n_featur": [9, 84, 96], "80": [9, 93], "n_molecul": [9, 49, 72, 74, 76, 79, 81, 107], "1000": [9, 93], "n_nu": 9, "20": [9, 72, 93, 96], "compare_against": 9, "properti": [9, 11, 13, 19, 21, 22, 25, 39, 41, 52, 55, 56, 79, 84, 86, 87], "name": [9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 57, 59, 62, 64, 66, 67, 68, 89, 96, 100, 104, 107, 108, 111], "printinfo": 9, "get": [9, 25, 26, 39, 40, 47, 48, 49, 55, 56, 65, 67, 80, 89, 96, 98, 101, 103, 106, 107], "semi": 9, "realist": 9, "data": [9, 11, 12, 13, 14, 15, 28, 59, 74, 84, 86, 89, 96, 97, 98, 104, 106, 108, 111, 113], "number": [9, 11, 13, 17, 18, 19, 22, 23, 40, 43, 47, 48, 49, 51, 59, 65, 71, 78, 81, 84, 96, 98, 105, 106, 107], "batch": [9, 14, 17, 18, 19, 23, 32, 81, 89, 96, 100, 105, 107, 111], "each": [9, 11, 15, 17, 22, 23, 26, 76, 79, 81, 84, 89, 96, 98, 106, 112], "probabl": [9, 17, 18, 84, 103], "an": [9, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 42, 43, 48, 49, 51, 52, 53, 55, 56, 81, 89, 90, 92, 96, 98, 100, 101, 103, 106, 107, 111, 113], "real": [9, 72], "pad": [9, 14, 25, 32, 33, 43, 48, 52, 72, 76, 107], "e": [9, 11, 16, 24, 25, 32, 49, 52, 55, 56, 65, 89, 97, 101, 103, 105, 108, 112], "ach": 9, "differ": [9, 50, 55, 56, 101, 102, 107, 109, 113], "from": [9, 11, 12, 13, 16, 17, 18, 23, 24, 25, 26, 32, 34, 39, 40, 43, 47, 48, 49, 50, 51, 52, 55, 56, 59, 66, 67, 72, 76, 79, 81, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 110, 111, 113], "occupi": [9, 65], "usual": [9, 90, 107, 111, 113], "first": [9, 20, 47, 82, 84, 96, 98], "shouldn": [9, 107], "t": [9, 16, 17, 18, 19, 23, 25, 26, 32, 33, 34, 40, 47, 55, 56, 84, 96, 98, 100, 103, 107, 112], "matter": [9, 101], "becaus": [9, 34, 98, 100, 105, 111, 113], "raw": 9, "randomli": 9, "spars": [9, 18, 48, 76, 98, 105], "averag": 9, "zero": [9, 55, 56, 89], "per": [9, 84, 90, 111], "Their": 9, "amplitud": 9, "random": [9, 11, 12, 13, 14, 15, 19, 96], "In": [9, 17, 18, 25, 52, 90, 101, 105, 107], "thei": [9, 25, 26, 32, 34, 40, 65, 84, 90, 105, 107, 108, 113], "2": [9, 18, 43, 47, 55, 56, 61, 65, 72, 79, 80, 84, 96, 104, 106], "sequenti": 9, "ones": [9, 19, 72], "have": [9, 17, 23, 25, 26, 32, 34, 47, 48, 49, 65, 89, 96, 98, 99, 100, 101, 106, 107, 108, 109, 112, 113], "concret": 9, "form": [9, 17, 23, 40, 48, 72, 96, 104, 106, 107, 109, 111], "distanc": [9, 48, 55, 56, 71, 79, 89, 92, 96, 98, 112, 113], "here": [9, 34, 95, 96, 97, 101, 107, 109, 110], "There": [9, 96, 112], "could": [9, 107, 111], "repres": [9, 69, 83], "wai": [9, 17, 23, 43, 94, 96, 104, 107, 113], "though": [9, 40], "don": [9, 18, 19, 55, 56, 98, 103, 112], "know": [9, 17, 18], "how": [9, 17, 19, 21, 23, 93, 95, 96, 98, 99, 101, 102, 106, 110], "fast": [9, 110], "would": [9, 17, 18, 21, 23, 84, 97, 99, 103, 107], "construct": [9, 11, 16, 17, 18, 21, 23, 25, 40, 45, 52, 93, 107, 110, 113], "represent": [9, 25, 27, 70, 72, 84], "symmetr": [9, 81], "necessit": 9, "over": [9, 17, 18, 21, 22, 23, 51, 81, 89, 96, 105, 107], "j": [9, 79, 105], "separ": [9, 111], "certain": [9, 105, 109], "recalcul": 9, "perform": [9, 16, 17, 20, 21, 23, 25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 89, 92, 93, 97, 101, 102, 103, 104, 107], "prefer": 9, "code": [9, 54, 96, 101, 103, 104, 106, 107], "which": [9, 19, 25, 26, 32, 34, 43, 52, 65, 68, 81, 82, 90, 92, 96, 97, 98, 101, 104, 105, 107, 108, 112, 113], "properli": 9, "case": [9, 16, 25, 52, 98, 101, 106, 107], "we": [9, 20, 25, 26, 93, 96, 98, 100, 102, 107, 109, 110, 111], "asymmetr": 9, "xaca": 9, "futur": [9, 20], "mai": [9, 17, 19, 20, 23, 25, 26, 32, 34, 52, 97, 101, 103, 104, 105, 107, 111, 113], "find": [9, 20, 32, 33, 43, 47, 48, 55, 56, 73, 76, 78, 96, 98, 102, 107], "nonsymmetr": 9, "never": 9, "consist": [9, 26, 55, 56, 76, 84, 96], "same": [9, 24, 32, 34, 55, 56, 90, 94, 108, 112, 113], "repeatedli": [9, 32, 34], "env_impl": 9, "sense_impl": 9, "feat_impl": 9, "kei": [10, 22, 89, 96, 100, 107], "other": [10, 11, 15, 17, 19, 22, 23, 54, 82, 84, 90, 92, 94, 96, 98, 101, 104, 107, 111, 112, 113], "organ": [11, 40, 90], "dataset": [11, 13, 15, 17, 18, 21, 23, 96, 98, 103, 108, 113], "predict": [11, 23, 25, 39, 45, 51, 52, 81, 89, 92, 96, 100, 107, 109, 111, 112, 113], "disk": [11, 108], "anyth": [11, 13, 97, 101, 112], "besid": [11, 19, 49, 72, 95], "load": [11, 12, 13, 14, 15, 16, 17, 23, 24, 96, 97, 101], "float": [11, 13, 17, 23, 89], "point": [11, 25, 26, 49, 105, 111], "format": [11, 12, 14, 15, 25, 31, 52, 66, 108], "specifi": [11, 17, 20, 22, 23, 24, 25, 26, 42, 87, 89, 90, 94, 96, 101, 106, 107, 111, 112, 113], "via": [11, 97], "get_default_dtyp": 11, "set_default_dtyp": [11, 96], "behavior": [11, 40, 105], "arr_dict": [11, 12, 13, 14, 15, 89], "seed": [11, 12, 13, 14, 15, 96], "test_siz": [11, 12, 13, 14, 15, 96], "valid_s": [11, 12, 13, 14, 15, 96], "num_work": [11, 12, 13, 14, 15, 18], "pin_memori": [11, 12, 13, 14, 15], "allow_unfound": [11, 12, 13, 14, 15, 18], "quiet": [11, 12, 13, 14, 15, 17, 19, 22, 23], "hold": [11, 13, 32, 34], "split": [11, 12, 13, 14, 15, 22, 89, 96], "gener": [11, 13, 21, 24, 25, 40, 48, 52, 78, 92, 98, 107, 109, 112], "dataload": [11, 12, 13, 14, 15, 18, 21, 98], "etc": [11, 13, 53], "dictionari": [11, 12, 13, 14, 15, 20, 21, 22, 24, 55, 56, 68, 89, 90, 96, 100, 101], "map": [11, 12, 13, 14, 15, 21, 24, 72, 89, 96, 101], "string": [11, 12, 13, 14, 15, 17, 20, 22, 23, 25, 26, 27, 43, 55, 56, 70, 89, 90, 97, 100, 101, 107, 111], "list": [11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 42, 43, 52, 53, 55, 56, 59, 76, 81, 82, 84, 96, 97, 101, 104, 106, 107], "db_name": [11, 12, 13, 14, 15, 17, 18, 26, 38, 39, 41, 44, 45, 67, 94, 96, 98, 100, 108, 111, 113], "int": [11, 12, 13, 14, 15, 17, 21, 23, 24, 79, 84, 89], "fraction": [11, 12, 13, 14, 15, 17, 19, 23, 96], "spli": [11, 12, 13, 14, 15], "oof": [11, 12, 13, 14, 15], "pass": [11, 12, 13, 14, 15, 17, 19, 23, 25, 27, 45, 47, 52, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 92, 96, 97, 99, 101, 105, 107], "skip": [11, 12, 13, 14, 15, 107], "need": [11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 32, 33, 40, 43, 45, 48, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 96, 98, 101, 103, 107, 113], "found": [11, 12, 13, 14, 15, 19, 25, 26, 32, 33, 35, 42, 89, 101, 107, 111, 112], "allow": [11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 25, 50, 72, 107], "print": [11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 25, 27, 70, 96, 109, 112], "littl": [11, 12, 13, 14, 15], "noth": [11, 12, 13, 14, 15, 25, 52], "while": [11, 12, 13, 14, 15, 25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "evaluation_mod": [11, 13], "split_indic": [11, 13], "split_typ": [11, 13], "subsampl": [11, 13], "make": [11, 13, 17, 21, 23, 25, 26, 27, 52, 53, 94, 96, 99, 100, 107, 111, 113], "given": [11, 13, 17, 19, 23, 24, 26, 32, 33, 40, 55, 56, 78, 92, 107, 108], "mode": [11, 13], "valid": [11, 13, 17, 18, 21, 22, 23, 26, 96, 101, 111], "select": [11, 13, 72], "eval": [11, 13, 22], "whether": [11, 13, 22, 23, 84, 94, 104, 106, 112], "shuffl": [11, 13], "contain": [11, 13, 17, 19, 23, 24, 25, 26, 96, 101, 106, 111, 112], "relev": [11, 13], "split_siz": [11, 13], "can": [11, 13, 17, 18, 19, 23, 25, 32, 34, 40, 55, 56, 87, 89, 92, 94, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113], "special": [11, 13, 104], "": [11, 13, 17, 18, 25, 26, 32, 33, 40, 49, 71, 72, 90, 92, 96, 99, 100, 104, 105, 107, 113], "item": [11, 13, 70], "sampl": [11, 13, 96], "send": [11, 13, 59, 96, 107], "directori": [11, 12, 14, 15, 17, 23, 24, 90, 95, 96, 101], "arg": [11, 12, 14, 15, 16, 19, 25, 38, 41, 43, 48, 52, 55, 56, 59, 67, 70, 72, 78, 79, 80, 90], "kwarg": [11, 12, 14, 15, 16, 19, 24, 25, 38, 40, 41, 43, 46, 47, 48, 49, 51, 52, 55, 56, 57, 59, 64, 66, 67, 70, 72, 78, 79, 87, 90, 100, 107], "store": [11, 15, 17, 18, 23, 55, 56, 96, 101, 112], "npy": [11, 15], "file": [11, 12, 14, 15, 16, 17, 20, 23, 24, 50, 90, 96, 101, 103, 112], "diectori": [11, 15], "path": [11, 15, 96], "where": [11, 15, 17, 18, 23, 25, 26, 52, 76, 89, 90, 96, 98, 106, 107], "prefix": [11, 15, 96, 112], "variabl": [11, 15, 19, 22, 51, 89, 98, 101, 105, 108, 112], "argument": [11, 15, 17, 23, 24, 32, 33, 34, 47, 49, 94, 98, 101, 107, 112], "see": [11, 15, 17, 19, 23, 24, 53, 95, 101, 112], "loader": [11, 15, 21], "doe": [11, 15, 25, 52, 90, 101, 107, 111, 112, 113], "support": [11, 15, 32, 34, 38, 40, 55, 56, 68, 92, 101, 108, 109, 111, 112], "must": [11, 15, 32, 34, 54, 84, 92, 97, 101, 104, 107, 112], "snap": 12, "depth": 12, "transpose_cel": 12, "config": [12, 112], "n_atoms_max": [12, 14, 72, 74, 76, 81, 108], "tensor_nam": 13, "tensordataset": 13, "tupl": [13, 17, 18, 20, 23, 24, 25, 32, 33, 34, 42, 53, 107], "index_pool": 13, "pretti": [13, 25, 27, 109], "read": 14, "ani": [14, 32, 34, 38, 39, 40, 41, 44, 45, 50, 59, 67, 94, 101, 103, 104, 107, 111], "h5": [14, 103], "you": [14, 16, 17, 18, 23, 25, 26, 27, 32, 33, 34, 52, 54, 70, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 113], "pyanitool": [14, 103], "py": [14, 96], "import": [14, 54, 92, 93, 96, 97, 98, 99, 101, 107, 111, 113], "species_kei": 14, "batch_list": 14, "determin": [14, 22, 89, 98, 100, 106], "what": [14, 17, 18, 22, 23, 84, 92, 96, 105, 106, 107, 111, 113], "npz": 15, "reload": [16, 24, 101], "isn": 16, "meant": 16, "cover": [16, 106], "possibl": [16, 25, 26, 96, 104, 106, 109, 110, 111, 112, 113], "conveni": 16, "checkpoint": [16, 17, 23, 24, 101, 109], "without": [16, 19, 100, 104, 108, 109], "manual": [16, 17, 23, 111], "re": [16, 18, 25, 27, 43, 48, 70, 96, 98, 102, 107, 108], "should": [16, 18, 25, 27, 32, 34, 45, 50, 52, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 89, 96, 100, 107, 108, 113], "preprocess": 16, "appli": [16, 32, 34, 40, 43, 47, 48, 49, 51, 96, 105, 107, 111], "automat": [16, 19, 24, 25, 32, 34, 43, 55, 56, 89, 90, 92, 101, 107, 109], "copi": [16, 17, 18, 25, 26, 52, 104], "your": [16, 17, 18, 23, 25, 26, 27, 55, 56, 70, 92, 98, 101, 102, 105, 107, 108, 110, 113], "complet": [16, 96, 107], "otherwis": [16, 46, 79, 104], "ll": [16, 96, 98, 100], "reproduc": [16, 104], "process": [16, 24, 26, 43, 93, 96, 97, 98, 101, 107, 111], "wa": [16, 101, 104], "cl": 16, "classmethod": [16, 22, 25, 45, 52], "option": [17, 18, 21, 23, 24, 25, 40, 43, 52, 55, 56, 89, 97, 101, 103], "callabl": [17, 23, 24, 25, 32, 34, 42, 71, 84, 100], "adam": [17, 23, 93, 96], "lr_schedul": [17, 23], "_lrschedul": [17, 23], "metric": [17, 19, 21, 22, 23, 24, 96, 101, 109, 111], "stop": [17, 18, 23, 93, 96], "lr": [17, 23, 93], "end": [17, 19, 23, 25, 96], "below": [17, 23], "fall": [17, 23], "cuda": [17, 18, 23, 59, 97, 101], "dataparallel": [17, 20, 23], "maximum": [17, 19, 23, 71, 79, 81, 89, 96], "epoch": [17, 19, 21, 22, 23, 96], "mandatori": [17, 23], "itself": [17, 23, 100, 104, 106, 107], "learn": [17, 19, 23, 96, 102], "rate": [17, 19, 23, 96], "phase": [17, 23], "param": [17, 18, 21, 23, 40, 68, 72, 81, 90], "after": [17, 18, 19, 22, 23, 25, 26, 97, 98, 101, 109], "built": [17, 23, 65, 66, 82, 98, 107], "multipl": [17, 23, 32, 33, 38, 107, 108, 113], "experiment": [17, 23], "current": [17, 19, 20, 23, 24, 54, 89, 90, 96, 98, 101, 107, 112], "under": [17, 23, 90, 104, 112], "debug": [17, 23], "alia": [17, 18, 23], "train_loss": [17, 18, 98, 99], "validation_loss": [17, 18, 96, 98, 99], "validation_nam": [17, 18], "plot_mak": [17, 18, 21, 23, 98, 99], "lossnod": [17, 18], "dict": [17, 18, 22, 23, 24, 89], "loss_nod": [17, 18], "overwritten": [17, 18], "training_modul": [17, 18, 23, 24, 61, 93, 96, 97, 98, 99, 101], "db_info": [17, 18, 21, 96, 98, 99, 101], "term": [17, 18, 65, 67, 96, 98, 113], "comput": [17, 18, 25, 26, 27, 34, 36, 45, 49, 51, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 89, 96, 101, 107, 111], "It": [17, 18, 40, 72, 96, 98, 101, 107, 111, 113], "info": [17, 18, 22, 112], "creat": [17, 18, 23, 24, 25, 32, 34, 38, 39, 41, 43, 44, 45, 52, 59, 90, 96, 97, 106, 110], "earli": [17, 18, 23, 96], "maker": [17, 18, 21, 86, 99], "alwai": [17, 18, 40, 90, 101, 107], "But": [17, 18, 111], "resid": [17, 18, 21], "help": [17, 18, 90, 106], "statist": [17, 18, 111], "larg": [17, 18, 21, 89, 98, 113], "To": [17, 18, 19, 25, 27, 70, 72, 92, 96, 97, 98, 100, 101, 111], "accomplish": [17, 18, 111], "associ": [17, 18, 25, 26, 48, 92, 96, 97], "thu": [17, 18, 99, 101, 113], "assembl": [17, 18, 93, 96, 98], "chang": [17, 18, 25, 26, 33, 34, 55, 56, 89, 101, 112], "affect": [17, 18], "likelihood": [17, 18], "aren": [17, 18], "plan": [17, 18], "someth": [17, 18, 96, 112], "too": [17, 18, 21, 96], "fanci": [17, 18], "like": [17, 18, 23, 32, 33, 66, 76, 96, 98, 99, 100, 101, 103, 109, 113], "dure": [17, 18, 19, 23, 40, 98, 101, 109, 111, 112], "new": [17, 18, 23, 25, 26, 32, 34, 40, 52, 90, 98, 106, 107, 113], "setup_param": [17, 23, 96, 101], "shortcut": [17, 23], "follow": [17, 19, 23, 43, 47, 48, 49, 51, 54, 93, 101, 104, 107, 108, 111, 112], "loop": [17, 23], "captur": [17, 23], "keyboardinterrupt": [17, 23], "except": [17, 23, 26, 40, 42, 108], "abort": [17, 23], "gracefulli": [17, 23], "kill": [17, 23], "programmat": [17, 23], "run": [17, 18, 19, 21, 23, 25, 26, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 89, 96, 97, 98, 106, 107], "recommend": [17, 23, 25, 26, 40, 98, 103, 105, 111], "switch": [17, 23, 90, 105], "fresh": [17, 23], "descript": [17, 23, 72], "prepar": [17, 23, 104], "experiment_param": [17, 23, 93, 96, 101], "assemble_training_modul": [17, 23], "roughli": [17, 19, 23, 113], "instanti": [17, 23], "link": [17, 19, 23, 25, 26, 27, 53, 106, 109], "learnabl": [17, 23], "build": [17, 18, 19, 23, 25, 40, 43, 48, 52, 71, 89, 92, 96, 97, 107, 109], "setup": [17, 23, 96], "when": [17, 21, 22, 23, 72, 86, 93, 96, 98, 106, 107, 109, 112, 113], "accord": [17, 23], "model_evalu": [17, 23], "attach": [17, 23, 99], "go": [17, 18, 23, 25, 26, 72, 96, 106, 107, 108, 112, 113], "sub": [17, 23, 38], "folder": [17, 23], "place": [17, 20, 23, 25, 26, 52, 106], "measur": [17, 23, 101], "tracker": [17, 23], "blank": [17, 23, 72, 96], "one": [17, 20, 23, 25, 26, 27, 32, 33, 34, 42, 43, 45, 47, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 89, 90, 92, 98, 105, 106, 107, 108, 111, 113], "batch_callback": [17, 23, 101], "store_all_bett": [17, 23, 61], "store_best": [17, 23, 61], "store_structure_fil": [17, 23], "store_metr": [17, 23], "keyboard": [17, 23], "interrupt": [17, 23, 104], "done": [17, 23, 25, 52], "reinstat": [17, 23], "time": [17, 22, 23, 96, 98, 105], "everi": [17, 23, 25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "state": [17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 40, 43, 47, 48, 49, 52, 59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 101, 107], "better": [17, 20, 22, 23, 96, 105], "previou": [17, 23, 101], "structur": [17, 23, 24, 25, 26, 27, 96, 106, 109], "disabl": [17, 23, 112], "still": [17, 23, 101, 107, 113], "iter": [17, 23, 25, 26, 42, 53, 72, 90, 98], "call": [17, 23, 25, 27, 45, 59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 97, 100, 107, 113], "cb": [17, 23], "new_best": [17, 23], "batch_input": [17, 23], "batch_model_output": [17, 23], "batch_target": [17, 23], "want": [17, 23, 25, 32, 33, 34, 52, 90, 96, 100, 101, 103, 107, 109, 113], "so": [17, 19, 22, 23, 32, 33, 34, 40, 96, 100, 101, 102, 104, 107, 111, 112, 113], "easi": [17, 23, 100, 107], "manag": [17, 19, 23, 40, 90], "wish": [17, 23, 103, 111], "possibli": [17, 23], "field": [18, 22], "training_loss": 18, "network_output": 18, "database_input": 18, "nodes_required_for_loss": 18, "db": [18, 25, 52, 89], "make_dens": 18, "n_imag": [18, 76, 78, 98], "involv": [18, 25, 26, 101, 113], "precomput": [18, 48], "suppli": [18, 84], "size": [18, 19, 84, 89, 96, 105, 107, 111], "pre": [18, 101, 111], "dens": 18, "warn": [18, 112], "expens": [18, 111], "howev": [18, 98, 104, 105, 107, 111, 113], "necessari": [18, 20, 40], "cach": [18, 32, 34], "imag": [18, 78, 98], "storag": [18, 34], "increas": [18, 19], "fail": [18, 43, 100], "valu": [18, 21, 22, 25, 26, 32, 33, 34, 35, 38, 56, 70, 72, 74, 76, 84, 89, 96, 100, 101, 107, 109, 111, 112, 113], "incur": 18, "cost": [18, 98, 100], "effect": [18, 25, 26, 113], "exampl": [18, 22, 84, 89, 92, 94, 96, 97, 98, 101, 102, 106, 107, 109, 111, 113], "usag": [18, 40, 54, 66, 89, 103], "dynam": [19, 25, 92, 93, 105, 112], "sequenc": 19, "scheduler_list": 19, "empti": [19, 25, 26], "suppress": 19, "amount": [19, 105], "defin": [19, 25, 27, 40, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 93, 96, 107, 108, 109], "method": [19, 25, 27, 52, 65, 66, 70, 79, 96, 98, 107, 111], "instanc": [19, 22, 25, 27, 45, 52, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 107], "modifi": [19, 25, 26, 32, 34, 93, 107, 113], "aspect": [19, 107], "convent": 19, "better_model": 19, "termination_pati": [19, 93], "subclass": [19, 25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 106], "termin": [19, 90], "improv": 19, "patienc": [19, 24, 93], "mani": [19, 25, 52, 96, 98], "befor": [19, 89, 97, 101, 103, 107, 109], "last_best": 19, "eoch": 19, "last": [19, 84, 96], "encount": 19, "max_batch_s": [19, 93], "factor": [19, 55, 56], "threshold": [19, 71], "0001": 19, "threshold_mod": 19, "rel": [19, 43, 113], "verbos": [19, 111, 112], "scheme": 19, "outlin": 19, "paper": [19, 84], "decai": [19, 23], "samuel": 19, "l": [19, 47, 84], "smith": 19, "et": 19, "al": [19, 97], "2018": 19, "arxiv": 19, "1711": 19, "00489": 19, "publish": 19, "confer": 19, "iclr": 19, "until": 19, "been": [19, 32, 33, 34, 89, 93, 107], "reach": 19, "govern": [19, 93, 104], "box": [19, 98], "thing": [19, 72, 89, 96, 107], "meta": 19, "privat": 19, "host": 20, "both": [20, 24, 25, 27, 51, 55, 56, 59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 84, 105], "primari": [20, 113], "evaluation_loss": 21, "evaluation_loss_nam": 21, "plot_everi": [21, 86, 99], "often": [21, 48, 100, 113], "eval_typ": [21, 86], "whatev": [21, 65, 92], "expect": [21, 33, 89], "slow": [21, 98], "u": [21, 72, 104], "whose": [21, 25, 26, 97, 106, 113], "much": [21, 101, 105, 113], "describ": [21, 32, 96], "loss_dict": 21, "keep": [22, 25], "track": [22, 25, 32, 96, 110], "metric_nam": [22, 88], "split_nam": 22, "best_metric_valu": 22, "observ": 22, "lower": 22, "assum": [22, 55, 56, 72, 93, 99, 100, 107], "best_model": 22, "epoch_metric_valu": 22, "other_metric_valu": 22, "final": [22, 40, 101, 107, 113], "epoch_tim": 22, "regist": [22, 25, 27, 32, 34, 40, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "evaluation_dict": 22, "better_dict": 22, "metric_info": 22, "integ": 22, "nc": 22, "tabl": [22, 32, 34, 112], "column": [22, 112], "charact": 22, "up": [23, 25, 47, 52, 93, 97, 104, 106], "high": [23, 102], "level": [23, 25, 26, 32, 51, 81, 107, 110], "inform": [23, 24, 25, 27, 32, 33, 39, 43, 44, 48, 50, 70, 92, 96, 98, 101, 102, 107, 109, 112], "won": [23, 32, 34], "prevent": [23, 25, 26], "progress": [23, 25, 52, 103, 112], "bar": [23, 25, 52, 103, 112], "rough": 23, "backward": [23, 105], "map_loc": [24, 97, 101], "across": 24, "handl": [24, 98, 101], "rais": [24, 25, 26, 32, 33, 42, 90], "typeerror": [24, 101], "fname": 24, "experiment_structur": [24, 63, 101], "pt": [24, 63, 97, 101], "full": [24, 55, 56, 103, 107], "just": [24, 25, 26, 32, 33, 65, 95, 100, 113], "filenam": [24, 90, 101], "structure_fnam": 24, "state_fnam": 24, "restore_db": [24, 97], "For": [24, 48, 55, 58, 60, 84, 95, 98, 100, 101, 103, 105, 106, 107, 108, 111, 112, 113], "detail": [24, 109], "more": [24, 25, 26, 32, 33, 40, 42, 48, 93, 96, 98, 101, 102, 105, 106, 107, 109, 111, 112], "restor": [24, 101], "attempt": [24, 25, 32, 33, 38, 39, 41, 44, 45, 55, 56, 101, 107], "hipppynn": 25, "definit": [25, 36, 40, 42, 107], "reprogram": 25, "flow": 25, "basi": 25, "convers": [25, 29, 30, 32, 33, 34, 107, 109], "furthermor": 25, "parent": [25, 26, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 57, 59, 64, 66, 67, 68, 87, 106, 110], "expans": [25, 40, 43, 47, 48, 49, 51, 110], "flexibl": [25, 98, 107, 110], "signatur": [25, 32, 34, 43, 47, 48, 49, 51, 66, 67], "creation": [25, 43, 47, 48, 49, 51, 66, 67, 106], "hide": 25, "book": 25, "user": [25, 32, 33, 52, 101, 102, 107, 112], "required_input": [25, 27], "nodes_to_comput": [25, 27], "neural": [25, 27, 47, 96], "outout": [25, 27], "own": [25, 27, 70, 107], "singl": [25, 27, 32, 33, 40, 70, 96, 107, 111], "line": [25, 27, 70], "accept": [25, 27, 55, 56, 70, 112], "input_valu": [25, 27], "overridden": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "although": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 112], "recip": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "within": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 98, 106], "afterward": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 97], "instead": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "sinc": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "former": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "care": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "hook": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "latter": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "silent": [25, 27, 45, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "ignor": [25, 26, 27, 45, 55, 56, 59, 63, 64, 65, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84], "compris": [25, 27], "enum": [25, 32, 35], "enumer": [25, 32, 35], "NOT": [25, 32, 35, 104], "return_devic": [25, 52], "requires_grad": [25, 36, 37, 39, 52, 89], "dress": [25, 52, 106], "access": [25, 52, 96, 100, 101, 111], "individu": [25, 52, 53, 96], "simpli": [25, 52, 107], "detach": [25, 52, 111], "lead": [25, 52, 113], "leak": [25, 52], "carefulli": [25, 52], "self": [25, 52, 107], "__call__": [25, 52], "g": [25, 52, 79, 97, 101, 103, 108, 112], "additional_output": [25, 52], "exist": [25, 43, 52, 90, 96, 107], "shallow": [25, 52, 105], "move": [25, 52, 98, 101], "addit": [25, 32, 34, 38, 52, 55, 56, 90, 107], "includ": [25, 26, 34, 52, 84, 96, 97, 98, 101, 104, 109], "node_valu": [25, 52], "out_dict": [25, 52], "all_nod": [25, 26], "outputs_list": [25, 26], "inputs_list": [25, 26], "next": [25, 26, 96], "fed": [25, 26, 76], "correspond": [25, 26, 49, 59, 72, 96, 105, 107, 108, 111], "entri": [25, 26, 96, 109], "assume_input": [25, 26], "subgraph": [25, 26], "doesn": [25, 26, 32, 33, 40, 107, 112], "implicitli": [25, 26, 51], "partial": [25, 26], "disconnect": [25, 26], "As": [25, 26, 98, 106, 113], "finish": [25, 26], "left": [25, 26, 38], "dangl": [25, 26], "preprend": [25, 26], "new_requir": [25, 26], "new_subgraph": [25, 26], "node_or_nod": [25, 42], "constraint_kei": [25, 42], "why_desc": [25, 42, 107], "purpos": [25, 40, 42, 43, 47, 48, 49, 51, 72, 104, 107], "start": [25, 26, 42, 43, 96], "search": [25, 26, 42, 43, 89, 98, 102], "filter": [25, 42, 43], "spec": [25, 42, 48], "isinst": [25, 42], "cannot": [25, 42, 98], "satisfi": [25, 42], "constraint": [25, 42, 90, 101, 110], "error": [25, 26, 32, 33, 42, 43, 96, 100, 101, 107, 113], "messag": [25, 42, 100], "relat": [25, 26, 42], "obei": [25, 42], "look": [25, 26, 32, 33, 42, 96, 99, 107, 111], "uniqu": [25, 26, 42, 107], "child": [25, 26, 40, 42, 107], "connect": [25, 26, 40, 42, 53, 106, 107], "specif": [25, 42, 96, 104, 106, 107], "nodenotfounderror": [25, 42], "rasi": [25, 42], "node_set": [25, 26, 42, 53], "recurs": [25, 42], "collect": [25, 32, 34, 42, 86], "relationship": [25, 34, 42], "old_nod": [25, 26], "new_nod": [25, 26], "disconnect_old": [25, 26], "replac": [25, 26, 98, 107], "insert": [25, 26], "remov": [25, 26, 32, 34], "old": [25, 26, 32, 34], "children": [25, 26, 48, 96, 106], "swap": [25, 26], "out": [25, 26, 103, 104], "cycl": [25, 26], "refer": [25, 26, 32, 34, 109], "becom": [25, 26], "unus": [25, 26], "corrupt": [25, 26], "try": [25, 26], "coerc": [25, 26, 32, 33, 40], "incompat": [25, 26], "correctli": [25, 26], "pred": [25, 36, 37, 39, 96, 111], "main_output": [25, 32, 33, 36, 37, 39, 40, 41, 47, 48, 49], "expand_par": [25, 36, 37, 40, 107], "add_class_doc": [25, 36, 37, 40], "fn": [25, 36, 37, 40, 70], "assert": [25, 36, 37, 40, 43, 47, 48, 49, 51, 107], "assertlen": [25, 36, 37, 40, 107], "get_main_output": [25, 36, 37, 40, 107], "match": [25, 26, 32, 33, 36, 37, 40, 43, 47, 48, 49, 51, 107], "matched_idx_coercion": [25, 36, 37, 40], "matchlen": [25, 36, 37, 40, 107], "require_idx_st": [25, 36, 37, 40, 107], "set_dbnam": [25, 36, 37, 41], "evaluation_outputs_list": 26, "evaluation_inputs_list": 26, "sure": 26, "analyz": [26, 74], "name_or_dbnam": 26, "higher": 26, "preced": 26, "dbname": 26, "criterion": 26, "notnotfounderror": 26, "core": [27, 37, 105], "pack": [31, 72], "unpack": [31, 72], "axi": [32, 55, 56, 90], "ax": [32, 105], "system": [32, 34, 51, 55, 56, 66, 75, 81, 89, 92, 96, 98, 101, 102, 106, 107, 108, 113], "global": [32, 34, 112], "garbag": [32, 34], "clear": [32, 34], "free": [32, 34, 55, 56], "comparison": [32, 33, 34], "fly": [32, 34], "rule": [32, 34], "nodes_to_reduc": [32, 33], "mutual": [32, 33], "put": [32, 33, 96, 107, 113], "compar": [32, 33, 55, 56, 96, 98, 99, 109, 112], "reduc": [32, 33, 34, 100], "unlik": [32, 33], "direct": [32, 33, 98, 104, 107], "output_index_st": [32, 33], "op": [32, 33], "alreadi": [32, 33, 106, 107], "appropri": [32, 33, 107], "valueerror": [32, 33], "request": [32, 33], "input_idxst": [32, 34], "output_idxst": [32, 34], "anoth": [32, 34, 106, 111, 113], "child_node_typ": [32, 34], "That": [32, 34], "factori": [32, 34], "act": [32, 34, 104], "constructor": [32, 34, 65, 67, 71, 82], "invok": [32, 34, 107], "yield": [32, 34, 90], "No": [32, 34], "two": [32, 33, 34, 96, 106, 107, 111, 113], "simultan": [32, 34], "idxt": 33, "input_i": 33, "output_i": 33, "acquir": 33, "logic": [34, 109], "redund": 34, "also": [34, 92, 96, 97, 98, 103, 107], "live": 34, "themselv": [34, 113], "packag": [34, 91], "minim": [34, 61, 95, 109], "depend": [34, 50, 96, 101, 105], "machineri": 38, "nativ": [38, 109], "subtract": 38, "right": [38, 104], "_basenod": [38, 43, 47, 48, 49, 51, 89], "_predefinedop": 38, "_combnod": [38, 39], "truediv": 38, "in_nod": 38, "invert": 38, "mul": 38, "neg": 38, "pow": 38, "obj": [38, 65, 90], "sublcass": 39, "origin_nod": 39, "intend": 40, "strictli": 40, "aid": 40, "complex": [40, 98, 107, 111], "simpl": [40, 52, 70, 96, 99, 100, 107, 108, 110], "fashion": 40, "length": [40, 90, 101], "idxstat": 40, "node_self": 40, "cast": [40, 47, 48, 49], "onc": 40, "stage": 40, "expand": [40, 48, 107], "ensur": [40, 79, 107, 111], "satisfactori": 40, "needed_index_st": 40, "coercion": 40, "present": 40, "context": [40, 90], "temporarili": [40, 90], "treat": [40, 96, 112], "even": [40, 104], "fulli": [40, 95, 98, 107], "sever": [41, 96, 98, 106, 107, 112], "index_st": 41, "procedur": [43, 47, 48, 49, 51, 96], "mol_index": [43, 49, 72, 74, 76, 79, 81, 107], "atom_index": [43, 72, 74, 76, 81], "n_mol": 43, "pad_idx": [43, 48], "hot": [43, 47, 72, 84], "vector": 43, "search_nod": 43, "padder": 43, "cell": [44, 48, 57, 72, 75, 76, 78, 79, 89, 98], "_basecompareloss": 45, "l1_loss": 45, "mse_loss": 45, "p": [45, 80, 105], "categor": 46, "other_par": 47, "padding_index": 47, "pidxer": [47, 49, 107], "indexed_featur": 47, "pair_find": [47, 48], "module_kwarg": [47, 48, 51, 68, 96, 98, 107, 113], "4": [47, 49, 72, 98, 107, 113], "manipul": [48, 73], "dist_hard_max": [48, 57, 75, 81, 84, 89, 96, 98], "_dispatchneighbor": [48, 57, 75], "arbitrari": [48, 108], "boundari": [48, 68, 89, 95], "condit": [48, 68, 78, 89, 95, 104], "slower": 48, "speed": [48, 109], "concern": [48, 93], "consid": 48, "8": [48, 72, 84, 96], "hard_dist_cutoff": [48, 76, 77, 78], "neigh_list": 48, "po": 48, "pair_index": 48, "atomidx": 48, "pair_featur": 48, "pair_idx": [48, 49], "sp": 48, "r": [48, 49, 89, 96, 100, 113], "c": [48, 103], "bin": [48, 74, 87], "one_hot": [48, 74], "pdxer": [49, 107], "pos_or_pair": 49, "cutoff_dist": 49, "energy_convers": 49, "normal": [49, 79], "coulomb": [49, 79], "constant": 49, "k": 49, "equat": 49, "kqq": 49, "sign": [49, 79, 94], "quantiti": [49, 66, 96, 109, 112], "traceless": 49, "screen": [49, 79], "inherit": 50, "kind": [50, 89], "actual": [50, 72, 105, 111], "notimpl": 50, "bond": [51, 72, 108, 109], "local": [51, 79, 81, 96, 107, 113], "net": [51, 107], "first_is_interact": [51, 81, 107], "compon": [51, 81, 101, 102, 107, 110, 113], "contribut": [51, 107, 113], "pdindex": [51, 107], "visual": 53, "graphviz": [53, 103], "node_iter": 53, "compactifi": 53, "dot": 53, "group": 53, "digraph": 53, "preserv": 53, "precis": 53, "ase": [54, 55, 56, 92, 103, 109], "simul": [54, 55, 56, 92, 97, 98], "pyseqm": [54, 60, 103, 109], "combin": [54, 96, 107], "ml": [54, 59, 97], "seqm": [54, 61], "schnetpack": [54, 68], "schnet": [54, 68], "environ": [55, 101, 105, 112], "ASE": [55, 56, 76, 95, 98, 103, 109], "skin": [55, 56], "extra_properti": [55, 56], "en_unit": [55, 56, 92], "dist_unit": [55, 56, 92], "neighbor": [55, 56, 76, 89, 98, 105], "Not": [55, 56, 101, 112], "suitabl": [55, 56, 107], "domain": [55, 56, 111], "decomposit": [55, 56], "identifi": [55, 56, 89], "unit": [55, 56, 92, 98, 110], "kcal": [55, 56, 92], "mol": [55, 56, 72, 92], "angstrom": [55, 56, 92], "system_chang": [55, 56], "tol": [55, 56], "1e": [55, 56, 93, 113], "15": [55, 56], "proce": [55, 56, 92], "short": [55, 56], "circuit": [55, 56], "compare_atom": [55, 56], "toler": [55, 56], "slight": [55, 56], "allow_calcul": [55, 56], "forc": [55, 56, 66, 90, 92, 95, 109], "total": [55, 56, 66, 81, 84, 113], "extrapol": [55, 56], "kelvin": [55, 56], "stress": [55, 56, 92], "intens": [55, 56], "similarli": [55, 56, 72], "fn_name": 56, "cutoff": [57, 71, 75, 79, 84, 89, 96, 98, 113], "lammp": [58, 59, 95, 103], "mliap": [59, 97], "unifi": [59, 97], "initi": [59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 89, 113], "intern": [59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 84], "share": [59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81], "scriptmodul": [59, 63, 64, 65, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81], "all_atom_energi": 59, "nlocal": 59, "mliapunifi": 59, "iap": [59, 97], "energy_nod": [59, 92, 97], "element_typ": 59, "ndescriptor": 59, "symbol": [59, 97], "element": [59, 96, 105], "descriptor": 59, "report": [59, 93, 111], "mliapdata": 59, "queue_tim": 61, "decay_factor": [61, 66, 67, 89], "96": 61, "001": [61, 96], "98": 61, "72114e": 61, "05": 61, "x": 62, "model_fil": 63, "state_fil": 63, "best_checkpoint": [63, 101], "par_atom_node_nam": 63, "seqm_atom_param": 63, "seqm_node_nam": 63, "seqm_paramet": [64, 65, 66, 67], "coordin": [64, 65, 67, 72, 76, 77, 78, 79, 98], "fdir": 64, "par_atom": [65, 67], "mol_mask": 65, "atom_mask": 65, "orbital_mask": 65, "notconverg": [65, 67], "target_method": [65, 66], "noccvirt": [65, 66], "choos": [65, 89], "orbit": [65, 66], "mndo": 65, "els": 65, "nocc": 65, "nvirt": 65, "highest": 65, "orbtial": 65, "homo": 65, "lowest": 65, "virtual": 65, "lumo": 65, "suffici": [65, 111], "norb": 65, "sqrt": [65, 66], "wb97x": 65, "par_bond": 65, "01": [66, 67, 72, 89], "heat": 66, "densit": 66, "single_particle_density_matrix": 67, "hamiltonian": 67, "const": 67, "molsiz": 67, "nheavi": 67, "nhydro": 67, "noccmo": 67, "z": [67, 72, 89, 96, 100, 113], "maskd": 67, "mask": 67, "atom_molid": 67, "pair_molid": 67, "idxi": 67, "idxj": 67, "ni": 67, "nj": 67, "xij": 67, "rij": 67, "p0": 67, "now": [68, 96], "z_arr": 68, "r_arr": 68, "nonblank": [68, 72, 77, 78], "underli": [68, 96, 107], "compos": 69, "piec": [69, 96], "repr_info": 70, "bundled_input": 70, "hard_max_dist": 71, "dist_tensor": 71, "n_dist": [71, 81], "min_dist_soft": 71, "max_dist_soft": 71, "cutoff_typ": 71, "distflat": 71, "warn_low_dist": [71, 112], "nf_in": [71, 82], "nf_out": [71, 82], "mind_soft": 71, "maxd_soft": 71, "hard_cutoff": 71, "sensitivity_modul": [71, 87], "minimum": [71, 89, 103], "in_featur": 71, "dist_pair": 71, "enforc": [71, 72, 81], "coord_pair": 71, "min_soft_dist": 71, "n_dist_bar": 71, "base_sens": 71, "decod": 72, "molatom_th": 72, "real_atom": [72, 76, 77, 78], "summer": 72, "flatatom": 72, "typic": [72, 111, 113], "elem": 72, "denot": 72, "rectangular": 72, "real_index": 72, "_values_": 72, "flatten": [72, 79], "And": [72, 92], "inv_real_index": 72, "amd": 72, "invers": [72, 84], "triangular": 72, "symmmetr": 72, "xx": 72, "yy": 72, "zz": 72, "xy": 72, "xz": 72, "yz": 72, "yx": 72, "zx": 72, "zy": 72, "00": 72, "02": 72, "11": 72, "12": [72, 96], "21": 72, "22": 72, "packed_quadrupol": 72, "rmag_list": 74, "j_list": 74, "inv_real_atom": [74, 76, 77, 78], "pair_dist": [74, 79, 81, 84], "rij_list": 74, "finder": [75, 89], "coord": 75, "inv_cel": 75, "_pairindex": [76, 77, 78], "shift": 76, "pairfeatur": 76, "pair_coord": [76, 84], "atom_arrai": 76, "cell_offset": 76, "offset_index": 76, "molecule_index": 76, "molatomatom_th": 76, "jlist": 76, "n_neigh_max": 76, "alpha": 79, "energy_conversion_factor": 79, "radiu": [79, 89, 98], "molecular_energi": 79, "damp": 79, "complement": 79, "glue": [79, 96], "r_cutoff": 79, "co": 79, "pi": 79, "dist": 79, "smooth": 79, "crossov": 79, "long": [79, 111], "rang": 79, "neighborlist": 79, "upto": 79, "weight": [79, 89, 113], "9": [79, 103], "sum_a": 79, "q_a": 79, "r_a": 79, "delta_ij": 79, "strain": 79, "vector_featur": 79, "l2": 80, "feature_s": [81, 107], "dist_soft_min": [81, 84, 96], "dist_soft_max": [81, 84, 96], "antisymmetr": 81, "sensitivity_typ": [81, 84], "n_target": 81, "all_pair": 81, "all_featur": 81, "hierarchc": 81, "molecular": [81, 92], "contributed_energi": 81, "atom_energi": [81, 107], "atom_preenergi": 81, "prob": 81, "propens": 81, "base_lay": 82, "nf_middl": 82, "softplu": [82, 84], "wrapper": [82, 112], "reslay": 82, "dimens": 82, "nonlinear": 82, "taken": 82, "residu": 82, "composit": 83, "larger": [83, 98, 111], "n_sensit": [84, 96], "n_atom_lay": [84, 96], "n_interaction_lay": [84, 96], "possible_speci": [84, 96, 97, 98], "n_input_featur": 84, "width": [84, 96], "midpoint": 84, "block": [84, 96], "hcno": 84, "6": [84, 96], "origin": [84, 101], "z_data": 84, "en_data": 84, "n_features_encod": 84, "save_dir": [86, 88], "respons": 86, "execut": [86, 106, 107, 110, 112], "model_output": 86, "sub_loc": 86, "prediction_all_v": 86, "target_all_v": 86, "subplott": 87, "data_arg": 87, "x_var": 87, "y_var": 87, "x_val": 87, "y_val": 87, "xlabel": 87, "200": [87, 93], "ylabel": 87, "_compareabletruepr": 87, "add_identity_lin": 87, "int_lay": 87, "r_min": 87, "r_max": 87, "n_r": 87, "500": 87, "shown": [87, 99], "extern": 87, "torch_tensor": 87, "metric_list": 88, "best_metric_list": 88, "over_tim": 88, "metric_data": 88, "pltkwd_info": 88, "diagnost": 89, "array_dict": 89, "species_nam": 89, "positions_nam": 89, "cell_nam": 89, "pair_finder_class": 89, "50": 89, "unsplit": 89, "min_dist": 89, "min_dists_train": 89, "enough": 89, "least": 89, "its": [89, 101, 104], "largest": 89, "elsewis": 89, "energy_modul": 89, "trainable_aft": [89, 96], "energy_nam": 89, "interfacedb": 89, "attribut": [89, 96, 107, 111], "e0": 89, "further": 89, "df": 89, "n": 89, "network_modul": 89, "part": [90, 107, 113], "librari": [90, 97, 102, 105, 107, 109, 110], "se": 90, "dirnam": [90, 96], "succe": 90, "word": 90, "okai": 90, "either": [90, 98], "altern": [90, 109], "enter": 90, "statu": 90, "array_dictionari": 90, "assumpt": 90, "stdout": 90, "stderr": 90, "redirect": 90, "stream": 90, "calc": 92, "ev": 92, "These": [92, 96, 97, 107, 109, 112], "consum": 92, "produc": [92, 98, 104, 106], "unspecifi": [92, 107], "assign": [92, 108, 112], "desir": [92, 106, 111, 113], "differenti": 92, "capabl": [92, 107, 108], "snippet": [93, 95], "512": 93, "early_stopping_kei": 93, "role": [93, 113], "outsid": 93, "updat": 93, "sys_energi": 94, "grad": 94, "mse": [94, 96], "mae": [94, 96], "might": 94, "about": [95, 107, 109, 111, 112], "variou": [95, 113], "workflow": 95, "fledg": 95, "repositori": [95, 102, 103], "let": [96, 99, 100, 107], "ourselv": 96, "our": 96, "netnam": 96, "my_first_hippynn_model": 96, "o": [96, 105], "mkdir": 96, "chdir": 96, "hyperparamet": [96, 97, 113], "peak": 96, "hard": [96, 113], "network_param": [96, 98, 113], "16": 96, "85": 96, "By": [96, 98, 101], "hipnn_model": [96, 113], "regress": [96, 107], "whole": 96, "again": 96, "hierarch": [96, 107], "simplest": 96, "rmse_energi": 96, "mae_energi": [96, 111], "unsupervis": 96, "rbar": 96, "syntax": [96, 107, 109], "loss_error": 96, "rmse": [96, 111], "hier": 96, "few": 96, "problem": [96, 109], "tell": 96, "three": [96, 105, 112], "somewher": 96, "locat": [96, 102, 112], "2001": 96, "splite": 96, "db_namesnam": 96, "fit": [96, 104], "almost": [96, 98], "togeth": 96, "good": [96, 101, 104], "begin": [96, 111], "everyth": [96, 101], "apply_to_db": 96, "test_output": 96, "test_hier_predict": 96, "test_energy_predict": 96, "molecule_energi": [96, 99, 100, 111], "barebon": 96, "test_barebones_script": 96, "deliber": 96, "small": [96, 105, 113], "easili": [96, 101], "laptop": 96, "similar": [96, 113], "qm7": 96, "neuron": 96, "bohr": 96, "mse_energi": 96, "understand": 96, "stuff": 96, "drop": 96, "irrelev": 96, "log": 96, "training_log": 96, "txt": [96, 103], "wt": 96, "qm7_process": 96, "examin": [96, 113], "tend": 96, "stabil": 96, "lot": 96, "abstract": [97, 109], "interatom": 97, "potenti": 97, "agre": 97, "bundl": 97, "mliap_unified_hippynn_al_multilay": 97, "pickl": [97, 108], "script": [97, 109, 112], "pair_styl": 97, "mliap_unified_hippynn_": 97, "pair_coeff": 97, "mliappi": 97, "activate_mliappi": 97, "lmp": 97, "commands_str": 97, "before_load": 97, "mliap_unified_lj": 97, "mliapunifiedlj": 97, "load_unifi": 97, "after_load": 97, "command": 97, "triclin": 98, "surround": 98, "nearest": 98, "27": 98, "replic": 98, "numer": [98, 113], "notic": [98, 104], "costli": 98, "skew": 98, "well": [98, 101, 107, 108], "fewer": 98, "highli": [98, 107], "enc": [98, 107], "padidx": 98, "algorithm": 98, "upshot": 98, "independ": [98, 109], "rather": [98, 111], "benefit": 98, "mitig": 98, "abov": [98, 104, 107, 108], "Then": [98, 111], "caveat": 98, "n_worker": 98, "due": [98, 101], "limit": [98, 104], "mix": [98, 107], "pbc": 98, "quit": 98, "close": 98, "deal": [98, 111], "emb": 98, "veri": [98, 110, 113], "compil": [100, 106], "list_of_input_nod": 100, "list_of_output_nod": 100, "sai": [100, 113], "z_arrai": 100, "r_arrai": 100, "keyword": [100, 101, 107], "128": 100, "mol_en": 100, "t_predicted_arrai": 100, "equival": [100, 111], "job": 101, "hpc": 101, "seen": 101, "break": 101, "down": [101, 107], "later": [101, 112], "previous": 101, "longer": 101, "configur": 101, "standard": [101, 112], "map_devic": 101, "tricki": [101, 109], "belong": 101, "transfer": 101, "avoid": 101, "cuda_visible_devic": 101, "label": 101, "rng": 101, "reset": 101, "record": [101, 109], "retriev": 101, "idea": 101, "wholesal": 101, "bytetensor": 101, "doc": 101, "destin": 101, "mention": 101, "hope": 102, "enjoi": 102, "stai": 102, "machin": 102, "atomist": [102, 110], "aim": [102, 108], "modular": [102, 110], "design": [102, 113], "extend": [102, 107], "ad": [102, 109, 110], "page": [102, 109], "develop": 102, "home": 102, "github": [102, 103], "instal": [102, 105, 112], "guid": 102, "licens": 102, "acceler": 103, "matplotlib": [103, 109, 112], "tqdm": [103, 112], "view": [103, 111], "figur": [103, 109, 112], "h5py": 103, "clone": 103, "navig": 103, "git": 103, "com": 103, "lanl": [103, 104], "cd": 103, "comment": [103, 113], "conda_requir": 103, "channel": 103, "forg": 103, "feel": 103, "tinker": 103, "edit": 103, "optional_depend": 103, "copyright": 104, "2019": 104, "triad": 104, "nation": 104, "secur": 104, "llc": 104, "reserv": 104, "program": 104, "contract": 104, "89233218cna000001": 104, "lo": 104, "alamo": 104, "laboratori": 104, "depart": 104, "nuclear": 104, "administr": 104, "grant": 104, "behalf": 104, "nonexclus": 104, "paid": 104, "irrevoc": 104, "worldwid": 104, "materi": 104, "deriv": 104, "distribut": 104, "public": 104, "publicli": 104, "displai": 104, "permit": 104, "bsd": 104, "redistribut": 104, "binari": 104, "modif": 104, "met": 104, "retain": 104, "disclaim": 104, "neither": 104, "holder": 104, "nor": 104, "contributor": 104, "endors": 104, "promot": 104, "product": [104, 105], "softwar": 104, "prior": 104, "written": [104, 109], "permiss": 104, "BY": 104, "THE": 104, "AND": 104, "AS": 104, "express": 104, "OR": 104, "impli": 104, "warranti": 104, "BUT": 104, "TO": 104, "OF": 104, "merchant": 104, "FOR": 104, "particular": [104, 105], "IN": 104, "NO": 104, "event": 104, "shall": 104, "BE": 104, "liabl": 104, "indirect": 104, "incident": 104, "exemplari": 104, "consequenti": 104, "damag": 104, "procur": 104, "substitut": 104, "servic": 104, "profit": 104, "busi": 104, "caus": 104, "ON": 104, "theori": 104, "liabil": 104, "strict": 104, "tort": 104, "neglig": 104, "aris": [104, 107], "IF": 104, "advis": 104, "SUCH": 104, "analog": 105, "convolut": 105, "contin": 105, "space": 105, "awkward": 105, "effici": [105, 109], "csr": 105, "mixtur": 105, "inner": 105, "outer": 105, "remain": 105, "revert": 105, "footprint": [105, 109], "decent": 105, "speedup": 105, "approxim": 105, "n_": 105, "mathrm": 105, "wherea": 105, "quickli": 105, "especi": 105, "wast": 105, "proport": 105, "sensum": 105, "nu": 105, "_": 105, "sum_p": 105, "nu_": 105, "z_": 105, "p_j": 105, "s_": 105, "sum_": 105, "p_i": 105, "f_": 105, "e_": 105, "ahead": 105, "basic": [106, 108, 110], "metadata": [106, 109], "assist": 106, "inclus": 106, "index_transform": 106, "tandem": 106, "applic": 107, "yourself": 107, "foomodul": 107, "foonod": 107, "_index_st": 107, "def": 107, "super": 107, "At": 107, "slightli": 107, "_output_nam": 107, "addition": 107, "recogn": 107, "strip": 107, "target_modul": 107, "simplehenergynod": 107, "_input_nam": 107, "hier_featur": 107, "mol_energi": 107, "energy_term": 107, "_main_output": 107, "_output_index_st": 107, "_auto_module_class": 107, "auto_module_class": 107, "easier": 107, "_parent_expand": 107, "mixin": 107, "superclass": 107, "arbitrarili": 107, "whatsoev": 107, "rout": 107, "throw": 107, "power": 107, "simplifi": 107, "perspect": 107, "unambigu": 107, "system_vari": 108, "n_system": 108, "variable_shap": 108, "atom_vari": 108, "bond_vari": 108, "ill": 108, "yet": 108, "most": [109, 113], "linear": 109, "moment": 109, "rest": 109, "mathemat": 109, "think": 109, "integr": 109, "advantag": 109, "explain": 110, "concept": 110, "divid": 111, "conceptu": 111, "One": [111, 113], "reason": 111, "cleanli": 111, "distinct": 111, "made": 111, "subset": 111, "equal": [111, 113], "accumul": 111, "operatino": 111, "post": 111, "pred_per_atom": 111, "peratompredict": 111, "true_per_atom": 111, "peratomtru": 111, "mae_per_atom": 111, "perhap": 111, "simpler": 111, "en_per_atom": 111, "enperatom": 111, "epa": 111, "four": 112, "hippynnrc": 112, "section": 112, "hippynn_local_rc_fil": 112, "rc": 112, "hippynn_": 112, "hippynn_default_plot_filetyp": 112, "overwrit": 112, "earlier": 112, "ye": 112, "technic": 112, "default_plot_filetyp": 112, "filetyp": 112, "pdf": 112, "png": 112, "jpg": 112, "transparent_plot": 112, "background": 112, "transpar": [112, 113], "use_custom_kernel": 112, "tri": 112, "detect": 112, "low": 112, "radial": 112, "debug_loss_broadcast": 112, "broadcast": 112, "badli": 112, "debug_graph_execut": 112, "unless": 112, "wrong": 112, "insid": 112, "respect": 113, "being": 113, "natur": 113, "ask": 113, "philosophi": 113, "choic": 113, "intrins": 113, "ti": 113, "smaller": 113, "allevi": 113, "incorpor": 113, "scaled_charg": 113, "atom_charg": 113, "plai": 113, "squar": 113, "manner": 113, "revers": 113}, "objects": {"": [[0, 0, 0, "-", "hippynn"]], "hippynn": [[1, 0, 0, "-", "custom_kernels"], [11, 0, 0, "-", "databases"], [17, 0, 0, "-", "experiment"], [25, 0, 0, "-", "graphs"], [54, 0, 0, "-", "interfaces"], [69, 0, 0, "-", "layers"], [83, 0, 0, "-", "networks"], [85, 0, 0, "-", "plotting"], [89, 0, 0, "-", "pretraining"], [90, 0, 0, "-", "tools"]], "hippynn.custom_kernels": [[2, 0, 0, "-", "autograd_wrapper"], [3, 0, 0, "-", "env_cupy"], [4, 0, 0, "-", "env_numba"], [5, 0, 0, "-", "env_pytorch"], [1, 1, 1, "", "envsum"], [6, 0, 0, "-", "fast_convert"], [1, 1, 1, "", "featsum"], [1, 1, 1, "", "sensesum"], [1, 1, 1, "", "set_custom_kernels"], [7, 0, 0, "-", "tensor_wrapper"], [8, 0, 0, "-", "test_env_cupy"], [9, 0, 0, "-", "test_env_numba"], [10, 0, 0, "-", "utils"]], "hippynn.custom_kernels.autograd_wrapper": [[2, 1, 1, "", "wrap_envops"]], "hippynn.custom_kernels.env_cupy": [[3, 2, 1, "", "CupyEnvsum"], [3, 2, 1, "", "CupyFeatsum"], [3, 2, 1, "", "CupyGPUKernel"], [3, 2, 1, "", "CupySensesum"]], "hippynn.custom_kernels.env_cupy.CupyGPUKernel": [[3, 3, 1, "", "__init__"]], "hippynn.custom_kernels.env_numba": [[4, 2, 1, "", "WrappedEnvsum"], [4, 2, 1, "", "WrappedFeatsum"], [4, 2, 1, "", "WrappedSensesum"]], "hippynn.custom_kernels.env_numba.WrappedEnvsum": [[4, 4, 1, "", "cpu_kernel"], [4, 3, 1, "", "launch_bounds"], [4, 3, 1, "", "make_kernel"], [4, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.env_numba.WrappedFeatsum": [[4, 4, 1, "", "cpu_kernel"], [4, 3, 1, "", "launch_bounds"], [4, 3, 1, "", "make_kernel"], [4, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.env_numba.WrappedSensesum": [[4, 4, 1, "", "cpu_kernel"], [4, 3, 1, "", "launch_bounds"], [4, 3, 1, "", "make_kernel"], [4, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.env_pytorch": [[5, 1, 1, "", "envsum"], [5, 1, 1, "", "featsum"], [5, 1, 1, "", "sensesum"]], "hippynn.custom_kernels.fast_convert": [[6, 1, 1, "", "batch_convert_torch_to_numba"]], "hippynn.custom_kernels.tensor_wrapper": [[7, 2, 1, "", "NumbaCompatibleTensorFunction"], [7, 1, 1, "", "via_numpy"]], "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "cpu_kernel"], [7, 3, 1, "", "launch_bounds"], [7, 3, 1, "", "make_kernel"], [7, 3, 1, "", "out_shape"]], "hippynn.custom_kernels.test_env_numba": [[9, 2, 1, "", "Envops_tester"], [9, 2, 1, "", "TimedSnippet"], [9, 2, 1, "", "TimerHolder"], [9, 1, 1, "", "get_simulated_data"], [9, 1, 1, "", "main"]], "hippynn.custom_kernels.test_env_numba.Envops_tester": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "all_close_witherror"], [9, 3, 1, "", "check_all_grad"], [9, 3, 1, "", "check_all_grad_once"], [9, 3, 1, "", "check_allclose"], [9, 3, 1, "", "check_allclose_once"], [9, 3, 1, "", "check_correctness"], [9, 3, 1, "", "check_empty"], [9, 3, 1, "", "check_grad_and_gradgrad"], [9, 3, 1, "", "check_speed"]], "hippynn.custom_kernels.test_env_numba.TimedSnippet": [[9, 3, 1, "", "__init__"], [9, 5, 1, "", "elapsed"]], "hippynn.custom_kernels.test_env_numba.TimerHolder": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "add"], [9, 5, 1, "", "elapsed"], [9, 5, 1, "", "mean_elapsed"], [9, 5, 1, "", "median_elapsed"]], "hippynn.custom_kernels.utils": [[10, 1, 1, "", "resort_pairs_cached"]], "hippynn.databases": [[11, 2, 1, "", "Database"], [11, 2, 1, "", "DirectoryDatabase"], [11, 2, 1, "", "NPZDatabase"], [12, 0, 0, "-", "SNAPJson"], [13, 0, 0, "-", "database"], [14, 0, 0, "-", "h5_pyanitools"], [15, 0, 0, "-", "ondisk"], [16, 0, 0, "-", "restarter"]], "hippynn.databases.Database": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "make_explicit_split"], [11, 3, 1, "", "make_generator"], [11, 3, 1, "", "make_random_split"], [11, 3, 1, "", "make_trainvalidtest_split"], [11, 3, 1, "", "send_to_device"], [11, 3, 1, "", "split_the_rest"], [11, 5, 1, "", "var_list"]], "hippynn.databases.DirectoryDatabase": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "get_file_dict"], [11, 3, 1, "", "load_arrays"]], "hippynn.databases.NPZDatabase": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "load_arrays"]], "hippynn.databases.SNAPJson": [[12, 2, 1, "", "SNAPDirectoryDatabase"]], "hippynn.databases.SNAPJson.SNAPDirectoryDatabase": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extract_snap_file"], [12, 3, 1, "", "filter_arrays"], [12, 3, 1, "", "load_arrays"], [12, 3, 1, "", "process_configs"]], "hippynn.databases.database": [[13, 2, 1, "", "Database"], [13, 2, 1, "", "NamedTensorDataset"], [13, 1, 1, "", "compute_index_mask"], [13, 1, 1, "", "prettyprint_arrays"]], "hippynn.databases.database.Database": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "make_explicit_split"], [13, 3, 1, "", "make_generator"], [13, 3, 1, "", "make_random_split"], [13, 3, 1, "", "make_trainvalidtest_split"], [13, 3, 1, "", "send_to_device"], [13, 3, 1, "", "split_the_rest"], [13, 5, 1, "", "var_list"]], "hippynn.databases.database.NamedTensorDataset": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "tensors"]], "hippynn.databases.h5_pyanitools": [[14, 2, 1, "", "PyAniDirectoryDB"], [14, 2, 1, "", "PyAniFileDB"], [14, 2, 1, "", "PyAniMethods"]], "hippynn.databases.h5_pyanitools.PyAniDirectoryDB": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "load_arrays"]], "hippynn.databases.h5_pyanitools.PyAniFileDB": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "load_arrays"]], "hippynn.databases.h5_pyanitools.PyAniMethods": [[14, 3, 1, "", "determine_key_structure"], [14, 3, 1, "", "extract_full_file"], [14, 3, 1, "", "filter_arrays"], [14, 3, 1, "", "process_batches"]], "hippynn.databases.ondisk": [[15, 2, 1, "", "DirectoryDatabase"], [15, 2, 1, "", "NPZDatabase"]], "hippynn.databases.ondisk.DirectoryDatabase": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "get_file_dict"], [15, 3, 1, "", "load_arrays"]], "hippynn.databases.ondisk.NPZDatabase": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "load_arrays"]], "hippynn.databases.restarter": [[16, 2, 1, "", "NoRestart"], [16, 2, 1, "", "RestartDB"], [16, 2, 1, "", "Restartable"], [16, 2, 1, "", "Restarter"]], "hippynn.databases.restarter.NoRestart": [[16, 3, 1, "", "attempt_reload"]], "hippynn.databases.restarter.RestartDB": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "attempt_reload"]], "hippynn.databases.restarter.Restartable": [[16, 3, 1, "", "make_restarter"]], "hippynn.databases.restarter.Restarter": [[16, 3, 1, "", "attempt_reload"]], "hippynn.experiment": [[17, 2, 1, "", "SetupParams"], [17, 1, 1, "", "assemble_for_training"], [18, 0, 0, "-", "assembly"], [19, 0, 0, "-", "controllers"], [20, 0, 0, "-", "device"], [21, 0, 0, "-", "evaluator"], [22, 0, 0, "-", "metric_tracker"], [23, 0, 0, "-", "routines"], [24, 0, 0, "-", "serialization"], [17, 1, 1, "", "setup_and_train"], [17, 1, 1, "", "setup_training"], [17, 1, 1, "", "test_model"], [17, 1, 1, "", "train_model"]], "hippynn.experiment.SetupParams": [[17, 3, 1, "", "__init__"], [17, 4, 1, "", "batch_size"], [17, 4, 1, "", "controller"], [17, 4, 1, "", "device"], [17, 4, 1, "", "eval_batch_size"], [17, 4, 1, "", "fraction_train_eval"], [17, 4, 1, "", "learning_rate"], [17, 4, 1, "", "max_epochs"], [17, 4, 1, "", "optimizer"], [17, 4, 1, "", "scheduler"], [17, 4, 1, "", "stopping_key"]], "hippynn.experiment.assembly": [[18, 2, 1, "", "TrainingModules"], [18, 1, 1, "", "assemble_for_training"], [18, 1, 1, "", "build_loss_modules"], [18, 1, 1, "", "determine_out_in_targ"], [18, 1, 1, "", "gemerate_database_info"], [18, 1, 1, "", "precompute_pairs"]], "hippynn.experiment.assembly.TrainingModules": [[18, 4, 1, "", "evaluator"], [18, 4, 1, "", "loss"], [18, 4, 1, "", "model"]], "hippynn.experiment.controllers": [[19, 2, 1, "", "Controller"], [19, 2, 1, "", "PatienceController"], [19, 2, 1, "", "RaiseBatchSizeOnPlateau"], [19, 1, 1, "", "is_scheduler_like"]], "hippynn.experiment.controllers.Controller": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "load_state_dict"], [19, 5, 1, "", "max_epochs"], [19, 3, 1, "", "push_epoch"], [19, 3, 1, "", "state_dict"]], "hippynn.experiment.controllers.PatienceController": [[19, 3, 1, "", "__init__"], [19, 5, 1, "", "max_epochs"], [19, 3, 1, "", "push_epoch"]], "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "load_state_dict"], [19, 3, 1, "", "set_controller"], [19, 3, 1, "", "state_dict"], [19, 3, 1, "", "step"]], "hippynn.experiment.device": [[20, 1, 1, "", "set_devices"]], "hippynn.experiment.evaluator": [[21, 2, 1, "", "Evaluator"]], "hippynn.experiment.evaluator.Evaluator": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "evaluate"], [21, 5, 1, "", "var_list"]], "hippynn.experiment.metric_tracker": [[22, 2, 1, "", "MetricTracker"], [22, 1, 1, "", "table_evaluation_print"], [22, 1, 1, "", "table_evaluation_print_better"]], "hippynn.experiment.metric_tracker.MetricTracker": [[22, 3, 1, "", "__init__"], [22, 5, 1, "", "current_epoch"], [22, 3, 1, "", "evaluation_print"], [22, 3, 1, "", "evaluation_print_better"], [22, 3, 1, "", "from_evaluator"], [22, 3, 1, "", "plot_over_time"], [22, 3, 1, "", "register_metrics"]], "hippynn.experiment.routines": [[23, 2, 1, "", "SetupParams"], [23, 1, 1, "", "setup_and_train"], [23, 1, 1, "", "setup_training"], [23, 1, 1, "", "test_model"], [23, 1, 1, "", "train_model"], [23, 1, 1, "", "training_loop"]], "hippynn.experiment.routines.SetupParams": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "batch_size"], [23, 4, 1, "", "controller"], [23, 4, 1, "", "device"], [23, 4, 1, "", "eval_batch_size"], [23, 4, 1, "", "fraction_train_eval"], [23, 4, 1, "", "learning_rate"], [23, 4, 1, "", "max_epochs"], [23, 4, 1, "", "optimizer"], [23, 4, 1, "", "scheduler"], [23, 4, 1, "", "stopping_key"]], "hippynn.experiment.serialization": [[24, 1, 1, "", "check_mapping_devices"], [24, 1, 1, "", "create_state"], [24, 1, 1, "", "create_structure_file"], [24, 1, 1, "", "load_checkpoint"], [24, 1, 1, "", "load_checkpoint_from_cwd"], [24, 1, 1, "", "load_model_from_cwd"], [24, 1, 1, "", "load_saved_tensors"], [24, 1, 1, "", "restore_checkpoint"]], "hippynn.graphs": [[25, 2, 1, "", "GraphModule"], [25, 2, 1, "", "IdxType"], [25, 2, 1, "", "Predictor"], [25, 1, 1, "", "compute_evaluation_order"], [25, 1, 1, "", "copy_subgraph"], [25, 1, 1, "", "find_relatives"], [25, 1, 1, "", "find_unique_relative"], [25, 1, 1, "", "get_connected_nodes"], [25, 1, 1, "", "get_subgraph"], [26, 0, 0, "-", "gops"], [27, 0, 0, "-", "graph"], [28, 0, 0, "-", "indextransformers"], [32, 0, 0, "-", "indextypes"], [36, 0, 0, "-", "nodes"], [52, 0, 0, "-", "predictor"], [25, 1, 1, "", "replace_node"], [53, 0, 0, "-", "viz"]], "hippynn.graphs.GraphModule": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "extra_repr"], [25, 3, 1, "", "forward"], [25, 3, 1, "", "get_module"], [25, 3, 1, "", "node_from_name"], [25, 3, 1, "", "print_structure"], [25, 4, 1, "", "training"]], "hippynn.graphs.IdxType": [[25, 4, 1, "", "Atoms"], [25, 4, 1, "", "MolAtom"], [25, 4, 1, "", "MolAtomAtom"], [25, 4, 1, "", "Molecules"], [25, 4, 1, "", "NotFound"], [25, 4, 1, "", "Pair"], [25, 4, 1, "", "QuadMol"], [25, 4, 1, "", "QuadPack"], [25, 4, 1, "", "Scalar"]], "hippynn.graphs.Predictor": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "add_output"], [25, 3, 1, "", "apply_to_database"], [25, 3, 1, "", "from_graph"], [25, 5, 1, "", "inputs"], [25, 5, 1, "", "model_device"], [25, 5, 1, "", "outputs"], [25, 3, 1, "", "predict_all"], [25, 3, 1, "", "predict_batched"], [25, 3, 1, "", "to"], [25, 3, 1, "", "wrap_outputs"]], "hippynn.graphs.gops": [[26, 6, 1, "", "GraphInconsistency"], [26, 1, 1, "", "check_evaluation_order"], [26, 1, 1, "", "check_link_consistency"], [26, 1, 1, "", "compute_evaluation_order"], [26, 1, 1, "", "copy_subgraph"], [26, 1, 1, "", "get_subgraph"], [26, 1, 1, "", "replace_node"], [26, 1, 1, "", "replace_node_with_constant"], [26, 1, 1, "", "search_by_name"]], "hippynn.graphs.graph": [[27, 2, 1, "", "GraphModule"]], "hippynn.graphs.graph.GraphModule": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "extra_repr"], [27, 3, 1, "", "forward"], [27, 3, 1, "", "get_module"], [27, 3, 1, "", "node_from_name"], [27, 3, 1, "", "print_structure"], [27, 4, 1, "", "training"]], "hippynn.graphs.indextransformers": [[29, 0, 0, "-", "atoms"], [30, 0, 0, "-", "pairs"], [31, 0, 0, "-", "tensors"]], "hippynn.graphs.indextransformers.atoms": [[29, 1, 1, "", "idx_atom_molatom"], [29, 1, 1, "", "idx_molatom_atom"]], "hippynn.graphs.indextransformers.pairs": [[30, 1, 1, "", "idx_molatomatom_pair"], [30, 1, 1, "", "idx_pair_molatomatom"]], "hippynn.graphs.indextransformers.tensors": [[31, 1, 1, "", "idx_QuadTriMol"]], "hippynn.graphs.indextypes": [[32, 2, 1, "", "IdxType"], [32, 1, 1, "", "clear_index_cache"], [32, 1, 1, "", "db_form"], [32, 1, 1, "", "elementwise_compare_reduce"], [32, 1, 1, "", "get_reduced_index_state"], [32, 1, 1, "", "index_type_coercion"], [33, 0, 0, "-", "reduce_funcs"], [32, 1, 1, "", "register_index_transformer"], [34, 0, 0, "-", "registry"], [32, 1, 1, "", "soft_index_type_coercion"], [35, 0, 0, "-", "type_def"]], "hippynn.graphs.indextypes.IdxType": [[32, 4, 1, "", "Atoms"], [32, 4, 1, "", "MolAtom"], [32, 4, 1, "", "MolAtomAtom"], [32, 4, 1, "", "Molecules"], [32, 4, 1, "", "NotFound"], [32, 4, 1, "", "Pair"], [32, 4, 1, "", "QuadMol"], [32, 4, 1, "", "QuadPack"], [32, 4, 1, "", "Scalar"]], "hippynn.graphs.indextypes.reduce_funcs": [[33, 1, 1, "", "db_form"], [33, 1, 1, "", "db_state_of"], [33, 1, 1, "", "dispatch_indexing"], [33, 1, 1, "", "elementwise_compare_reduce"], [33, 1, 1, "", "get_reduced_index_state"], [33, 1, 1, "", "index_type_coercion"], [33, 1, 1, "", "soft_index_type_coercion"]], "hippynn.graphs.indextypes.registry": [[34, 1, 1, "", "clear_index_cache"], [34, 1, 1, "", "register_index_transformer"]], "hippynn.graphs.indextypes.type_def": [[35, 2, 1, "", "IdxType"]], "hippynn.graphs.indextypes.type_def.IdxType": [[35, 4, 1, "", "Atoms"], [35, 4, 1, "", "MolAtom"], [35, 4, 1, "", "MolAtomAtom"], [35, 4, 1, "", "Molecules"], [35, 4, 1, "", "NotFound"], [35, 4, 1, "", "Pair"], [35, 4, 1, "", "QuadMol"], [35, 4, 1, "", "QuadPack"], [35, 4, 1, "", "Scalar"]], "hippynn.graphs.nodes": [[37, 0, 0, "-", "base"], [43, 0, 0, "-", "indexers"], [44, 0, 0, "-", "inputs"], [45, 0, 0, "-", "loss"], [46, 0, 0, "-", "misc"], [47, 0, 0, "-", "networks"], [48, 0, 0, "-", "pairs"], [49, 0, 0, "-", "physics"], [50, 0, 0, "-", "tags"], [51, 0, 0, "-", "targets"]], "hippynn.graphs.nodes.base": [[38, 0, 0, "-", "algebra"], [39, 0, 0, "-", "base"], [40, 0, 0, "-", "definition_helpers"], [41, 0, 0, "-", "multi"], [42, 0, 0, "-", "node_functions"]], "hippynn.graphs.nodes.base.algebra": [[38, 2, 1, "", "AddNode"], [38, 2, 1, "", "AtLeast2D"], [38, 2, 1, "", "BinNode"], [38, 2, 1, "", "DivNode"], [38, 2, 1, "", "InvNode"], [38, 2, 1, "", "MulNode"], [38, 2, 1, "", "NegNode"], [38, 2, 1, "", "PowNode"], [38, 2, 1, "", "SubNode"], [38, 2, 1, "", "UnaryNode"], [38, 2, 1, "", "ValueNode"], [38, 1, 1, "", "coerces_values_to_nodes"], [38, 1, 1, "", "wrap_as_node"]], "hippynn.graphs.nodes.base.algebra.AddNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.AtLeast2D": [[38, 3, 1, "", "__init__"], [38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.BinNode": [[38, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.algebra.DivNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.InvNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.MulNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.NegNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.PowNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.SubNode": [[38, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.base.algebra.UnaryNode": [[38, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.algebra.ValueNode": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.base.base": [[39, 2, 1, "", "InputNode"], [39, 2, 1, "", "LossInputNode"], [39, 2, 1, "", "LossPredNode"], [39, 2, 1, "", "LossTrueNode"], [39, 2, 1, "", "Node"], [39, 2, 1, "", "SingleNode"]], "hippynn.graphs.nodes.base.base.InputNode": [[39, 3, 1, "", "__init__"], [39, 4, 1, "", "input_type_str"], [39, 4, 1, "", "requires_grad"]], "hippynn.graphs.nodes.base.base.LossInputNode": [[39, 3, 1, "", "__init__"], [39, 5, 1, "", "pred"], [39, 5, 1, "", "true"]], "hippynn.graphs.nodes.base.base.LossPredNode": [[39, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.base.LossTrueNode": [[39, 3, 1, "", "__init__"], [39, 5, 1, "", "main_output"]], "hippynn.graphs.nodes.base.definition_helpers": [[40, 2, 1, "", "AlwaysMatch"], [40, 2, 1, "", "AutoKw"], [40, 2, 1, "", "AutoNoKw"], [40, 2, 1, "", "ExpandParentMeta"], [40, 2, 1, "", "ExpandParents"], [40, 2, 1, "", "FormAssertLength"], [40, 2, 1, "", "FormAssertion"], [40, 2, 1, "", "FormHandler"], [40, 2, 1, "", "FormTransformer"], [40, 2, 1, "", "IndexFormTransformer"], [40, 2, 1, "", "MainOutputTransformer"], [40, 2, 1, "", "ParentExpander"], [40, 6, 1, "", "TupleTypeMismatch"], [40, 1, 1, "", "adds_to_forms"], [40, 1, 1, "", "format_form_name"], [40, 1, 1, "", "temporary_parents"]], "hippynn.graphs.nodes.base.definition_helpers.AutoKw": [[40, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.base.definition_helpers.AutoNoKw": [[40, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.base.definition_helpers.ExpandParents": [[40, 3, 1, "", "expand_parents"]], "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.FormAssertion": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.FormHandler": [[40, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.FormTransformer": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "add_class_doc"]], "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "add_class_doc"], [40, 3, 1, "", "fn"]], "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "add_class_doc"], [40, 3, 1, "", "fn"]], "hippynn.graphs.nodes.base.definition_helpers.ParentExpander": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "assertion"], [40, 3, 1, "", "assertlen"], [40, 3, 1, "", "get_main_outputs"], [40, 3, 1, "", "match"], [40, 3, 1, "", "matched_idx_coercion"], [40, 3, 1, "", "matchlen"], [40, 3, 1, "", "require_idx_states"]], "hippynn.graphs.nodes.base.multi": [[41, 2, 1, "", "IndexNode"], [41, 2, 1, "", "MultiNode"]], "hippynn.graphs.nodes.base.multi.IndexNode": [[41, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.base.multi.MultiNode": [[41, 3, 1, "", "__init__"], [41, 5, 1, "", "main_output"], [41, 3, 1, "", "set_dbname"]], "hippynn.graphs.nodes.base.node_functions": [[42, 6, 1, "", "NodeAmbiguityError"], [42, 6, 1, "", "NodeNotFound"], [42, 6, 1, "", "NodeOperationError"], [42, 1, 1, "", "find_relatives"], [42, 1, 1, "", "find_unique_relative"], [42, 1, 1, "", "get_connected_nodes"]], "hippynn.graphs.nodes.indexers": [[43, 2, 1, "", "AtomDeIndexer"], [43, 2, 1, "", "AtomReIndexer"], [43, 2, 1, "", "FilterBondsOneway"], [43, 2, 1, "", "OneHotEncoder"], [43, 2, 1, "", "PaddingIndexer"], [43, 2, 1, "", "QuadUnpackNode"], [43, 1, 1, "", "acquire_encoding_padding"]], "hippynn.graphs.nodes.indexers.AtomDeIndexer": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.indexers.AtomReIndexer": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "expand0"], [43, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.indexers.FilterBondsOneway": [[43, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.indexers.OneHotEncoder": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "auto_module"]], "hippynn.graphs.nodes.indexers.PaddingIndexer": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.indexers.QuadUnpackNode": [[43, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.inputs": [[44, 2, 1, "", "CellNode"], [44, 2, 1, "", "Indices"], [44, 2, 1, "", "InputCharges"], [44, 2, 1, "", "PairIndices"], [44, 2, 1, "", "PositionsNode"], [44, 2, 1, "", "SpeciesNode"], [44, 2, 1, "", "SplitIndices"]], "hippynn.graphs.nodes.inputs.CellNode": [[44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.Indices": [[44, 3, 1, "", "__init__"], [44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.InputCharges": [[44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.PairIndices": [[44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.PositionsNode": [[44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.SpeciesNode": [[44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.inputs.SplitIndices": [[44, 3, 1, "", "__init__"], [44, 4, 1, "", "input_type_str"]], "hippynn.graphs.nodes.loss": [[45, 2, 1, "", "MAELoss"], [45, 2, 1, "", "MSELoss"], [45, 2, 1, "", "Mean"], [45, 2, 1, "", "MeanSq"], [45, 2, 1, "", "ReduceSingleNode"], [45, 2, 1, "", "Rsq"], [45, 2, 1, "", "RsqMod"], [45, 2, 1, "", "Std"], [45, 2, 1, "", "Var"], [45, 1, 1, "", "l1reg"], [45, 1, 1, "", "l2reg"], [45, 1, 1, "", "lpreg"], [45, 1, 1, "", "mean_sq"]], "hippynn.graphs.nodes.loss.MAELoss": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.loss.MSELoss": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.loss.Mean": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.loss.MeanSq": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.loss.ReduceSingleNode": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "of_node"]], "hippynn.graphs.nodes.loss.Rsq": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.loss.RsqMod": [[45, 3, 1, "", "forward"], [45, 4, 1, "", "training"]], "hippynn.graphs.nodes.loss.Std": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.loss.Var": [[45, 4, 1, "", "torch_module"]], "hippynn.graphs.nodes.misc": [[46, 2, 1, "", "ListNode"], [46, 2, 1, "", "StrainInducer"]], "hippynn.graphs.nodes.misc.ListNode": [[46, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.misc.StrainInducer": [[46, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.networks": [[47, 2, 1, "", "DefaultNetworkExpansion"], [47, 2, 1, "", "Hipnn"], [47, 2, 1, "", "HipnnQuad"], [47, 2, 1, "", "HipnnVec"]], "hippynn.graphs.nodes.networks.DefaultNetworkExpansion": [[47, 3, 1, "", "expansion0"], [47, 3, 1, "", "expansion1"]], "hippynn.graphs.nodes.networks.Hipnn": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "expansion2"]], "hippynn.graphs.nodes.networks.HipnnVec": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "expansion2"]], "hippynn.graphs.nodes.pairs": [[48, 2, 1, "", "DynamicPeriodicPairs"], [48, 2, 1, "", "ExternalNeighborIndexer"], [48, 2, 1, "", "MinDistNode"], [48, 2, 1, "", "NumpyDynamicPairs"], [48, 2, 1, "", "OpenPairIndexer"], [48, 2, 1, "", "PaddedNeighborNode"], [48, 2, 1, "", "PairCacher"], [48, 2, 1, "", "PairDeIndexer"], [48, 2, 1, "", "PairReIndexer"], [48, 2, 1, "", "PairUncacher"], [48, 2, 1, "", "PeriodicPairIndexer"], [48, 2, 1, "", "PeriodicPairOutputs"], [48, 2, 1, "", "RDFBins"]], "hippynn.graphs.nodes.pairs.ExternalNeighborIndexer": [[48, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.pairs.MinDistNode": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"], [48, 3, 1, "", "expand2"]], "hippynn.graphs.nodes.pairs.OpenPairIndexer": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "auto_module"], [48, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.pairs.PaddedNeighborNode": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"]], "hippynn.graphs.nodes.pairs.PairCacher": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PairDeIndexer": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PairReIndexer": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PairUncacher": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.PeriodicPairIndexer": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.pairs.RDFBins": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "expand0"], [48, 3, 1, "", "expand1"], [48, 3, 1, "", "expand2"], [48, 3, 1, "", "expand3"]], "hippynn.graphs.nodes.physics": [[49, 2, 1, "", "AtomToMolSummer"], [49, 2, 1, "", "BondToMolSummmer"], [49, 2, 1, "", "ChargeMomentNode"], [49, 2, 1, "", "ChargePairSetup"], [49, 2, 1, "", "CoulombEnergyNode"], [49, 2, 1, "", "DipoleNode"], [49, 2, 1, "", "GradientNode"], [49, 2, 1, "", "PerAtom"], [49, 2, 1, "", "QuadrupoleNode"], [49, 2, 1, "", "ScreenedCoulombEnergyNode"], [49, 2, 1, "", "StressForceNode"], [49, 2, 1, "", "VecMag"]], "hippynn.graphs.nodes.physics.AtomToMolSummer": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "expansion0"], [49, 3, 1, "", "expansion1"]], "hippynn.graphs.nodes.physics.BondToMolSummmer": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "expansion0"], [49, 3, 1, "", "expansion1"], [49, 3, 1, "", "expansion2"]], "hippynn.graphs.nodes.physics.ChargeMomentNode": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "expansion0"], [49, 3, 1, "", "expansion1"], [49, 3, 1, "", "expansion2"]], "hippynn.graphs.nodes.physics.ChargePairSetup": [[49, 3, 1, "", "expansion0"], [49, 3, 1, "", "expansion1"], [49, 3, 1, "", "expansion2"], [49, 3, 1, "", "expansion3"], [49, 3, 1, "", "expansion4"]], "hippynn.graphs.nodes.physics.CoulombEnergyNode": [[49, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.physics.GradientNode": [[49, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.physics.PerAtom": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "expansion0"], [49, 3, 1, "", "expansion1"]], "hippynn.graphs.nodes.physics.ScreenedCoulombEnergyNode": [[49, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.physics.StressForceNode": [[49, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.physics.VecMag": [[49, 3, 1, "", "__init__"]], "hippynn.graphs.nodes.tags": [[50, 2, 1, "", "AtomIndexer"], [50, 2, 1, "", "Charges"], [50, 2, 1, "", "Encoder"], [50, 2, 1, "", "Energies"], [50, 2, 1, "", "HAtomRegressor"], [50, 2, 1, "", "Network"], [50, 2, 1, "", "PairCache"], [50, 2, 1, "", "PairIndexer"], [50, 2, 1, "", "Positions"], [50, 2, 1, "", "Species"]], "hippynn.graphs.nodes.tags.Encoder": [[50, 4, 1, "", "species_set"]], "hippynn.graphs.nodes.targets": [[51, 2, 1, "", "HBondNode"], [51, 2, 1, "", "HChargeNode"], [51, 2, 1, "", "HEnergyNode"], [51, 2, 1, "", "LocalChargeEnergy"], [51, 2, 1, "", "LocalEnergyNode"]], "hippynn.graphs.nodes.targets.HBondNode": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "expand0"], [51, 3, 1, "", "expand1"]], "hippynn.graphs.nodes.targets.HChargeNode": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "expansion0"]], "hippynn.graphs.nodes.targets.HEnergyNode": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "expansion0"]], "hippynn.graphs.nodes.targets.LocalChargeEnergy": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "expansion0"]], "hippynn.graphs.nodes.targets.LocalEnergyNode": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "auto_module"], [51, 3, 1, "", "expansion0"], [51, 3, 1, "", "expansion1"]], "hippynn.graphs.predictor": [[52, 2, 1, "", "Predictor"]], "hippynn.graphs.predictor.Predictor": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "add_output"], [52, 3, 1, "", "apply_to_database"], [52, 3, 1, "", "from_graph"], [52, 5, 1, "", "inputs"], [52, 5, 1, "", "model_device"], [52, 5, 1, "", "outputs"], [52, 3, 1, "", "predict_all"], [52, 3, 1, "", "predict_batched"], [52, 3, 1, "", "to"], [52, 3, 1, "", "wrap_outputs"]], "hippynn.graphs.viz": [[53, 1, 1, "", "visualize_connected_nodes"], [53, 1, 1, "", "visualize_graph_module"], [53, 1, 1, "", "visualize_node_set"]], "hippynn.interfaces": [[55, 0, 0, "-", "ase_interface"], [58, 0, 0, "-", "lammps_interface"], [60, 0, 0, "-", "pyseqm_interface"], [68, 0, 0, "-", "schnetpack_interface"]], "hippynn.interfaces.ase_interface": [[55, 2, 1, "", "HippynnCalculator"], [56, 0, 0, "-", "calculator"], [55, 1, 1, "", "calculator_from_model"], [57, 0, 0, "-", "pairfinder"]], "hippynn.interfaces.ase_interface.HippynnCalculator": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "calculate"], [55, 3, 1, "", "calculation_required"], [55, 3, 1, "", "get_charges"], [55, 3, 1, "", "get_dipole"], [55, 3, 1, "", "get_dipole_moment"], [55, 3, 1, "", "get_energies"], [55, 3, 1, "", "get_energy"], [55, 3, 1, "", "get_forces"], [55, 3, 1, "", "get_free_energy"], [55, 3, 1, "", "get_magmom"], [55, 3, 1, "", "get_magmoms"], [55, 3, 1, "", "get_potential_energies"], [55, 3, 1, "", "get_potential_energy"], [55, 3, 1, "", "get_property"], [55, 3, 1, "", "get_stress"], [55, 3, 1, "", "get_stresses"], [55, 3, 1, "", "rebuild_neighbors"], [55, 3, 1, "", "set_atoms"], [55, 3, 1, "", "to"]], "hippynn.interfaces.ase_interface.calculator": [[56, 2, 1, "", "HippynnCalculator"], [56, 2, 1, "", "PBCHandle"], [56, 1, 1, "", "calculator_from_model"], [56, 1, 1, "", "pass_to_pytorch"], [56, 1, 1, "", "setup_ASE_graph"]], "hippynn.interfaces.ase_interface.calculator.HippynnCalculator": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "calculate"], [56, 3, 1, "", "calculation_required"], [56, 3, 1, "", "get_charges"], [56, 3, 1, "", "get_dipole"], [56, 3, 1, "", "get_dipole_moment"], [56, 3, 1, "", "get_energies"], [56, 3, 1, "", "get_energy"], [56, 3, 1, "", "get_forces"], [56, 3, 1, "", "get_free_energy"], [56, 3, 1, "", "get_magmom"], [56, 3, 1, "", "get_magmoms"], [56, 3, 1, "", "get_potential_energies"], [56, 3, 1, "", "get_potential_energy"], [56, 3, 1, "", "get_property"], [56, 3, 1, "", "get_stress"], [56, 3, 1, "", "get_stresses"], [56, 3, 1, "", "rebuild_neighbors"], [56, 3, 1, "", "set_atoms"], [56, 3, 1, "", "to"]], "hippynn.interfaces.ase_interface.calculator.PBCHandle": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "set"]], "hippynn.interfaces.ase_interface.pairfinder": [[57, 2, 1, "", "ASENeighbors"], [57, 2, 1, "", "ASEPairNode"], [57, 1, 1, "", "ASE_compute_neighbors"]], "hippynn.interfaces.ase_interface.pairfinder.ASENeighbors": [[57, 3, 1, "", "compute_one"], [57, 4, 1, "", "training"]], "hippynn.interfaces.lammps_interface": [[59, 0, 0, "-", "mliap_interface"]], "hippynn.interfaces.lammps_interface.mliap_interface": [[59, 2, 1, "", "LocalAtomEnergyNode"], [59, 2, 1, "", "LocalAtomsEnergy"], [59, 2, 1, "", "MLIAPInterface"], [59, 1, 1, "", "setup_LAMMPS_graph"]], "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomEnergyNode": [[59, 3, 1, "", "__init__"]], "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomsEnergy": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "forward"], [59, 4, 1, "", "training"]], "hippynn.interfaces.lammps_interface.mliap_interface.MLIAPInterface": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "compute_descriptors"], [59, 3, 1, "", "compute_forces"], [59, 3, 1, "", "compute_gradients"]], "hippynn.interfaces.pyseqm_interface": [[61, 0, 0, "-", "callback"], [62, 0, 0, "-", "check"], [63, 0, 0, "-", "gen_par"], [64, 0, 0, "-", "mlseqm"], [65, 0, 0, "-", "seqm_modules"], [66, 0, 0, "-", "seqm_nodes"], [67, 0, 0, "-", "seqm_one"]], "hippynn.interfaces.pyseqm_interface.callback": [[61, 1, 1, "", "save_and_stop_after"], [61, 1, 1, "", "update_scf_backward_eps"], [61, 1, 1, "", "update_scf_eps"]], "hippynn.interfaces.pyseqm_interface.check": [[62, 1, 1, "", "check"], [62, 1, 1, "", "check_dist"], [62, 1, 1, "", "check_gradient"], [62, 1, 1, "", "save"]], "hippynn.interfaces.pyseqm_interface.gen_par": [[63, 2, 1, "", "gen_par"]], "hippynn.interfaces.pyseqm_interface.gen_par.gen_par": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "forward"], [63, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.mlseqm": [[64, 2, 1, "", "MLSEQM"], [64, 2, 1, "", "MLSEQM_Node"]], "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "forward"], [64, 3, 1, "", "save"], [64, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM_Node": [[64, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_modules": [[65, 2, 1, "", "AtomMask"], [65, 2, 1, "", "SEQM_All"], [65, 2, 1, "", "SEQM_Energy"], [65, 2, 1, "", "SEQM_MaskOnMol"], [65, 2, 1, "", "SEQM_MaskOnMolAtom"], [65, 2, 1, "", "SEQM_MaskOnMolOrbital"], [65, 2, 1, "", "SEQM_MaskOnMolOrbitalAtom"], [65, 2, 1, "", "SEQM_MolMask"], [65, 2, 1, "", "SEQM_OrbitalMask"], [65, 2, 1, "", "Scale"], [65, 1, 1, "", "num_orb"], [65, 1, 1, "", "pack_par"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.AtomMask": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_All": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_Energy": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMol": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolAtom": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbital": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbitalAtom": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MolMask": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_OrbitalMask": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_modules.Scale": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "forward"], [65, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes": [[66, 2, 1, "", "AtomMaskNode"], [66, 2, 1, "", "SEQM_AllNode"], [66, 2, 1, "", "SEQM_EnergyNode"], [66, 2, 1, "", "SEQM_MaskOnMolAtomNode"], [66, 2, 1, "", "SEQM_MaskOnMolNode"], [66, 2, 1, "", "SEQM_MaskOnMolOrbitalAtomNode"], [66, 2, 1, "", "SEQM_MaskOnMolOrbitalNode"], [66, 2, 1, "", "SEQM_MolMaskNode"], [66, 2, 1, "", "SEQM_OrbitalMaskNode"], [66, 2, 1, "", "ScaleNode"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.AtomMaskNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_EnergyNode": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "expand0"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolAtomNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolOrbitalAtomNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolOrbitalNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MolMaskNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_OrbitalMaskNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes.ScaleNode": [[66, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_one": [[67, 2, 1, "", "DensityMatrixNode"], [67, 2, 1, "", "Energy_One"], [67, 2, 1, "", "Hamiltonian_One"], [67, 2, 1, "", "NotConvergedNode"], [67, 2, 1, "", "SEQM_One_All"], [67, 2, 1, "", "SEQM_One_AllNode"], [67, 2, 1, "", "SEQM_One_Energy"], [67, 2, 1, "", "SEQM_One_EnergyNode"]], "hippynn.interfaces.pyseqm_interface.seqm_one.DensityMatrixNode": [[67, 4, 1, "", "input_type_str"]], "hippynn.interfaces.pyseqm_interface.seqm_one.Energy_One": [[67, 3, 1, "", "__init__"]], "hippynn.interfaces.pyseqm_interface.seqm_one.Hamiltonian_One": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "forward"]], "hippynn.interfaces.pyseqm_interface.seqm_one.NotConvergedNode": [[67, 4, 1, "", "input_type_str"]], "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_All": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "forward"], [67, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_Energy": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "forward"], [67, 4, 1, "", "training"]], "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_EnergyNode": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "expand0"]], "hippynn.interfaces.schnetpack_interface": [[68, 2, 1, "", "SchNetNode"], [68, 2, 1, "", "SchNetWrapper"], [68, 1, 1, "", "create_schnetpack_inputs"]], "hippynn.interfaces.schnetpack_interface.SchNetNode": [[68, 3, 1, "", "__init__"]], "hippynn.interfaces.schnetpack_interface.SchNetWrapper": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "forward"], [68, 4, 1, "", "training"]], "hippynn.layers": [[70, 0, 0, "-", "algebra"], [71, 0, 0, "-", "hiplayers"], [72, 0, 0, "-", "indexers"], [73, 0, 0, "-", "pairs"], [79, 0, 0, "-", "physics"], [80, 0, 0, "-", "regularization"], [81, 0, 0, "-", "targets"], [82, 0, 0, "-", "transform"]], "hippynn.layers.algebra": [[70, 2, 1, "", "AtLeast2D"], [70, 2, 1, "", "Idx"], [70, 2, 1, "", "LambdaModule"], [70, 2, 1, "", "ListMod"], [70, 2, 1, "", "ValueMod"]], "hippynn.layers.algebra.AtLeast2D": [[70, 3, 1, "", "forward"], [70, 4, 1, "", "training"]], "hippynn.layers.algebra.Idx": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "extra_repr"], [70, 3, 1, "", "forward"], [70, 4, 1, "", "training"]], "hippynn.layers.algebra.LambdaModule": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "extra_repr"], [70, 3, 1, "", "forward"], [70, 4, 1, "", "training"]], "hippynn.layers.algebra.ListMod": [[70, 3, 1, "", "forward"], [70, 4, 1, "", "training"]], "hippynn.layers.algebra.ValueMod": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "extra_repr"], [70, 3, 1, "", "forward"], [70, 4, 1, "", "training"]], "hippynn.layers.hiplayers": [[71, 2, 1, "", "CosCutoff"], [71, 2, 1, "", "GaussianSensitivityModule"], [71, 2, 1, "", "InteractLayer"], [71, 2, 1, "", "InteractLayerQuad"], [71, 2, 1, "", "InteractLayerVec"], [71, 2, 1, "", "InverseSensitivityModule"], [71, 2, 1, "", "SensitivityBottleneck"], [71, 2, 1, "", "SensitivityModule"], [71, 1, 1, "", "warn_if_under"]], "hippynn.layers.hiplayers.CosCutoff": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.GaussianSensitivityModule": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InteractLayer": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 3, 1, "", "regularization_params"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InteractLayerQuad": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InteractLayerVec": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.InverseSensitivityModule": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.SensitivityBottleneck": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "forward"], [71, 4, 1, "", "training"]], "hippynn.layers.hiplayers.SensitivityModule": [[71, 3, 1, "", "__init__"], [71, 4, 1, "", "training"]], "hippynn.layers.indexers": [[72, 2, 1, "", "AtomDeIndexer"], [72, 2, 1, "", "AtomReIndexer"], [72, 2, 1, "", "CellScaleInducer"], [72, 2, 1, "", "FilterBondsOneway"], [72, 2, 1, "", "MolSummer"], [72, 2, 1, "", "OneHotSpecies"], [72, 2, 1, "", "PaddingIndexer"], [72, 2, 1, "", "QuadPack"], [72, 2, 1, "", "QuadUnpack"]], "hippynn.layers.indexers.AtomDeIndexer": [[72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.AtomReIndexer": [[72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.CellScaleInducer": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.FilterBondsOneway": [[72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.MolSummer": [[72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.OneHotSpecies": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.PaddingIndexer": [[72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.QuadPack": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.indexers.QuadUnpack": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "forward"], [72, 4, 1, "", "training"]], "hippynn.layers.pairs": [[74, 0, 0, "-", "analysis"], [75, 0, 0, "-", "dispatch"], [76, 0, 0, "-", "indexing"], [77, 0, 0, "-", "open"], [78, 0, 0, "-", "periodic"]], "hippynn.layers.pairs.analysis": [[74, 2, 1, "", "MinDistModule"], [74, 2, 1, "", "RDFBins"], [74, 1, 1, "", "min_dist_info"]], "hippynn.layers.pairs.analysis.MinDistModule": [[74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.pairs.analysis.RDFBins": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "bin_info"], [74, 3, 1, "", "forward"], [74, 4, 1, "", "training"]], "hippynn.layers.pairs.dispatch": [[75, 2, 1, "", "NPNeighbors"], [75, 2, 1, "", "TorchNeighbors"], [75, 1, 1, "", "neighbor_list_np"], [75, 1, 1, "", "wrap_points_np"]], "hippynn.layers.pairs.dispatch.NPNeighbors": [[75, 3, 1, "", "compute_one"], [75, 4, 1, "", "training"]], "hippynn.layers.pairs.dispatch.TorchNeighbors": [[75, 3, 1, "", "compute_one"], [75, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing": [[76, 2, 1, "", "ExternalNeighbors"], [76, 2, 1, "", "MolPairSummer"], [76, 2, 1, "", "PaddedNeighModule"], [76, 2, 1, "", "PairCacher"], [76, 2, 1, "", "PairDeIndexer"], [76, 2, 1, "", "PairReIndexer"], [76, 2, 1, "", "PairUncacher"], [76, 1, 1, "", "padded_neighlist"]], "hippynn.layers.pairs.indexing.ExternalNeighbors": [[76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.MolPairSummer": [[76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PaddedNeighModule": [[76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairCacher": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 3, 1, "", "set_images"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairDeIndexer": [[76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairReIndexer": [[76, 3, 1, "", "forward"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.indexing.PairUncacher": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "forward"], [76, 3, 1, "", "set_images"], [76, 4, 1, "", "training"]], "hippynn.layers.pairs.open": [[77, 2, 1, "", "OpenPairIndexer"]], "hippynn.layers.pairs.open.OpenPairIndexer": [[77, 3, 1, "", "forward"], [77, 4, 1, "", "training"]], "hippynn.layers.pairs.periodic": [[78, 2, 1, "", "PeriodicPairIndexer"], [78, 2, 1, "", "StaticImagePeriodicPairIndexer"]], "hippynn.layers.pairs.periodic.PeriodicPairIndexer": [[78, 3, 1, "", "forward"], [78, 4, 1, "", "training"]], "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "forward"], [78, 4, 1, "", "training"]], "hippynn.layers.physics": [[79, 2, 1, "", "AlphaScreening"], [79, 2, 1, "", "CoulombEnergy"], [79, 2, 1, "", "Dipole"], [79, 2, 1, "", "EwaldRealSpaceScreening"], [79, 2, 1, "", "Gradient"], [79, 2, 1, "", "LocalDampingCosine"], [79, 2, 1, "", "PerAtom"], [79, 2, 1, "", "QScreening"], [79, 2, 1, "", "Quadrupole"], [79, 2, 1, "", "ScreenedCoulombEnergy"], [79, 2, 1, "", "StressForce"], [79, 2, 1, "", "VecMag"], [79, 2, 1, "", "WolfScreening"]], "hippynn.layers.physics.AlphaScreening": [[79, 3, 1, "", "__init__"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.CoulombEnergy": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.Dipole": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.EwaldRealSpaceScreening": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.Gradient": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.LocalDampingCosine": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.PerAtom": [[79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.QScreening": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 5, 1, "", "p_value"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.Quadrupole": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.ScreenedCoulombEnergy": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.StressForce": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.VecMag": [[79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.physics.WolfScreening": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "forward"], [79, 4, 1, "", "training"]], "hippynn.layers.regularization": [[80, 2, 1, "", "LPReg"]], "hippynn.layers.regularization.LPReg": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "forward"], [80, 4, 1, "", "training"]], "hippynn.layers.targets": [[81, 2, 1, "", "HBondSymmetric"], [81, 2, 1, "", "HCharge"], [81, 2, 1, "", "HEnergy"], [81, 2, 1, "", "LocalChargeEnergy"], [81, 2, 1, "", "LocalEnergy"]], "hippynn.layers.targets.HBondSymmetric": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "forward"], [81, 4, 1, "", "training"]], "hippynn.layers.targets.HCharge": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "forward"], [81, 4, 1, "", "training"]], "hippynn.layers.targets.HEnergy": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "forward"], [81, 4, 1, "", "training"]], "hippynn.layers.targets.LocalChargeEnergy": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "forward"], [81, 4, 1, "", "training"]], "hippynn.layers.targets.LocalEnergy": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "forward"], [81, 4, 1, "", "training"]], "hippynn.layers.transform": [[82, 2, 1, "", "ResNetWrapper"]], "hippynn.layers.transform.ResNetWrapper": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "forward"], [82, 3, 1, "", "regularization_params"], [82, 4, 1, "", "training"]], "hippynn.networks": [[84, 0, 0, "-", "hipnn"]], "hippynn.networks.hipnn": [[84, 2, 1, "", "Hipnn"], [84, 2, 1, "", "HipnnQuad"], [84, 2, 1, "", "HipnnVec"], [84, 1, 1, "", "compute_hipnn_e0"]], "hippynn.networks.hipnn.Hipnn": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "forward"], [84, 5, 1, "", "interaction_layers"], [84, 3, 1, "", "regularization_params"], [84, 5, 1, "", "sensitivity_layers"], [84, 4, 1, "", "training"]], "hippynn.networks.hipnn.HipnnQuad": [[84, 4, 1, "", "resnet"], [84, 4, 1, "", "training"]], "hippynn.networks.hipnn.HipnnVec": [[84, 3, 1, "", "forward"], [84, 4, 1, "", "resnet"], [84, 4, 1, "", "training"]], "hippynn.plotting": [[86, 0, 0, "-", "plotmaker"], [87, 0, 0, "-", "plotters"], [88, 0, 0, "-", "timeplots"]], "hippynn.plotting.plotmaker": [[86, 2, 1, "", "PlotMaker"]], "hippynn.plotting.plotmaker.PlotMaker": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "assemble_module"], [86, 3, 1, "", "make_full_location"], [86, 3, 1, "", "make_plots"], [86, 3, 1, "", "plot_phase"], [86, 5, 1, "", "required_nodes"]], "hippynn.plotting.plotters": [[87, 2, 1, "", "ComposedPlotter"], [87, 2, 1, "", "HierarchicalityPlot"], [87, 2, 1, "", "Hist1D"], [87, 2, 1, "", "Hist1DComp"], [87, 2, 1, "", "Hist2D"], [87, 2, 1, "", "InteractionPlot"], [87, 2, 1, "", "Plotter"], [87, 2, 1, "", "SensitivityPlot"], [87, 1, 1, "", "as_numpy"]], "hippynn.plotting.plotters.ComposedPlotter": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.HierarchicalityPlot": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.Hist1D": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.Hist1DComp": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.Hist2D": [[87, 3, 1, "", "__init__"], [87, 5, 1, "", "norm"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.InteractionPlot": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.Plotter": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "make_plot"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.plotters.SensitivityPlot": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "plt_fn"]], "hippynn.plotting.timeplots": [[88, 1, 1, "", "plot_all_over_time"], [88, 1, 1, "", "plot_over_time"]], "hippynn.pretraining": [[89, 1, 1, "", "calculate_min_dists"], [89, 1, 1, "", "set_e0_values"]], "hippynn.tools": [[90, 1, 1, "", "active_directory"], [90, 1, 1, "", "arrdict_len"], [90, 1, 1, "", "device_fallback"], [90, 1, 1, "", "isiterable"], [90, 1, 1, "", "log_terminal"], [90, 1, 1, "", "np_of_torchdefaultdtype"], [90, 1, 1, "", "pad_np_array_to_length_with_zeros"], [90, 1, 1, "", "param_print"], [90, 1, 1, "", "print_lr"], [90, 1, 1, "", "progress_bar"], [90, 2, 1, "", "teed_file_output"]], "hippynn.tools.teed_file_output": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "flush"], [90, 3, 1, "", "write"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"hippynn": [0, 91, 102, 106, 109, 112, 113], "packag": [0, 1, 11, 17, 25, 28, 32, 36, 37, 54, 55, 58, 60, 68, 69, 73, 83, 85], "custom_kernel": 1, "autograd_wrapp": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90], "env_cupi": 3, "env_numba": 4, "env_pytorch": 5, "fast_convert": 6, "tensor_wrapp": 7, "test_env_cupi": 8, "test_env_numba": 9, "util": 10, "databas": [11, 13, 108], "snapjson": 12, "h5_pyanitool": 14, "ondisk": 15, "restart": [16, 101], "experi": [17, 106, 109], "assembli": 18, "control": [19, 93], "devic": [20, 101], "evalu": 21, "metric_track": 22, "routin": 23, "serial": 24, "graph": [25, 27, 106, 109, 111], "gop": 26, "indextransform": 28, "atom": 29, "pair": [30, 48, 73, 98], "tensor": 31, "indextyp": 32, "reduce_func": 33, "registri": 34, "type_def": 35, "node": [36, 106, 107], "base": [37, 39], "algebra": [38, 70], "definition_help": 40, "multi": 41, "node_funct": 42, "index": [43, 72, 76], "input": 44, "loss": [45, 111], "misc": 46, "network": [47, 83, 106], "physic": [49, 79], "tag": 50, "target": [51, 81], "predictor": [52, 100], "viz": 53, "interfac": [54, 97, 109], "ase_interfac": 55, "calcul": [56, 92], "pairfind": 57, "lammps_interfac": 58, "mliap_interfac": 59, "pyseqm_interfac": 60, "callback": 61, "check": 62, "gen_par": 63, "mlseqm": 64, "seqm_modul": 65, "seqm_nod": 66, "seqm_on": 67, "schnetpack_interfac": 68, "layer": [69, 106, 109], "hiplay": 71, "analysi": 74, "dispatch": 75, "open": 77, "period": [78, 98], "regular": 80, "transform": 82, "hipnn": 84, "plot": [85, 99, 109], "plotmak": 86, "plotter": 87, "timeplot": 88, "pretrain": 89, "tool": 90, "ASE": 92, "forc": 94, "train": [94, 101, 109], "exampl": 95, "minim": 96, "workflow": 96, "lammp": 97, "boundari": 98, "condit": 98, "dynam": 98, "finder": 98, "cach": 98, "pre": 98, "comput": 98, "what": [98, 102], "": [98, 102], "yet": 98, "support": 98, "simpl": [101, 109], "cross": 101, "advanc": 101, "detail": 101, "welcom": 102, "document": 102, "i": 102, "content": [102, 110], "indic": 102, "tabl": 102, "instal": 103, "requir": 103, "instruct": 103, "depend": 103, "us": 103, "conda": 103, "pip": 103, "note": 103, "licens": 104, "custom": [105, 107, 109], "kernel": [105, 109], "concept": 106, "creat": 107, "type": 107, "The": 107, "veri": 107, "basic": 107, "A": 107, "multinod": 107, "parent": 107, "expans": 107, "ad": 107, "constraint": 107, "possibl": 107, "featur": 109, "modular": 109, "set": [109, 112], "pytorch": 109, "atomist": 109, "oper": 109, "level": 109, "api": 109, "flexibl": 109, "construct": 109, "model": [109, 111], "from": 109, "compon": 109, "track": 109, "your": 109, "fast": 109, "execut": 109, "user": 110, "guid": 110, "librari": 112, "summari": 112, "unit": 113}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"hippynn package": [[0, "hippynn-package"]], "custom_kernels package": [[1, "custom-kernels-package"]], "autograd_wrapper module": [[2, "autograd-wrapper-module"]], "env_cupy module": [[3, "env-cupy-module"]], "env_numba module": [[4, "env-numba-module"]], "env_pytorch module": [[5, "env-pytorch-module"]], "fast_convert module": [[6, "fast-convert-module"]], "tensor_wrapper module": [[7, "tensor-wrapper-module"]], "test_env_cupy module": [[8, "test-env-cupy-module"]], "test_env_numba module": [[9, "test-env-numba-module"]], "utils module": [[10, "utils-module"]], "databases package": [[11, "databases-package"]], "SNAPJson module": [[12, "snapjson-module"]], "database module": [[13, "database-module"]], "h5_pyanitools module": [[14, "h5-pyanitools-module"]], "ondisk module": [[15, "ondisk-module"]], "restarter module": [[16, "restarter-module"]], "experiment package": [[17, "experiment-package"]], "assembly module": [[18, "assembly-module"]], "controllers module": [[19, "controllers-module"]], "device module": [[20, "device-module"]], "evaluator module": [[21, "evaluator-module"]], "metric_tracker module": [[22, "metric-tracker-module"]], "routines module": [[23, "routines-module"]], "serialization module": [[24, "serialization-module"]], "graphs package": [[25, "graphs-package"]], "gops module": [[26, "gops-module"]], "graph module": [[27, "graph-module"]], "indextransformers package": [[28, "indextransformers-package"]], "atoms module": [[29, "atoms-module"]], "pairs module": [[30, "pairs-module"], [48, "pairs-module"]], "tensors module": [[31, "tensors-module"]], "indextypes package": [[32, "indextypes-package"]], "reduce_funcs module": [[33, "reduce-funcs-module"]], "registry module": [[34, "registry-module"]], "type_def module": [[35, "type-def-module"]], "nodes package": [[36, "nodes-package"]], "base package": [[37, "base-package"]], "algebra module": [[38, "algebra-module"], [70, "algebra-module"]], "base module": [[39, "base-module"]], "definition_helpers module": [[40, "definition-helpers-module"]], "multi module": [[41, "multi-module"]], "node_functions module": [[42, "node-functions-module"]], "indexers module": [[43, "indexers-module"], [72, "indexers-module"]], "inputs module": [[44, "inputs-module"]], "loss module": [[45, "loss-module"]], "misc module": [[46, "misc-module"]], "networks module": [[47, "networks-module"]], "physics module": [[49, "physics-module"], [79, "physics-module"]], "tags module": [[50, "tags-module"]], "targets module": [[51, "targets-module"], [81, "targets-module"]], "predictor module": [[52, "predictor-module"]], "viz module": [[53, "viz-module"]], "interfaces package": [[54, "interfaces-package"]], "ase_interface package": [[55, "ase-interface-package"]], "calculator module": [[56, "calculator-module"]], "pairfinder module": [[57, "pairfinder-module"]], "lammps_interface package": [[58, "lammps-interface-package"]], "mliap_interface module": [[59, "mliap-interface-module"]], "pyseqm_interface package": [[60, "pyseqm-interface-package"]], "callback module": [[61, "callback-module"]], "check module": [[62, "check-module"]], "gen_par module": [[63, "gen-par-module"]], "mlseqm module": [[64, "mlseqm-module"]], "seqm_modules module": [[65, "seqm-modules-module"]], "seqm_nodes module": [[66, "seqm-nodes-module"]], "seqm_one module": [[67, "seqm-one-module"]], "schnetpack_interface package": [[68, "schnetpack-interface-package"]], "layers package": [[69, "layers-package"]], "hiplayers module": [[71, "hiplayers-module"]], "pairs package": [[73, "pairs-package"]], "analysis module": [[74, "analysis-module"]], "dispatch module": [[75, "dispatch-module"]], "indexing module": [[76, "indexing-module"]], "open module": [[77, "open-module"]], "periodic module": [[78, "periodic-module"]], "regularization module": [[80, "regularization-module"]], "transform module": [[82, "transform-module"]], "networks package": [[83, "networks-package"]], "hipnn module": [[84, "hipnn-module"]], "plotting package": [[85, "plotting-package"]], "plotmaker module": [[86, "plotmaker-module"]], "plotters module": [[87, "plotters-module"]], "timeplots module": [[88, "timeplots-module"]], "pretraining module": [[89, "pretraining-module"]], "tools module": [[90, "tools-module"]], "hippynn": [[91, "hippynn"]], "ASE Calculators": [[92, "ase-calculators"]], "Controller": [[93, "controller"]], "Force Training": [[94, "force-training"]], "Examples": [[95, "examples"]], "Minimal Workflow": [[96, "minimal-workflow"]], "LAMMPS interface": [[97, "lammps-interface"]], "Periodic Boundary Conditions": [[98, "periodic-boundary-conditions"]], "Dynamic Pair Finder": [[98, "dynamic-pair-finder"]], "Caching Pre-computed Pairs": [[98, "caching-pre-computed-pairs"]], "What\u2019s not yet supported": [[98, "what-s-not-yet-supported"]], "Plotting": [[99, "plotting"]], "Predictor": [[100, "predictor"]], "Restarting training": [[101, "restarting-training"]], "Simple restart": [[101, "simple-restart"]], "Cross-device restart": [[101, "cross-device-restart"]], "Advanced Details": [[101, "advanced-details"]], "Welcome to hippynn\u2019s documentation!": [[102, "welcome-to-hippynn-s-documentation"]], "What is hippynn?": [[102, "what-is-hippynn"]], "Contents:": [[102, null], [110, null]], "Indices and tables": [[102, "indices-and-tables"]], "Installation": [[103, "installation"]], "Requirements": [[103, "requirements"]], "Installation Instructions": [[103, "installation-instructions"]], "Dependencies using conda": [[103, "dependencies-using-conda"]], "Dependencies using pip": [[103, "dependencies-using-pip"]], "Notes": [[103, "notes"]], "License": [[104, "license"]], "Custom Kernels": [[105, "custom-kernels"]], "hippynn Concepts": [[106, "hippynn-concepts"]], "Layers/Networks": [[106, "layers-networks"]], "Nodes": [[106, "nodes"]], "Graphs": [[106, "graphs"]], "Experiment": [[106, "experiment"]], "Creating Custom Node Types": [[107, "creating-custom-node-types"]], "The very basics": [[107, "the-very-basics"]], "A MultiNode": [[107, "a-multinode"]], "Parent expansion": [[107, "parent-expansion"]], "Adding constraints to possible parents": [[107, "adding-constraints-to-possible-parents"]], "Databases": [[108, "databases"]], "hippynn Features": [[109, "hippynn-features"]], "Modular set of pytorch layers for atomistic operations": [[109, "modular-set-of-pytorch-layers-for-atomistic-operations"]], "Graph level API for simple and flexible construction of models from pytorch components.": [[109, "graph-level-api-for-simple-and-flexible-construction-of-models-from-pytorch-components"]], "Plot level API for tracking your training.": [[109, "plot-level-api-for-tracking-your-training"]], "Training & Experiment API": [[109, "training-experiment-api"]], "Custom Kernels for fast execution": [[109, "custom-kernels-for-fast-execution"]], "Interfaces": [[109, "interfaces"]], "User Guide": [[110, "user-guide"]], "Model and Loss Graphs": [[111, "model-and-loss-graphs"]], "Library Settings": [[112, "library-settings"]], "Hippynn Settings Summary": [[112, "id1"]], "Units in hippynn": [[113, "units-in-hippynn"]]}, "indexentries": {"hippynn": [[0, "module-hippynn"]], "module": [[0, "module-hippynn"], [1, "module-hippynn.custom_kernels"], [2, "module-hippynn.custom_kernels.autograd_wrapper"], [3, "module-hippynn.custom_kernels.env_cupy"], [4, "module-hippynn.custom_kernels.env_numba"], [5, "module-hippynn.custom_kernels.env_pytorch"], [6, "module-hippynn.custom_kernels.fast_convert"], [7, "module-hippynn.custom_kernels.tensor_wrapper"], [8, "module-hippynn.custom_kernels.test_env_cupy"], [9, "module-hippynn.custom_kernels.test_env_numba"], [10, "module-hippynn.custom_kernels.utils"], [11, "module-hippynn.databases"], [12, "module-hippynn.databases.SNAPJson"], [13, "module-hippynn.databases.database"], [14, "module-hippynn.databases.h5_pyanitools"], [15, "module-hippynn.databases.ondisk"], [16, "module-hippynn.databases.restarter"], [17, "module-hippynn.experiment"], [18, "module-hippynn.experiment.assembly"], [19, "module-hippynn.experiment.controllers"], [20, "module-hippynn.experiment.device"], [21, "module-hippynn.experiment.evaluator"], [22, "module-hippynn.experiment.metric_tracker"], [23, "module-hippynn.experiment.routines"], [24, "module-hippynn.experiment.serialization"], [25, "module-hippynn.graphs"], [26, "module-hippynn.graphs.gops"], [27, "module-hippynn.graphs.graph"], [28, "module-hippynn.graphs.indextransformers"], [29, "module-hippynn.graphs.indextransformers.atoms"], [30, "module-hippynn.graphs.indextransformers.pairs"], [31, "module-hippynn.graphs.indextransformers.tensors"], [32, "module-hippynn.graphs.indextypes"], [33, "module-hippynn.graphs.indextypes.reduce_funcs"], [34, "module-hippynn.graphs.indextypes.registry"], [35, "module-hippynn.graphs.indextypes.type_def"], [36, "module-hippynn.graphs.nodes"], [37, "module-hippynn.graphs.nodes.base"], [38, "module-hippynn.graphs.nodes.base.algebra"], [39, "module-hippynn.graphs.nodes.base.base"], [40, "module-hippynn.graphs.nodes.base.definition_helpers"], [41, "module-hippynn.graphs.nodes.base.multi"], [42, "module-hippynn.graphs.nodes.base.node_functions"], [43, "module-hippynn.graphs.nodes.indexers"], [44, "module-hippynn.graphs.nodes.inputs"], [45, "module-hippynn.graphs.nodes.loss"], [46, "module-hippynn.graphs.nodes.misc"], [47, "module-hippynn.graphs.nodes.networks"], [48, "module-hippynn.graphs.nodes.pairs"], [49, "module-hippynn.graphs.nodes.physics"], [50, "module-hippynn.graphs.nodes.tags"], [51, "module-hippynn.graphs.nodes.targets"], [52, "module-hippynn.graphs.predictor"], [53, "module-hippynn.graphs.viz"], [54, "module-hippynn.interfaces"], [55, "module-hippynn.interfaces.ase_interface"], [56, "module-hippynn.interfaces.ase_interface.calculator"], [57, "module-hippynn.interfaces.ase_interface.pairfinder"], [58, "module-hippynn.interfaces.lammps_interface"], [59, "module-hippynn.interfaces.lammps_interface.mliap_interface"], [60, "module-hippynn.interfaces.pyseqm_interface"], [61, "module-hippynn.interfaces.pyseqm_interface.callback"], [62, "module-hippynn.interfaces.pyseqm_interface.check"], [63, "module-hippynn.interfaces.pyseqm_interface.gen_par"], [64, "module-hippynn.interfaces.pyseqm_interface.mlseqm"], [65, "module-hippynn.interfaces.pyseqm_interface.seqm_modules"], [66, "module-hippynn.interfaces.pyseqm_interface.seqm_nodes"], [67, "module-hippynn.interfaces.pyseqm_interface.seqm_one"], [68, "module-hippynn.interfaces.schnetpack_interface"], [69, "module-hippynn.layers"], [70, "module-hippynn.layers.algebra"], [71, "module-hippynn.layers.hiplayers"], [72, "module-hippynn.layers.indexers"], [73, "module-hippynn.layers.pairs"], [74, "module-hippynn.layers.pairs.analysis"], [75, "module-hippynn.layers.pairs.dispatch"], [76, "module-hippynn.layers.pairs.indexing"], [77, "module-hippynn.layers.pairs.open"], [78, "module-hippynn.layers.pairs.periodic"], [79, "module-hippynn.layers.physics"], [80, "module-hippynn.layers.regularization"], [81, "module-hippynn.layers.targets"], [82, "module-hippynn.layers.transform"], [83, "module-hippynn.networks"], [84, "module-hippynn.networks.hipnn"], [85, "module-hippynn.plotting"], [86, "module-hippynn.plotting.plotmaker"], [87, "module-hippynn.plotting.plotters"], [88, "module-hippynn.plotting.timeplots"], [89, "module-hippynn.pretraining"], [90, "module-hippynn.tools"]], "envsum() (in module hippynn.custom_kernels)": [[1, "hippynn.custom_kernels.envsum"]], "featsum() (in module hippynn.custom_kernels)": [[1, "hippynn.custom_kernels.featsum"]], "hippynn.custom_kernels": [[1, "module-hippynn.custom_kernels"]], "sensesum() (in module hippynn.custom_kernels)": [[1, "hippynn.custom_kernels.sensesum"]], "set_custom_kernels() (in module hippynn.custom_kernels)": [[1, "hippynn.custom_kernels.set_custom_kernels"]], "hippynn.custom_kernels.autograd_wrapper": [[2, "module-hippynn.custom_kernels.autograd_wrapper"]], "wrap_envops() (in module hippynn.custom_kernels.autograd_wrapper)": [[2, "hippynn.custom_kernels.autograd_wrapper.wrap_envops"]], "cupyenvsum (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupyEnvsum"]], "cupyfeatsum (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupyFeatsum"]], "cupygpukernel (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupyGPUKernel"]], "cupysensesum (class in hippynn.custom_kernels.env_cupy)": [[3, "hippynn.custom_kernels.env_cupy.CupySensesum"]], "__init__() (cupygpukernel method)": [[3, "hippynn.custom_kernels.env_cupy.CupyGPUKernel.__init__"]], "hippynn.custom_kernels.env_cupy": [[3, "module-hippynn.custom_kernels.env_cupy"]], "wrappedenvsum (class in hippynn.custom_kernels.env_numba)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum"]], "wrappedfeatsum (class in hippynn.custom_kernels.env_numba)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum"]], "wrappedsensesum (class in hippynn.custom_kernels.env_numba)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum"]], "cpu_kernel (wrappedenvsum attribute)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.cpu_kernel"]], "cpu_kernel (wrappedfeatsum attribute)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.cpu_kernel"]], "cpu_kernel (wrappedsensesum attribute)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.cpu_kernel"]], "hippynn.custom_kernels.env_numba": [[4, "module-hippynn.custom_kernels.env_numba"]], "launch_bounds() (wrappedenvsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.launch_bounds"]], "launch_bounds() (wrappedfeatsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.launch_bounds"]], "launch_bounds() (wrappedsensesum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.launch_bounds"]], "make_kernel() (wrappedenvsum static method)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.make_kernel"]], "make_kernel() (wrappedfeatsum static method)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.make_kernel"]], "make_kernel() (wrappedsensesum static method)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.make_kernel"]], "out_shape() (wrappedenvsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedEnvsum.out_shape"]], "out_shape() (wrappedfeatsum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedFeatsum.out_shape"]], "out_shape() (wrappedsensesum method)": [[4, "hippynn.custom_kernels.env_numba.WrappedSensesum.out_shape"]], "envsum() (in module hippynn.custom_kernels.env_pytorch)": [[5, "hippynn.custom_kernels.env_pytorch.envsum"]], "featsum() (in module hippynn.custom_kernels.env_pytorch)": [[5, "hippynn.custom_kernels.env_pytorch.featsum"]], "hippynn.custom_kernels.env_pytorch": [[5, "module-hippynn.custom_kernels.env_pytorch"]], "sensesum() (in module hippynn.custom_kernels.env_pytorch)": [[5, "hippynn.custom_kernels.env_pytorch.sensesum"]], "batch_convert_torch_to_numba() (in module hippynn.custom_kernels.fast_convert)": [[6, "hippynn.custom_kernels.fast_convert.batch_convert_torch_to_numba"]], "hippynn.custom_kernels.fast_convert": [[6, "module-hippynn.custom_kernels.fast_convert"]], "numbacompatibletensorfunction (class in hippynn.custom_kernels.tensor_wrapper)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction"]], "__init__() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.__init__"]], "cpu_kernel() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.cpu_kernel"]], "hippynn.custom_kernels.tensor_wrapper": [[7, "module-hippynn.custom_kernels.tensor_wrapper"]], "launch_bounds() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.launch_bounds"]], "make_kernel() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.make_kernel"]], "out_shape() (numbacompatibletensorfunction method)": [[7, "hippynn.custom_kernels.tensor_wrapper.NumbaCompatibleTensorFunction.out_shape"]], "via_numpy() (in module hippynn.custom_kernels.tensor_wrapper)": [[7, "hippynn.custom_kernels.tensor_wrapper.via_numpy"]], "hippynn.custom_kernels.test_env_cupy": [[8, "module-hippynn.custom_kernels.test_env_cupy"]], "envops_tester (class in hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester"]], "timedsnippet (class in hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.TimedSnippet"]], "timerholder (class in hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder"]], "__init__() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.__init__"]], "__init__() (timedsnippet method)": [[9, "hippynn.custom_kernels.test_env_numba.TimedSnippet.__init__"]], "__init__() (timerholder method)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.__init__"]], "add() (timerholder method)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.add"]], "all_close_witherror() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.all_close_witherror"]], "check_all_grad() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_all_grad"]], "check_all_grad_once() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_all_grad_once"]], "check_allclose() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_allclose"]], "check_allclose_once() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_allclose_once"]], "check_correctness() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_correctness"]], "check_empty() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_empty"]], "check_grad_and_gradgrad() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_grad_and_gradgrad"]], "check_speed() (envops_tester method)": [[9, "hippynn.custom_kernels.test_env_numba.Envops_tester.check_speed"]], "elapsed (timedsnippet property)": [[9, "hippynn.custom_kernels.test_env_numba.TimedSnippet.elapsed"]], "elapsed (timerholder property)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.elapsed"]], "get_simulated_data() (in module hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.get_simulated_data"]], "hippynn.custom_kernels.test_env_numba": [[9, "module-hippynn.custom_kernels.test_env_numba"]], "main() (in module hippynn.custom_kernels.test_env_numba)": [[9, "hippynn.custom_kernels.test_env_numba.main"]], "mean_elapsed (timerholder property)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.mean_elapsed"]], "median_elapsed (timerholder property)": [[9, "hippynn.custom_kernels.test_env_numba.TimerHolder.median_elapsed"]], "hippynn.custom_kernels.utils": [[10, "module-hippynn.custom_kernels.utils"]], "resort_pairs_cached() (in module hippynn.custom_kernels.utils)": [[10, "hippynn.custom_kernels.utils.resort_pairs_cached"]], "database (class in hippynn.databases)": [[11, "hippynn.databases.Database"]], "directorydatabase (class in hippynn.databases)": [[11, "hippynn.databases.DirectoryDatabase"]], "npzdatabase (class in hippynn.databases)": [[11, "hippynn.databases.NPZDatabase"]], "__init__() (database method)": [[11, "hippynn.databases.Database.__init__"], [13, "hippynn.databases.database.Database.__init__"]], "__init__() (directorydatabase method)": [[11, "hippynn.databases.DirectoryDatabase.__init__"], [15, "hippynn.databases.ondisk.DirectoryDatabase.__init__"]], "__init__() (npzdatabase method)": [[11, "hippynn.databases.NPZDatabase.__init__"], [15, "hippynn.databases.ondisk.NPZDatabase.__init__"]], "get_file_dict() (directorydatabase method)": [[11, "hippynn.databases.DirectoryDatabase.get_file_dict"], [15, "hippynn.databases.ondisk.DirectoryDatabase.get_file_dict"]], "hippynn.databases": [[11, "module-hippynn.databases"]], "load_arrays() (directorydatabase method)": [[11, "hippynn.databases.DirectoryDatabase.load_arrays"], [15, "hippynn.databases.ondisk.DirectoryDatabase.load_arrays"]], "load_arrays() (npzdatabase method)": [[11, "hippynn.databases.NPZDatabase.load_arrays"], [15, "hippynn.databases.ondisk.NPZDatabase.load_arrays"]], "make_explicit_split() (database method)": [[11, "hippynn.databases.Database.make_explicit_split"], [13, "hippynn.databases.database.Database.make_explicit_split"]], "make_generator() (database method)": [[11, "hippynn.databases.Database.make_generator"], [13, "hippynn.databases.database.Database.make_generator"]], "make_random_split() (database method)": [[11, "hippynn.databases.Database.make_random_split"], [13, "hippynn.databases.database.Database.make_random_split"]], "make_trainvalidtest_split() (database method)": [[11, "hippynn.databases.Database.make_trainvalidtest_split"], [13, "hippynn.databases.database.Database.make_trainvalidtest_split"]], "send_to_device() (database method)": [[11, "hippynn.databases.Database.send_to_device"], [13, "hippynn.databases.database.Database.send_to_device"]], "split_the_rest() (database method)": [[11, "hippynn.databases.Database.split_the_rest"], [13, "hippynn.databases.database.Database.split_the_rest"]], "var_list (database property)": [[11, "hippynn.databases.Database.var_list"], [13, "hippynn.databases.database.Database.var_list"]], "snapdirectorydatabase (class in hippynn.databases.snapjson)": [[12, "hippynn.databases.SNAPJson.SNAPDirectoryDatabase"]], "__init__() (snapdirectorydatabase method)": [[12, "hippynn.databases.SNAPJson.SNAPDirectoryDatabase.__init__"]], "extract_snap_file() (snapdirectorydatabase method)": [[12, "hippynn.databases.SNAPJson.SNAPDirectoryDatabase.extract_snap_file"]], "filter_arrays() (snapdirectorydatabase method)": [[12, "hippynn.databases.SNAPJson.SNAPDirectoryDatabase.filter_arrays"]], "hippynn.databases.snapjson": [[12, "module-hippynn.databases.SNAPJson"]], "load_arrays() (snapdirectorydatabase method)": [[12, "hippynn.databases.SNAPJson.SNAPDirectoryDatabase.load_arrays"]], "process_configs() (snapdirectorydatabase method)": [[12, "hippynn.databases.SNAPJson.SNAPDirectoryDatabase.process_configs"]], "database (class in hippynn.databases.database)": [[13, "hippynn.databases.database.Database"]], "namedtensordataset (class in hippynn.databases.database)": [[13, "hippynn.databases.database.NamedTensorDataset"]], "__init__() (namedtensordataset method)": [[13, "hippynn.databases.database.NamedTensorDataset.__init__"]], "compute_index_mask() (in module hippynn.databases.database)": [[13, "hippynn.databases.database.compute_index_mask"]], "hippynn.databases.database": [[13, "module-hippynn.databases.database"]], "prettyprint_arrays() (in module hippynn.databases.database)": [[13, "hippynn.databases.database.prettyprint_arrays"]], "tensors (namedtensordataset attribute)": [[13, "hippynn.databases.database.NamedTensorDataset.tensors"]], "pyanidirectorydb (class in hippynn.databases.h5_pyanitools)": [[14, "hippynn.databases.h5_pyanitools.PyAniDirectoryDB"]], "pyanifiledb (class in hippynn.databases.h5_pyanitools)": [[14, "hippynn.databases.h5_pyanitools.PyAniFileDB"]], "pyanimethods (class in hippynn.databases.h5_pyanitools)": [[14, "hippynn.databases.h5_pyanitools.PyAniMethods"]], "__init__() (pyanidirectorydb method)": [[14, "hippynn.databases.h5_pyanitools.PyAniDirectoryDB.__init__"]], "__init__() (pyanifiledb method)": [[14, "hippynn.databases.h5_pyanitools.PyAniFileDB.__init__"]], "determine_key_structure() (pyanimethods method)": [[14, "hippynn.databases.h5_pyanitools.PyAniMethods.determine_key_structure"]], "extract_full_file() (pyanimethods method)": [[14, "hippynn.databases.h5_pyanitools.PyAniMethods.extract_full_file"]], "filter_arrays() (pyanimethods method)": [[14, "hippynn.databases.h5_pyanitools.PyAniMethods.filter_arrays"]], "hippynn.databases.h5_pyanitools": [[14, "module-hippynn.databases.h5_pyanitools"]], "load_arrays() (pyanidirectorydb method)": [[14, "hippynn.databases.h5_pyanitools.PyAniDirectoryDB.load_arrays"]], "load_arrays() (pyanifiledb method)": [[14, "hippynn.databases.h5_pyanitools.PyAniFileDB.load_arrays"]], "process_batches() (pyanimethods method)": [[14, "hippynn.databases.h5_pyanitools.PyAniMethods.process_batches"]], "directorydatabase (class in hippynn.databases.ondisk)": [[15, "hippynn.databases.ondisk.DirectoryDatabase"]], "npzdatabase (class in hippynn.databases.ondisk)": [[15, "hippynn.databases.ondisk.NPZDatabase"]], "hippynn.databases.ondisk": [[15, "module-hippynn.databases.ondisk"]], "norestart (class in hippynn.databases.restarter)": [[16, "hippynn.databases.restarter.NoRestart"]], "restartdb (class in hippynn.databases.restarter)": [[16, "hippynn.databases.restarter.RestartDB"]], "restartable (class in hippynn.databases.restarter)": [[16, "hippynn.databases.restarter.Restartable"]], "restarter (class in hippynn.databases.restarter)": [[16, "hippynn.databases.restarter.Restarter"]], "__init__() (restartdb method)": [[16, "hippynn.databases.restarter.RestartDB.__init__"]], "attempt_reload() (norestart method)": [[16, "hippynn.databases.restarter.NoRestart.attempt_reload"]], "attempt_reload() (restartdb method)": [[16, "hippynn.databases.restarter.RestartDB.attempt_reload"]], "attempt_reload() (restarter method)": [[16, "hippynn.databases.restarter.Restarter.attempt_reload"]], "hippynn.databases.restarter": [[16, "module-hippynn.databases.restarter"]], "make_restarter() (restartable class method)": [[16, "hippynn.databases.restarter.Restartable.make_restarter"]], "setupparams (class in hippynn.experiment)": [[17, "hippynn.experiment.SetupParams"]], "__init__() (setupparams method)": [[17, "hippynn.experiment.SetupParams.__init__"], [23, "hippynn.experiment.routines.SetupParams.__init__"]], "assemble_for_training() (in module hippynn.experiment)": [[17, "hippynn.experiment.assemble_for_training"]], "batch_size (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.batch_size"], [23, "hippynn.experiment.routines.SetupParams.batch_size"]], "controller (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.controller"], [23, "hippynn.experiment.routines.SetupParams.controller"]], "device (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.device"], [23, "hippynn.experiment.routines.SetupParams.device"]], "eval_batch_size (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.eval_batch_size"], [23, "hippynn.experiment.routines.SetupParams.eval_batch_size"]], "fraction_train_eval (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.fraction_train_eval"], [23, "hippynn.experiment.routines.SetupParams.fraction_train_eval"]], "hippynn.experiment": [[17, "module-hippynn.experiment"]], "learning_rate (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.learning_rate"], [23, "hippynn.experiment.routines.SetupParams.learning_rate"]], "max_epochs (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.max_epochs"], [23, "hippynn.experiment.routines.SetupParams.max_epochs"]], "optimizer (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.optimizer"], [23, "hippynn.experiment.routines.SetupParams.optimizer"]], "scheduler (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.scheduler"], [23, "hippynn.experiment.routines.SetupParams.scheduler"]], "setup_and_train() (in module hippynn.experiment)": [[17, "hippynn.experiment.setup_and_train"]], "setup_training() (in module hippynn.experiment)": [[17, "hippynn.experiment.setup_training"]], "stopping_key (setupparams attribute)": [[17, "hippynn.experiment.SetupParams.stopping_key"], [23, "hippynn.experiment.routines.SetupParams.stopping_key"]], "test_model() (in module hippynn.experiment)": [[17, "hippynn.experiment.test_model"]], "train_model() (in module hippynn.experiment)": [[17, "hippynn.experiment.train_model"]], "trainingmodules (class in hippynn.experiment.assembly)": [[18, "hippynn.experiment.assembly.TrainingModules"]], "assemble_for_training() (in module hippynn.experiment.assembly)": [[18, "hippynn.experiment.assembly.assemble_for_training"]], "build_loss_modules() (in module hippynn.experiment.assembly)": [[18, "hippynn.experiment.assembly.build_loss_modules"]], "determine_out_in_targ() (in module hippynn.experiment.assembly)": [[18, "hippynn.experiment.assembly.determine_out_in_targ"]], "evaluator (trainingmodules attribute)": [[18, "hippynn.experiment.assembly.TrainingModules.evaluator"]], "gemerate_database_info() (in module hippynn.experiment.assembly)": [[18, "hippynn.experiment.assembly.gemerate_database_info"]], "hippynn.experiment.assembly": [[18, "module-hippynn.experiment.assembly"]], "loss (trainingmodules attribute)": [[18, "hippynn.experiment.assembly.TrainingModules.loss"]], "model (trainingmodules attribute)": [[18, "hippynn.experiment.assembly.TrainingModules.model"]], "precompute_pairs() (in module hippynn.experiment.assembly)": [[18, "hippynn.experiment.assembly.precompute_pairs"]], "controller (class in hippynn.experiment.controllers)": [[19, "hippynn.experiment.controllers.Controller"]], "patiencecontroller (class in hippynn.experiment.controllers)": [[19, "hippynn.experiment.controllers.PatienceController"]], "raisebatchsizeonplateau (class in hippynn.experiment.controllers)": [[19, "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau"]], "__init__() (controller method)": [[19, "hippynn.experiment.controllers.Controller.__init__"]], "__init__() (patiencecontroller method)": [[19, "hippynn.experiment.controllers.PatienceController.__init__"]], "__init__() (raisebatchsizeonplateau method)": [[19, "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau.__init__"]], "hippynn.experiment.controllers": [[19, "module-hippynn.experiment.controllers"]], "is_scheduler_like() (in module hippynn.experiment.controllers)": [[19, "hippynn.experiment.controllers.is_scheduler_like"]], "load_state_dict() (controller method)": [[19, "hippynn.experiment.controllers.Controller.load_state_dict"]], "load_state_dict() (raisebatchsizeonplateau method)": [[19, "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau.load_state_dict"]], "max_epochs (controller property)": [[19, "hippynn.experiment.controllers.Controller.max_epochs"]], "max_epochs (patiencecontroller property)": [[19, "hippynn.experiment.controllers.PatienceController.max_epochs"]], "push_epoch() (controller method)": [[19, "hippynn.experiment.controllers.Controller.push_epoch"]], "push_epoch() (patiencecontroller method)": [[19, "hippynn.experiment.controllers.PatienceController.push_epoch"]], "set_controller() (raisebatchsizeonplateau method)": [[19, "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau.set_controller"]], "state_dict() (controller method)": [[19, "hippynn.experiment.controllers.Controller.state_dict"]], "state_dict() (raisebatchsizeonplateau method)": [[19, "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau.state_dict"]], "step() (raisebatchsizeonplateau method)": [[19, "hippynn.experiment.controllers.RaiseBatchSizeOnPlateau.step"]], "hippynn.experiment.device": [[20, "module-hippynn.experiment.device"]], "set_devices() (in module hippynn.experiment.device)": [[20, "hippynn.experiment.device.set_devices"]], "evaluator (class in hippynn.experiment.evaluator)": [[21, "hippynn.experiment.evaluator.Evaluator"]], "__init__() (evaluator method)": [[21, "hippynn.experiment.evaluator.Evaluator.__init__"]], "evaluate() (evaluator method)": [[21, "hippynn.experiment.evaluator.Evaluator.evaluate"]], "hippynn.experiment.evaluator": [[21, "module-hippynn.experiment.evaluator"]], "var_list (evaluator property)": [[21, "hippynn.experiment.evaluator.Evaluator.var_list"]], "metrictracker (class in hippynn.experiment.metric_tracker)": [[22, "hippynn.experiment.metric_tracker.MetricTracker"]], "__init__() (metrictracker method)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.__init__"]], "current_epoch (metrictracker property)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.current_epoch"]], "evaluation_print() (metrictracker method)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.evaluation_print"]], "evaluation_print_better() (metrictracker method)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.evaluation_print_better"]], "from_evaluator() (metrictracker class method)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.from_evaluator"]], "hippynn.experiment.metric_tracker": [[22, "module-hippynn.experiment.metric_tracker"]], "plot_over_time() (metrictracker method)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.plot_over_time"]], "register_metrics() (metrictracker method)": [[22, "hippynn.experiment.metric_tracker.MetricTracker.register_metrics"]], "table_evaluation_print() (in module hippynn.experiment.metric_tracker)": [[22, "hippynn.experiment.metric_tracker.table_evaluation_print"]], "table_evaluation_print_better() (in module hippynn.experiment.metric_tracker)": [[22, "hippynn.experiment.metric_tracker.table_evaluation_print_better"]], "setupparams (class in hippynn.experiment.routines)": [[23, "hippynn.experiment.routines.SetupParams"]], "hippynn.experiment.routines": [[23, "module-hippynn.experiment.routines"]], "setup_and_train() (in module hippynn.experiment.routines)": [[23, "hippynn.experiment.routines.setup_and_train"]], "setup_training() (in module hippynn.experiment.routines)": [[23, "hippynn.experiment.routines.setup_training"]], "test_model() (in module hippynn.experiment.routines)": [[23, "hippynn.experiment.routines.test_model"]], "train_model() (in module hippynn.experiment.routines)": [[23, "hippynn.experiment.routines.train_model"]], "training_loop() (in module hippynn.experiment.routines)": [[23, "hippynn.experiment.routines.training_loop"]], "check_mapping_devices() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.check_mapping_devices"]], "create_state() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.create_state"]], "create_structure_file() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.create_structure_file"]], "hippynn.experiment.serialization": [[24, "module-hippynn.experiment.serialization"]], "load_checkpoint() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.load_checkpoint"]], "load_checkpoint_from_cwd() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.load_checkpoint_from_cwd"]], "load_model_from_cwd() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.load_model_from_cwd"]], "load_saved_tensors() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.load_saved_tensors"]], "restore_checkpoint() (in module hippynn.experiment.serialization)": [[24, "hippynn.experiment.serialization.restore_checkpoint"]], "atoms (idxtype attribute)": [[25, "hippynn.graphs.IdxType.Atoms"], [32, "hippynn.graphs.indextypes.IdxType.Atoms"], [35, "hippynn.graphs.indextypes.type_def.IdxType.Atoms"]], "graphmodule (class in hippynn.graphs)": [[25, "hippynn.graphs.GraphModule"]], "idxtype (class in hippynn.graphs)": [[25, "hippynn.graphs.IdxType"]], "molatom (idxtype attribute)": [[25, "hippynn.graphs.IdxType.MolAtom"], [32, "hippynn.graphs.indextypes.IdxType.MolAtom"], [35, "hippynn.graphs.indextypes.type_def.IdxType.MolAtom"]], "molatomatom (idxtype attribute)": [[25, "hippynn.graphs.IdxType.MolAtomAtom"], [32, "hippynn.graphs.indextypes.IdxType.MolAtomAtom"], [35, "hippynn.graphs.indextypes.type_def.IdxType.MolAtomAtom"]], "molecules (idxtype attribute)": [[25, "hippynn.graphs.IdxType.Molecules"], [32, "hippynn.graphs.indextypes.IdxType.Molecules"], [35, "hippynn.graphs.indextypes.type_def.IdxType.Molecules"]], "notfound (idxtype attribute)": [[25, "hippynn.graphs.IdxType.NotFound"], [32, "hippynn.graphs.indextypes.IdxType.NotFound"], [35, "hippynn.graphs.indextypes.type_def.IdxType.NotFound"]], "pair (idxtype attribute)": [[25, "hippynn.graphs.IdxType.Pair"], [32, "hippynn.graphs.indextypes.IdxType.Pair"], [35, "hippynn.graphs.indextypes.type_def.IdxType.Pair"]], "predictor (class in hippynn.graphs)": [[25, "hippynn.graphs.Predictor"]], "quadmol (idxtype attribute)": [[25, "hippynn.graphs.IdxType.QuadMol"], [32, "hippynn.graphs.indextypes.IdxType.QuadMol"], [35, "hippynn.graphs.indextypes.type_def.IdxType.QuadMol"]], "quadpack (idxtype attribute)": [[25, "hippynn.graphs.IdxType.QuadPack"], [32, "hippynn.graphs.indextypes.IdxType.QuadPack"], [35, "hippynn.graphs.indextypes.type_def.IdxType.QuadPack"]], "scalar (idxtype attribute)": [[25, "hippynn.graphs.IdxType.Scalar"], [32, "hippynn.graphs.indextypes.IdxType.Scalar"], [35, "hippynn.graphs.indextypes.type_def.IdxType.Scalar"]], "__init__() (graphmodule method)": [[25, "hippynn.graphs.GraphModule.__init__"], [27, "hippynn.graphs.graph.GraphModule.__init__"]], "__init__() (predictor method)": [[25, "hippynn.graphs.Predictor.__init__"], [52, "hippynn.graphs.predictor.Predictor.__init__"]], "add_output() (predictor method)": [[25, "hippynn.graphs.Predictor.add_output"], [52, "hippynn.graphs.predictor.Predictor.add_output"]], "apply_to_database() (predictor method)": [[25, "hippynn.graphs.Predictor.apply_to_database"], [52, "hippynn.graphs.predictor.Predictor.apply_to_database"]], "compute_evaluation_order() (in module hippynn.graphs)": [[25, "hippynn.graphs.compute_evaluation_order"]], "copy_subgraph() (in module hippynn.graphs)": [[25, "hippynn.graphs.copy_subgraph"]], "extra_repr() (graphmodule method)": [[25, "hippynn.graphs.GraphModule.extra_repr"], [27, "hippynn.graphs.graph.GraphModule.extra_repr"]], "find_relatives() (in module hippynn.graphs)": [[25, "hippynn.graphs.find_relatives"]], "find_unique_relative() (in module hippynn.graphs)": [[25, "hippynn.graphs.find_unique_relative"]], "forward() (graphmodule method)": [[25, "hippynn.graphs.GraphModule.forward"], [27, "hippynn.graphs.graph.GraphModule.forward"]], "from_graph() (predictor class method)": [[25, "hippynn.graphs.Predictor.from_graph"], [52, "hippynn.graphs.predictor.Predictor.from_graph"]], "get_connected_nodes() (in module hippynn.graphs)": [[25, "hippynn.graphs.get_connected_nodes"]], "get_module() (graphmodule method)": [[25, "hippynn.graphs.GraphModule.get_module"], [27, "hippynn.graphs.graph.GraphModule.get_module"]], "get_subgraph() (in module hippynn.graphs)": [[25, "hippynn.graphs.get_subgraph"]], "hippynn.graphs": [[25, "module-hippynn.graphs"]], "inputs (predictor property)": [[25, "hippynn.graphs.Predictor.inputs"], [52, "hippynn.graphs.predictor.Predictor.inputs"]], "model_device (predictor property)": [[25, "hippynn.graphs.Predictor.model_device"], [52, "hippynn.graphs.predictor.Predictor.model_device"]], "node_from_name() (graphmodule method)": [[25, "hippynn.graphs.GraphModule.node_from_name"], [27, "hippynn.graphs.graph.GraphModule.node_from_name"]], "outputs (predictor property)": [[25, "hippynn.graphs.Predictor.outputs"], [52, "hippynn.graphs.predictor.Predictor.outputs"]], "predict_all() (predictor method)": [[25, "hippynn.graphs.Predictor.predict_all"], [52, "hippynn.graphs.predictor.Predictor.predict_all"]], "predict_batched() (predictor method)": [[25, "hippynn.graphs.Predictor.predict_batched"], [52, "hippynn.graphs.predictor.Predictor.predict_batched"]], "print_structure() (graphmodule method)": [[25, "hippynn.graphs.GraphModule.print_structure"], [27, "hippynn.graphs.graph.GraphModule.print_structure"]], "replace_node() (in module hippynn.graphs)": [[25, "hippynn.graphs.replace_node"]], "to() (predictor method)": [[25, "hippynn.graphs.Predictor.to"], [52, "hippynn.graphs.predictor.Predictor.to"]], "training (graphmodule attribute)": [[25, "hippynn.graphs.GraphModule.training"], [27, "hippynn.graphs.graph.GraphModule.training"]], "wrap_outputs() (predictor method)": [[25, "hippynn.graphs.Predictor.wrap_outputs"], [52, "hippynn.graphs.predictor.Predictor.wrap_outputs"]], "graphinconsistency": [[26, "hippynn.graphs.gops.GraphInconsistency"]], "check_evaluation_order() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.check_evaluation_order"]], "check_link_consistency() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.check_link_consistency"]], "compute_evaluation_order() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.compute_evaluation_order"]], "copy_subgraph() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.copy_subgraph"]], "get_subgraph() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.get_subgraph"]], "hippynn.graphs.gops": [[26, "module-hippynn.graphs.gops"]], "replace_node() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.replace_node"]], "replace_node_with_constant() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.replace_node_with_constant"]], "search_by_name() (in module hippynn.graphs.gops)": [[26, "hippynn.graphs.gops.search_by_name"]], "graphmodule (class in hippynn.graphs.graph)": [[27, "hippynn.graphs.graph.GraphModule"]], "hippynn.graphs.graph": [[27, "module-hippynn.graphs.graph"]], "hippynn.graphs.indextransformers": [[28, "module-hippynn.graphs.indextransformers"]], "hippynn.graphs.indextransformers.atoms": [[29, "module-hippynn.graphs.indextransformers.atoms"]], "idx_atom_molatom() (in module hippynn.graphs.indextransformers.atoms)": [[29, "hippynn.graphs.indextransformers.atoms.idx_atom_molatom"]], "idx_molatom_atom() (in module hippynn.graphs.indextransformers.atoms)": [[29, "hippynn.graphs.indextransformers.atoms.idx_molatom_atom"]], "hippynn.graphs.indextransformers.pairs": [[30, "module-hippynn.graphs.indextransformers.pairs"]], "idx_molatomatom_pair() (in module hippynn.graphs.indextransformers.pairs)": [[30, "hippynn.graphs.indextransformers.pairs.idx_molatomatom_pair"]], "idx_pair_molatomatom() (in module hippynn.graphs.indextransformers.pairs)": [[30, "hippynn.graphs.indextransformers.pairs.idx_pair_molatomatom"]], "hippynn.graphs.indextransformers.tensors": [[31, "module-hippynn.graphs.indextransformers.tensors"]], "idx_quadtrimol() (in module hippynn.graphs.indextransformers.tensors)": [[31, "hippynn.graphs.indextransformers.tensors.idx_QuadTriMol"]], "idxtype (class in hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.IdxType"]], "clear_index_cache() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.clear_index_cache"]], "db_form() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.db_form"]], "elementwise_compare_reduce() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.elementwise_compare_reduce"]], "get_reduced_index_state() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.get_reduced_index_state"]], "hippynn.graphs.indextypes": [[32, "module-hippynn.graphs.indextypes"]], "index_type_coercion() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.index_type_coercion"]], "register_index_transformer() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.register_index_transformer"]], "soft_index_type_coercion() (in module hippynn.graphs.indextypes)": [[32, "hippynn.graphs.indextypes.soft_index_type_coercion"]], "db_form() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.db_form"]], "db_state_of() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.db_state_of"]], "dispatch_indexing() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.dispatch_indexing"]], "elementwise_compare_reduce() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.elementwise_compare_reduce"]], "get_reduced_index_state() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.get_reduced_index_state"]], "hippynn.graphs.indextypes.reduce_funcs": [[33, "module-hippynn.graphs.indextypes.reduce_funcs"]], "index_type_coercion() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.index_type_coercion"]], "soft_index_type_coercion() (in module hippynn.graphs.indextypes.reduce_funcs)": [[33, "hippynn.graphs.indextypes.reduce_funcs.soft_index_type_coercion"]], "clear_index_cache() (in module hippynn.graphs.indextypes.registry)": [[34, "hippynn.graphs.indextypes.registry.clear_index_cache"]], "hippynn.graphs.indextypes.registry": [[34, "module-hippynn.graphs.indextypes.registry"]], "register_index_transformer() (in module hippynn.graphs.indextypes.registry)": [[34, "hippynn.graphs.indextypes.registry.register_index_transformer"]], "idxtype (class in hippynn.graphs.indextypes.type_def)": [[35, "hippynn.graphs.indextypes.type_def.IdxType"]], "hippynn.graphs.indextypes.type_def": [[35, "module-hippynn.graphs.indextypes.type_def"]], "hippynn.graphs.nodes": [[36, "module-hippynn.graphs.nodes"]], "hippynn.graphs.nodes.base": [[37, "module-hippynn.graphs.nodes.base"]], "addnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.AddNode"]], "atleast2d (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.AtLeast2D"]], "binnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.BinNode"]], "divnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.DivNode"]], "invnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.InvNode"]], "mulnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.MulNode"]], "negnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.NegNode"]], "pownode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.PowNode"]], "subnode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.SubNode"]], "unarynode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.UnaryNode"]], "valuenode (class in hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.ValueNode"]], "__init__() (atleast2d method)": [[38, "hippynn.graphs.nodes.base.algebra.AtLeast2D.__init__"]], "__init__() (binnode method)": [[38, "hippynn.graphs.nodes.base.algebra.BinNode.__init__"]], "__init__() (unarynode method)": [[38, "hippynn.graphs.nodes.base.algebra.UnaryNode.__init__"]], "__init__() (valuenode method)": [[38, "hippynn.graphs.nodes.base.algebra.ValueNode.__init__"]], "auto_module() (valuenode method)": [[38, "hippynn.graphs.nodes.base.algebra.ValueNode.auto_module"]], "coerces_values_to_nodes() (in module hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.coerces_values_to_nodes"]], "hippynn.graphs.nodes.base.algebra": [[38, "module-hippynn.graphs.nodes.base.algebra"]], "torch_module (addnode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.AddNode.torch_module"]], "torch_module (atleast2d attribute)": [[38, "hippynn.graphs.nodes.base.algebra.AtLeast2D.torch_module"]], "torch_module (divnode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.DivNode.torch_module"]], "torch_module (invnode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.InvNode.torch_module"]], "torch_module (mulnode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.MulNode.torch_module"]], "torch_module (negnode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.NegNode.torch_module"]], "torch_module (pownode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.PowNode.torch_module"]], "torch_module (subnode attribute)": [[38, "hippynn.graphs.nodes.base.algebra.SubNode.torch_module"]], "wrap_as_node() (in module hippynn.graphs.nodes.base.algebra)": [[38, "hippynn.graphs.nodes.base.algebra.wrap_as_node"]], "inputnode (class in hippynn.graphs.nodes.base.base)": [[39, "hippynn.graphs.nodes.base.base.InputNode"]], "lossinputnode (class in hippynn.graphs.nodes.base.base)": [[39, "hippynn.graphs.nodes.base.base.LossInputNode"]], "lossprednode (class in hippynn.graphs.nodes.base.base)": [[39, "hippynn.graphs.nodes.base.base.LossPredNode"]], "losstruenode (class in hippynn.graphs.nodes.base.base)": [[39, "hippynn.graphs.nodes.base.base.LossTrueNode"]], "node (class in hippynn.graphs.nodes.base.base)": [[39, "hippynn.graphs.nodes.base.base.Node"]], "singlenode (class in hippynn.graphs.nodes.base.base)": [[39, "hippynn.graphs.nodes.base.base.SingleNode"]], "__init__() (inputnode method)": [[39, "hippynn.graphs.nodes.base.base.InputNode.__init__"]], "__init__() (lossinputnode method)": [[39, "hippynn.graphs.nodes.base.base.LossInputNode.__init__"]], "__init__() (lossprednode method)": [[39, "hippynn.graphs.nodes.base.base.LossPredNode.__init__"]], "__init__() (losstruenode method)": [[39, "hippynn.graphs.nodes.base.base.LossTrueNode.__init__"]], "hippynn.graphs.nodes.base.base": [[39, "module-hippynn.graphs.nodes.base.base"]], "input_type_str (inputnode attribute)": [[39, "hippynn.graphs.nodes.base.base.InputNode.input_type_str"]], "main_output (losstruenode property)": [[39, "hippynn.graphs.nodes.base.base.LossTrueNode.main_output"]], "pred (lossinputnode property)": [[39, "hippynn.graphs.nodes.base.base.LossInputNode.pred"]], "requires_grad (inputnode attribute)": [[39, "hippynn.graphs.nodes.base.base.InputNode.requires_grad"]], "true (lossinputnode property)": [[39, "hippynn.graphs.nodes.base.base.LossInputNode.true"]], "alwaysmatch (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.AlwaysMatch"]], "autokw (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.AutoKw"]], "autonokw (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.AutoNoKw"]], "expandparentmeta (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ExpandParentMeta"]], "expandparents (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ExpandParents"]], "formassertlength (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength"]], "formassertion (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormAssertion"]], "formhandler (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormHandler"]], "formtransformer (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormTransformer"]], "indexformtransformer (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer"]], "mainoutputtransformer (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer"]], "parentexpander (class in hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander"]], "tupletypemismatch": [[40, "hippynn.graphs.nodes.base.definition_helpers.TupleTypeMismatch"]], "__init__() (formassertlength method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength.__init__"]], "__init__() (formassertion method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormAssertion.__init__"]], "__init__() (formtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormTransformer.__init__"]], "__init__() (indexformtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer.__init__"]], "__init__() (mainoutputtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer.__init__"]], "__init__() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.__init__"]], "add_class_doc() (formassertlength method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormAssertLength.add_class_doc"]], "add_class_doc() (formassertion method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormAssertion.add_class_doc"]], "add_class_doc() (formhandler method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormHandler.add_class_doc"]], "add_class_doc() (formtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.FormTransformer.add_class_doc"]], "add_class_doc() (indexformtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer.add_class_doc"]], "add_class_doc() (mainoutputtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer.add_class_doc"]], "adds_to_forms() (in module hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.adds_to_forms"]], "assertion() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.assertion"]], "assertlen() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.assertlen"]], "auto_module() (autokw method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.AutoKw.auto_module"]], "auto_module() (autonokw method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.AutoNoKw.auto_module"]], "expand_parents() (expandparents method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ExpandParents.expand_parents"]], "fn() (indexformtransformer method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.IndexFormTransformer.fn"]], "fn() (mainoutputtransformer static method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.MainOutputTransformer.fn"]], "format_form_name() (in module hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.format_form_name"]], "get_main_outputs() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.get_main_outputs"]], "hippynn.graphs.nodes.base.definition_helpers": [[40, "module-hippynn.graphs.nodes.base.definition_helpers"]], "match() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.match"]], "matched_idx_coercion() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.matched_idx_coercion"]], "matchlen() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.matchlen"]], "require_idx_states() (parentexpander method)": [[40, "hippynn.graphs.nodes.base.definition_helpers.ParentExpander.require_idx_states"]], "temporary_parents() (in module hippynn.graphs.nodes.base.definition_helpers)": [[40, "hippynn.graphs.nodes.base.definition_helpers.temporary_parents"]], "indexnode (class in hippynn.graphs.nodes.base.multi)": [[41, "hippynn.graphs.nodes.base.multi.IndexNode"]], "multinode (class in hippynn.graphs.nodes.base.multi)": [[41, "hippynn.graphs.nodes.base.multi.MultiNode"]], "__init__() (indexnode method)": [[41, "hippynn.graphs.nodes.base.multi.IndexNode.__init__"]], "__init__() (multinode method)": [[41, "hippynn.graphs.nodes.base.multi.MultiNode.__init__"]], "hippynn.graphs.nodes.base.multi": [[41, "module-hippynn.graphs.nodes.base.multi"]], "main_output (multinode property)": [[41, "hippynn.graphs.nodes.base.multi.MultiNode.main_output"]], "set_dbname() (multinode method)": [[41, "hippynn.graphs.nodes.base.multi.MultiNode.set_dbname"]], "nodeambiguityerror": [[42, "hippynn.graphs.nodes.base.node_functions.NodeAmbiguityError"]], "nodenotfound": [[42, "hippynn.graphs.nodes.base.node_functions.NodeNotFound"]], "nodeoperationerror": [[42, "hippynn.graphs.nodes.base.node_functions.NodeOperationError"]], "find_relatives() (in module hippynn.graphs.nodes.base.node_functions)": [[42, "hippynn.graphs.nodes.base.node_functions.find_relatives"]], "find_unique_relative() (in module hippynn.graphs.nodes.base.node_functions)": [[42, "hippynn.graphs.nodes.base.node_functions.find_unique_relative"]], "get_connected_nodes() (in module hippynn.graphs.nodes.base.node_functions)": [[42, "hippynn.graphs.nodes.base.node_functions.get_connected_nodes"]], "hippynn.graphs.nodes.base.node_functions": [[42, "module-hippynn.graphs.nodes.base.node_functions"]], "atomdeindexer (class in hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.AtomDeIndexer"]], "atomreindexer (class in hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.AtomReIndexer"]], "filterbondsoneway (class in hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.FilterBondsOneway"]], "onehotencoder (class in hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.OneHotEncoder"]], "paddingindexer (class in hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.PaddingIndexer"]], "quadunpacknode (class in hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.QuadUnpackNode"]], "__init__() (atomdeindexer method)": [[43, "hippynn.graphs.nodes.indexers.AtomDeIndexer.__init__"]], "__init__() (atomreindexer method)": [[43, "hippynn.graphs.nodes.indexers.AtomReIndexer.__init__"]], "__init__() (filterbondsoneway method)": [[43, "hippynn.graphs.nodes.indexers.FilterBondsOneway.__init__"]], "__init__() (onehotencoder method)": [[43, "hippynn.graphs.nodes.indexers.OneHotEncoder.__init__"]], "__init__() (paddingindexer method)": [[43, "hippynn.graphs.nodes.indexers.PaddingIndexer.__init__"]], "__init__() (quadunpacknode method)": [[43, "hippynn.graphs.nodes.indexers.QuadUnpackNode.__init__"]], "acquire_encoding_padding() (in module hippynn.graphs.nodes.indexers)": [[43, "hippynn.graphs.nodes.indexers.acquire_encoding_padding"]], "auto_module() (onehotencoder method)": [[43, "hippynn.graphs.nodes.indexers.OneHotEncoder.auto_module"]], "expand0() (atomdeindexer method)": [[43, "hippynn.graphs.nodes.indexers.AtomDeIndexer.expand0"]], "expand0() (atomreindexer method)": [[43, "hippynn.graphs.nodes.indexers.AtomReIndexer.expand0"]], "expand0() (paddingindexer method)": [[43, "hippynn.graphs.nodes.indexers.PaddingIndexer.expand0"]], "expand1() (atomreindexer method)": [[43, "hippynn.graphs.nodes.indexers.AtomReIndexer.expand1"]], "hippynn.graphs.nodes.indexers": [[43, "module-hippynn.graphs.nodes.indexers"]], "cellnode (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.CellNode"]], "indices (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.Indices"]], "inputcharges (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.InputCharges"]], "pairindices (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.PairIndices"]], "positionsnode (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.PositionsNode"]], "speciesnode (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.SpeciesNode"]], "splitindices (class in hippynn.graphs.nodes.inputs)": [[44, "hippynn.graphs.nodes.inputs.SplitIndices"]], "__init__() (indices method)": [[44, "hippynn.graphs.nodes.inputs.Indices.__init__"]], "__init__() (splitindices method)": [[44, "hippynn.graphs.nodes.inputs.SplitIndices.__init__"]], "hippynn.graphs.nodes.inputs": [[44, "module-hippynn.graphs.nodes.inputs"]], "input_type_str (cellnode attribute)": [[44, "hippynn.graphs.nodes.inputs.CellNode.input_type_str"]], "input_type_str (indices attribute)": [[44, "hippynn.graphs.nodes.inputs.Indices.input_type_str"]], "input_type_str (inputcharges attribute)": [[44, "hippynn.graphs.nodes.inputs.InputCharges.input_type_str"]], "input_type_str (pairindices attribute)": [[44, "hippynn.graphs.nodes.inputs.PairIndices.input_type_str"]], "input_type_str (positionsnode attribute)": [[44, "hippynn.graphs.nodes.inputs.PositionsNode.input_type_str"]], "input_type_str (speciesnode attribute)": [[44, "hippynn.graphs.nodes.inputs.SpeciesNode.input_type_str"]], "input_type_str (splitindices attribute)": [[44, "hippynn.graphs.nodes.inputs.SplitIndices.input_type_str"]], "maeloss (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.MAELoss"]], "mseloss (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.MSELoss"]], "mean (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.Mean"]], "meansq (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.MeanSq"]], "reducesinglenode (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.ReduceSingleNode"]], "rsq (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.Rsq"]], "rsqmod (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.RsqMod"]], "std (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.Std"]], "var (class in hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.Var"]], "__init__() (reducesinglenode method)": [[45, "hippynn.graphs.nodes.loss.ReduceSingleNode.__init__"]], "forward() (rsqmod method)": [[45, "hippynn.graphs.nodes.loss.RsqMod.forward"]], "hippynn.graphs.nodes.loss": [[45, "module-hippynn.graphs.nodes.loss"]], "l1reg() (in module hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.l1reg"]], "l2reg() (in module hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.l2reg"]], "lpreg() (in module hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.lpreg"]], "mean_sq() (in module hippynn.graphs.nodes.loss)": [[45, "hippynn.graphs.nodes.loss.mean_sq"]], "of_node() (reducesinglenode class method)": [[45, "hippynn.graphs.nodes.loss.ReduceSingleNode.of_node"]], "torch_module (maeloss attribute)": [[45, "hippynn.graphs.nodes.loss.MAELoss.torch_module"]], "torch_module (mseloss attribute)": [[45, "hippynn.graphs.nodes.loss.MSELoss.torch_module"]], "torch_module (mean attribute)": [[45, "hippynn.graphs.nodes.loss.Mean.torch_module"]], "torch_module (meansq attribute)": [[45, "hippynn.graphs.nodes.loss.MeanSq.torch_module"]], "torch_module (rsq attribute)": [[45, "hippynn.graphs.nodes.loss.Rsq.torch_module"]], "torch_module (std attribute)": [[45, "hippynn.graphs.nodes.loss.Std.torch_module"]], "torch_module (var attribute)": [[45, "hippynn.graphs.nodes.loss.Var.torch_module"]], "training (rsqmod attribute)": [[45, "hippynn.graphs.nodes.loss.RsqMod.training"]], "listnode (class in hippynn.graphs.nodes.misc)": [[46, "hippynn.graphs.nodes.misc.ListNode"]], "straininducer (class in hippynn.graphs.nodes.misc)": [[46, "hippynn.graphs.nodes.misc.StrainInducer"]], "__init__() (listnode method)": [[46, "hippynn.graphs.nodes.misc.ListNode.__init__"]], "__init__() (straininducer method)": [[46, "hippynn.graphs.nodes.misc.StrainInducer.__init__"]], "hippynn.graphs.nodes.misc": [[46, "module-hippynn.graphs.nodes.misc"]], "defaultnetworkexpansion (class in hippynn.graphs.nodes.networks)": [[47, "hippynn.graphs.nodes.networks.DefaultNetworkExpansion"]], "hipnn (class in hippynn.graphs.nodes.networks)": [[47, "hippynn.graphs.nodes.networks.Hipnn"]], "hipnnquad (class in hippynn.graphs.nodes.networks)": [[47, "hippynn.graphs.nodes.networks.HipnnQuad"]], "hipnnvec (class in hippynn.graphs.nodes.networks)": [[47, "hippynn.graphs.nodes.networks.HipnnVec"]], "__init__() (hipnn method)": [[47, "hippynn.graphs.nodes.networks.Hipnn.__init__"], [84, "hippynn.networks.hipnn.Hipnn.__init__"]], "__init__() (hipnnvec method)": [[47, "hippynn.graphs.nodes.networks.HipnnVec.__init__"]], "expansion0() (defaultnetworkexpansion method)": [[47, "hippynn.graphs.nodes.networks.DefaultNetworkExpansion.expansion0"]], "expansion1() (defaultnetworkexpansion method)": [[47, "hippynn.graphs.nodes.networks.DefaultNetworkExpansion.expansion1"]], "expansion2() (hipnn method)": [[47, "hippynn.graphs.nodes.networks.Hipnn.expansion2"]], "expansion2() (hipnnvec method)": [[47, "hippynn.graphs.nodes.networks.HipnnVec.expansion2"]], "hippynn.graphs.nodes.networks": [[47, "module-hippynn.graphs.nodes.networks"]], "dynamicperiodicpairs (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.DynamicPeriodicPairs"]], "externalneighborindexer (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.ExternalNeighborIndexer"]], "mindistnode (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.MinDistNode"]], "numpydynamicpairs (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.NumpyDynamicPairs"]], "openpairindexer (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.OpenPairIndexer"]], "paddedneighbornode (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PaddedNeighborNode"]], "paircacher (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PairCacher"]], "pairdeindexer (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PairDeIndexer"]], "pairreindexer (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PairReIndexer"]], "pairuncacher (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PairUncacher"]], "periodicpairindexer (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer"]], "periodicpairoutputs (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.PeriodicPairOutputs"]], "rdfbins (class in hippynn.graphs.nodes.pairs)": [[48, "hippynn.graphs.nodes.pairs.RDFBins"]], "__init__() (externalneighborindexer method)": [[48, "hippynn.graphs.nodes.pairs.ExternalNeighborIndexer.__init__"]], "__init__() (mindistnode method)": [[48, "hippynn.graphs.nodes.pairs.MinDistNode.__init__"]], "__init__() (openpairindexer method)": [[48, "hippynn.graphs.nodes.pairs.OpenPairIndexer.__init__"]], "__init__() (paddedneighbornode method)": [[48, "hippynn.graphs.nodes.pairs.PaddedNeighborNode.__init__"]], "__init__() (paircacher method)": [[48, "hippynn.graphs.nodes.pairs.PairCacher.__init__"], [76, "hippynn.layers.pairs.indexing.PairCacher.__init__"]], "__init__() (pairdeindexer method)": [[48, "hippynn.graphs.nodes.pairs.PairDeIndexer.__init__"]], "__init__() (pairreindexer method)": [[48, "hippynn.graphs.nodes.pairs.PairReIndexer.__init__"]], "__init__() (pairuncacher method)": [[48, "hippynn.graphs.nodes.pairs.PairUncacher.__init__"], [76, "hippynn.layers.pairs.indexing.PairUncacher.__init__"]], "__init__() (periodicpairindexer method)": [[48, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer.__init__"]], "__init__() (rdfbins method)": [[48, "hippynn.graphs.nodes.pairs.RDFBins.__init__"], [74, "hippynn.layers.pairs.analysis.RDFBins.__init__"]], "auto_module() (openpairindexer method)": [[48, "hippynn.graphs.nodes.pairs.OpenPairIndexer.auto_module"]], "expand0() (mindistnode method)": [[48, "hippynn.graphs.nodes.pairs.MinDistNode.expand0"]], "expand0() (openpairindexer method)": [[48, "hippynn.graphs.nodes.pairs.OpenPairIndexer.expand0"]], "expand0() (paddedneighbornode method)": [[48, "hippynn.graphs.nodes.pairs.PaddedNeighborNode.expand0"]], "expand0() (paircacher method)": [[48, "hippynn.graphs.nodes.pairs.PairCacher.expand0"]], "expand0() (pairdeindexer method)": [[48, "hippynn.graphs.nodes.pairs.PairDeIndexer.expand0"]], "expand0() (pairreindexer method)": [[48, "hippynn.graphs.nodes.pairs.PairReIndexer.expand0"]], "expand0() (pairuncacher method)": [[48, "hippynn.graphs.nodes.pairs.PairUncacher.expand0"]], "expand0() (periodicpairindexer method)": [[48, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer.expand0"]], "expand0() (rdfbins method)": [[48, "hippynn.graphs.nodes.pairs.RDFBins.expand0"]], "expand1() (mindistnode method)": [[48, "hippynn.graphs.nodes.pairs.MinDistNode.expand1"]], "expand1() (paircacher method)": [[48, "hippynn.graphs.nodes.pairs.PairCacher.expand1"]], "expand1() (pairdeindexer method)": [[48, "hippynn.graphs.nodes.pairs.PairDeIndexer.expand1"]], "expand1() (pairreindexer method)": [[48, "hippynn.graphs.nodes.pairs.PairReIndexer.expand1"]], "expand1() (pairuncacher method)": [[48, "hippynn.graphs.nodes.pairs.PairUncacher.expand1"]], "expand1() (periodicpairindexer method)": [[48, "hippynn.graphs.nodes.pairs.PeriodicPairIndexer.expand1"]], "expand1() (rdfbins method)": [[48, "hippynn.graphs.nodes.pairs.RDFBins.expand1"]], "expand2() (mindistnode method)": [[48, "hippynn.graphs.nodes.pairs.MinDistNode.expand2"]], "expand2() (rdfbins method)": [[48, "hippynn.graphs.nodes.pairs.RDFBins.expand2"]], "expand3() (rdfbins method)": [[48, "hippynn.graphs.nodes.pairs.RDFBins.expand3"]], "hippynn.graphs.nodes.pairs": [[48, "module-hippynn.graphs.nodes.pairs"]], "atomtomolsummer (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.AtomToMolSummer"]], "bondtomolsummmer (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.BondToMolSummmer"]], "chargemomentnode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.ChargeMomentNode"]], "chargepairsetup (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.ChargePairSetup"]], "coulombenergynode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.CoulombEnergyNode"]], "dipolenode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.DipoleNode"]], "gradientnode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.GradientNode"]], "peratom (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.PerAtom"]], "quadrupolenode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.QuadrupoleNode"]], "screenedcoulombenergynode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.ScreenedCoulombEnergyNode"]], "stressforcenode (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.StressForceNode"]], "vecmag (class in hippynn.graphs.nodes.physics)": [[49, "hippynn.graphs.nodes.physics.VecMag"]], "__init__() (atomtomolsummer method)": [[49, "hippynn.graphs.nodes.physics.AtomToMolSummer.__init__"]], "__init__() (bondtomolsummmer method)": [[49, "hippynn.graphs.nodes.physics.BondToMolSummmer.__init__"]], "__init__() (chargemomentnode method)": [[49, "hippynn.graphs.nodes.physics.ChargeMomentNode.__init__"]], "__init__() (coulombenergynode method)": [[49, "hippynn.graphs.nodes.physics.CoulombEnergyNode.__init__"]], "__init__() (gradientnode method)": [[49, "hippynn.graphs.nodes.physics.GradientNode.__init__"]], "__init__() (peratom method)": [[49, "hippynn.graphs.nodes.physics.PerAtom.__init__"]], "__init__() (screenedcoulombenergynode method)": [[49, "hippynn.graphs.nodes.physics.ScreenedCoulombEnergyNode.__init__"]], "__init__() (stressforcenode method)": [[49, "hippynn.graphs.nodes.physics.StressForceNode.__init__"]], "__init__() (vecmag method)": [[49, "hippynn.graphs.nodes.physics.VecMag.__init__"]], "expansion0() (atomtomolsummer method)": [[49, "hippynn.graphs.nodes.physics.AtomToMolSummer.expansion0"]], "expansion0() (bondtomolsummmer method)": [[49, "hippynn.graphs.nodes.physics.BondToMolSummmer.expansion0"]], "expansion0() (chargemomentnode method)": [[49, "hippynn.graphs.nodes.physics.ChargeMomentNode.expansion0"]], "expansion0() (chargepairsetup method)": [[49, "hippynn.graphs.nodes.physics.ChargePairSetup.expansion0"]], "expansion0() (peratom method)": [[49, "hippynn.graphs.nodes.physics.PerAtom.expansion0"]], "expansion1() (atomtomolsummer method)": [[49, "hippynn.graphs.nodes.physics.AtomToMolSummer.expansion1"]], "expansion1() (bondtomolsummmer method)": [[49, "hippynn.graphs.nodes.physics.BondToMolSummmer.expansion1"]], "expansion1() (chargemomentnode method)": [[49, "hippynn.graphs.nodes.physics.ChargeMomentNode.expansion1"]], "expansion1() (chargepairsetup method)": [[49, "hippynn.graphs.nodes.physics.ChargePairSetup.expansion1"]], "expansion1() (peratom method)": [[49, "hippynn.graphs.nodes.physics.PerAtom.expansion1"]], "expansion2() (bondtomolsummmer method)": [[49, "hippynn.graphs.nodes.physics.BondToMolSummmer.expansion2"]], "expansion2() (chargemomentnode method)": [[49, "hippynn.graphs.nodes.physics.ChargeMomentNode.expansion2"]], "expansion2() (chargepairsetup method)": [[49, "hippynn.graphs.nodes.physics.ChargePairSetup.expansion2"]], "expansion3() (chargepairsetup method)": [[49, "hippynn.graphs.nodes.physics.ChargePairSetup.expansion3"]], "expansion4() (chargepairsetup method)": [[49, "hippynn.graphs.nodes.physics.ChargePairSetup.expansion4"]], "hippynn.graphs.nodes.physics": [[49, "module-hippynn.graphs.nodes.physics"]], "atomindexer (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.AtomIndexer"]], "charges (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.Charges"]], "encoder (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.Encoder"]], "energies (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.Energies"]], "hatomregressor (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.HAtomRegressor"]], "network (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.Network"]], "paircache (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.PairCache"]], "pairindexer (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.PairIndexer"]], "positions (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.Positions"]], "species (class in hippynn.graphs.nodes.tags)": [[50, "hippynn.graphs.nodes.tags.Species"]], "hippynn.graphs.nodes.tags": [[50, "module-hippynn.graphs.nodes.tags"]], "species_set (encoder attribute)": [[50, "hippynn.graphs.nodes.tags.Encoder.species_set"]], "hbondnode (class in hippynn.graphs.nodes.targets)": [[51, "hippynn.graphs.nodes.targets.HBondNode"]], "hchargenode (class in hippynn.graphs.nodes.targets)": [[51, "hippynn.graphs.nodes.targets.HChargeNode"]], "henergynode (class in hippynn.graphs.nodes.targets)": [[51, "hippynn.graphs.nodes.targets.HEnergyNode"]], "localchargeenergy (class in hippynn.graphs.nodes.targets)": [[51, "hippynn.graphs.nodes.targets.LocalChargeEnergy"]], "localenergynode (class in hippynn.graphs.nodes.targets)": [[51, "hippynn.graphs.nodes.targets.LocalEnergyNode"]], "__init__() (hbondnode method)": [[51, "hippynn.graphs.nodes.targets.HBondNode.__init__"]], "__init__() (hchargenode method)": [[51, "hippynn.graphs.nodes.targets.HChargeNode.__init__"]], "__init__() (henergynode method)": [[51, "hippynn.graphs.nodes.targets.HEnergyNode.__init__"]], "__init__() (localchargeenergy method)": [[51, "hippynn.graphs.nodes.targets.LocalChargeEnergy.__init__"], [81, "hippynn.layers.targets.LocalChargeEnergy.__init__"]], "__init__() (localenergynode method)": [[51, "hippynn.graphs.nodes.targets.LocalEnergyNode.__init__"]], "auto_module() (localenergynode method)": [[51, "hippynn.graphs.nodes.targets.LocalEnergyNode.auto_module"]], "expand0() (hbondnode method)": [[51, "hippynn.graphs.nodes.targets.HBondNode.expand0"]], "expand1() (hbondnode method)": [[51, "hippynn.graphs.nodes.targets.HBondNode.expand1"]], "expansion0() (hchargenode method)": [[51, "hippynn.graphs.nodes.targets.HChargeNode.expansion0"]], "expansion0() (henergynode method)": [[51, "hippynn.graphs.nodes.targets.HEnergyNode.expansion0"]], "expansion0() (localchargeenergy method)": [[51, "hippynn.graphs.nodes.targets.LocalChargeEnergy.expansion0"]], "expansion0() (localenergynode method)": [[51, "hippynn.graphs.nodes.targets.LocalEnergyNode.expansion0"]], "expansion1() (localenergynode method)": [[51, "hippynn.graphs.nodes.targets.LocalEnergyNode.expansion1"]], "hippynn.graphs.nodes.targets": [[51, "module-hippynn.graphs.nodes.targets"]], "predictor (class in hippynn.graphs.predictor)": [[52, "hippynn.graphs.predictor.Predictor"]], "hippynn.graphs.predictor": [[52, "module-hippynn.graphs.predictor"]], "hippynn.graphs.viz": [[53, "module-hippynn.graphs.viz"]], "visualize_connected_nodes() (in module hippynn.graphs.viz)": [[53, "hippynn.graphs.viz.visualize_connected_nodes"]], "visualize_graph_module() (in module hippynn.graphs.viz)": [[53, "hippynn.graphs.viz.visualize_graph_module"]], "visualize_node_set() (in module hippynn.graphs.viz)": [[53, "hippynn.graphs.viz.visualize_node_set"]], "hippynn.interfaces": [[54, "module-hippynn.interfaces"]], "hippynncalculator (class in hippynn.interfaces.ase_interface)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator"]], "__init__() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.__init__"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.__init__"]], "calculate() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.calculate"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.calculate"]], "calculation_required() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.calculation_required"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.calculation_required"]], "calculator_from_model() (in module hippynn.interfaces.ase_interface)": [[55, "hippynn.interfaces.ase_interface.calculator_from_model"]], "get_charges() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_charges"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_charges"]], "get_dipole() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_dipole"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_dipole"]], "get_dipole_moment() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_dipole_moment"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_dipole_moment"]], "get_energies() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_energies"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_energies"]], "get_energy() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_energy"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_energy"]], "get_forces() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_forces"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_forces"]], "get_free_energy() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_free_energy"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_free_energy"]], "get_magmom() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_magmom"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_magmom"]], "get_magmoms() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_magmoms"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_magmoms"]], "get_potential_energies() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_potential_energies"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_potential_energies"]], "get_potential_energy() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_potential_energy"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_potential_energy"]], "get_property() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_property"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_property"]], "get_stress() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_stress"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_stress"]], "get_stresses() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.get_stresses"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.get_stresses"]], "hippynn.interfaces.ase_interface": [[55, "module-hippynn.interfaces.ase_interface"]], "rebuild_neighbors() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.rebuild_neighbors"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.rebuild_neighbors"]], "set_atoms() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.set_atoms"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.set_atoms"]], "to() (hippynncalculator method)": [[55, "hippynn.interfaces.ase_interface.HippynnCalculator.to"], [56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator.to"]], "hippynncalculator (class in hippynn.interfaces.ase_interface.calculator)": [[56, "hippynn.interfaces.ase_interface.calculator.HippynnCalculator"]], "pbchandle (class in hippynn.interfaces.ase_interface.calculator)": [[56, "hippynn.interfaces.ase_interface.calculator.PBCHandle"]], "__init__() (pbchandle method)": [[56, "hippynn.interfaces.ase_interface.calculator.PBCHandle.__init__"]], "calculator_from_model() (in module hippynn.interfaces.ase_interface.calculator)": [[56, "hippynn.interfaces.ase_interface.calculator.calculator_from_model"]], "hippynn.interfaces.ase_interface.calculator": [[56, "module-hippynn.interfaces.ase_interface.calculator"]], "pass_to_pytorch() (in module hippynn.interfaces.ase_interface.calculator)": [[56, "hippynn.interfaces.ase_interface.calculator.pass_to_pytorch"]], "set() (pbchandle method)": [[56, "hippynn.interfaces.ase_interface.calculator.PBCHandle.set"]], "setup_ase_graph() (in module hippynn.interfaces.ase_interface.calculator)": [[56, "hippynn.interfaces.ase_interface.calculator.setup_ASE_graph"]], "aseneighbors (class in hippynn.interfaces.ase_interface.pairfinder)": [[57, "hippynn.interfaces.ase_interface.pairfinder.ASENeighbors"]], "asepairnode (class in hippynn.interfaces.ase_interface.pairfinder)": [[57, "hippynn.interfaces.ase_interface.pairfinder.ASEPairNode"]], "ase_compute_neighbors() (in module hippynn.interfaces.ase_interface.pairfinder)": [[57, "hippynn.interfaces.ase_interface.pairfinder.ASE_compute_neighbors"]], "compute_one() (aseneighbors method)": [[57, "hippynn.interfaces.ase_interface.pairfinder.ASENeighbors.compute_one"]], "hippynn.interfaces.ase_interface.pairfinder": [[57, "module-hippynn.interfaces.ase_interface.pairfinder"]], "training (aseneighbors attribute)": [[57, "hippynn.interfaces.ase_interface.pairfinder.ASENeighbors.training"]], "hippynn.interfaces.lammps_interface": [[58, "module-hippynn.interfaces.lammps_interface"]], "localatomenergynode (class in hippynn.interfaces.lammps_interface.mliap_interface)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomEnergyNode"]], "localatomsenergy (class in hippynn.interfaces.lammps_interface.mliap_interface)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomsEnergy"]], "mliapinterface (class in hippynn.interfaces.lammps_interface.mliap_interface)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.MLIAPInterface"]], "__init__() (localatomenergynode method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomEnergyNode.__init__"]], "__init__() (localatomsenergy method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomsEnergy.__init__"]], "__init__() (mliapinterface method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.MLIAPInterface.__init__"]], "compute_descriptors() (mliapinterface method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.MLIAPInterface.compute_descriptors"]], "compute_forces() (mliapinterface method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.MLIAPInterface.compute_forces"]], "compute_gradients() (mliapinterface method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.MLIAPInterface.compute_gradients"]], "forward() (localatomsenergy method)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomsEnergy.forward"]], "hippynn.interfaces.lammps_interface.mliap_interface": [[59, "module-hippynn.interfaces.lammps_interface.mliap_interface"]], "setup_lammps_graph() (in module hippynn.interfaces.lammps_interface.mliap_interface)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.setup_LAMMPS_graph"]], "training (localatomsenergy attribute)": [[59, "hippynn.interfaces.lammps_interface.mliap_interface.LocalAtomsEnergy.training"]], "hippynn.interfaces.pyseqm_interface": [[60, "module-hippynn.interfaces.pyseqm_interface"]], "hippynn.interfaces.pyseqm_interface.callback": [[61, "module-hippynn.interfaces.pyseqm_interface.callback"]], "save_and_stop_after() (in module hippynn.interfaces.pyseqm_interface.callback)": [[61, "hippynn.interfaces.pyseqm_interface.callback.save_and_stop_after"]], "update_scf_backward_eps() (in module hippynn.interfaces.pyseqm_interface.callback)": [[61, "hippynn.interfaces.pyseqm_interface.callback.update_scf_backward_eps"]], "update_scf_eps() (in module hippynn.interfaces.pyseqm_interface.callback)": [[61, "hippynn.interfaces.pyseqm_interface.callback.update_scf_eps"]], "check() (in module hippynn.interfaces.pyseqm_interface.check)": [[62, "hippynn.interfaces.pyseqm_interface.check.check"]], "check_dist() (in module hippynn.interfaces.pyseqm_interface.check)": [[62, "hippynn.interfaces.pyseqm_interface.check.check_dist"]], "check_gradient() (in module hippynn.interfaces.pyseqm_interface.check)": [[62, "hippynn.interfaces.pyseqm_interface.check.check_gradient"]], "hippynn.interfaces.pyseqm_interface.check": [[62, "module-hippynn.interfaces.pyseqm_interface.check"]], "save() (in module hippynn.interfaces.pyseqm_interface.check)": [[62, "hippynn.interfaces.pyseqm_interface.check.save"]], "__init__() (gen_par method)": [[63, "hippynn.interfaces.pyseqm_interface.gen_par.gen_par.__init__"]], "forward() (gen_par method)": [[63, "hippynn.interfaces.pyseqm_interface.gen_par.gen_par.forward"]], "gen_par (class in hippynn.interfaces.pyseqm_interface.gen_par)": [[63, "hippynn.interfaces.pyseqm_interface.gen_par.gen_par"]], "hippynn.interfaces.pyseqm_interface.gen_par": [[63, "module-hippynn.interfaces.pyseqm_interface.gen_par"]], "training (gen_par attribute)": [[63, "hippynn.interfaces.pyseqm_interface.gen_par.gen_par.training"]], "mlseqm (class in hippynn.interfaces.pyseqm_interface.mlseqm)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM"]], "mlseqm_node (class in hippynn.interfaces.pyseqm_interface.mlseqm)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM_Node"]], "__init__() (mlseqm method)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM.__init__"]], "__init__() (mlseqm_node method)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM_Node.__init__"]], "forward() (mlseqm method)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM.forward"]], "hippynn.interfaces.pyseqm_interface.mlseqm": [[64, "module-hippynn.interfaces.pyseqm_interface.mlseqm"]], "save() (mlseqm method)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM.save"]], "training (mlseqm attribute)": [[64, "hippynn.interfaces.pyseqm_interface.mlseqm.MLSEQM.training"]], "atommask (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.AtomMask"]], "seqm_all (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_All"]], "seqm_energy (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_Energy"]], "seqm_maskonmol (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMol"]], "seqm_maskonmolatom (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolAtom"]], "seqm_maskonmolorbital (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbital"]], "seqm_maskonmolorbitalatom (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbitalAtom"]], "seqm_molmask (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MolMask"]], "seqm_orbitalmask (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_OrbitalMask"]], "scale (class in hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.Scale"]], "__init__() (atommask method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.AtomMask.__init__"]], "__init__() (seqm_all method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_All.__init__"]], "__init__() (seqm_energy method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_Energy.__init__"]], "__init__() (seqm_maskonmol method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMol.__init__"]], "__init__() (seqm_maskonmolatom method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolAtom.__init__"]], "__init__() (seqm_maskonmolorbital method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbital.__init__"]], "__init__() (seqm_maskonmolorbitalatom method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbitalAtom.__init__"]], "__init__() (seqm_molmask method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MolMask.__init__"]], "__init__() (seqm_orbitalmask method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_OrbitalMask.__init__"]], "__init__() (scale method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.Scale.__init__"]], "forward() (atommask method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.AtomMask.forward"]], "forward() (seqm_all method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_All.forward"]], "forward() (seqm_energy method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_Energy.forward"]], "forward() (seqm_maskonmol method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMol.forward"]], "forward() (seqm_maskonmolatom method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolAtom.forward"]], "forward() (seqm_maskonmolorbital method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbital.forward"]], "forward() (seqm_maskonmolorbitalatom method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbitalAtom.forward"]], "forward() (seqm_molmask method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MolMask.forward"]], "forward() (seqm_orbitalmask method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_OrbitalMask.forward"]], "forward() (scale method)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.Scale.forward"]], "hippynn.interfaces.pyseqm_interface.seqm_modules": [[65, "module-hippynn.interfaces.pyseqm_interface.seqm_modules"]], "num_orb() (in module hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.num_orb"]], "pack_par() (in module hippynn.interfaces.pyseqm_interface.seqm_modules)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.pack_par"]], "training (atommask attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.AtomMask.training"]], "training (seqm_all attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_All.training"]], "training (seqm_energy attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_Energy.training"]], "training (seqm_maskonmol attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMol.training"]], "training (seqm_maskonmolatom attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolAtom.training"]], "training (seqm_maskonmolorbital attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbital.training"]], "training (seqm_maskonmolorbitalatom attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MaskOnMolOrbitalAtom.training"]], "training (seqm_molmask attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_MolMask.training"]], "training (seqm_orbitalmask attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.SEQM_OrbitalMask.training"]], "training (scale attribute)": [[65, "hippynn.interfaces.pyseqm_interface.seqm_modules.Scale.training"]], "atommasknode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.AtomMaskNode"]], "seqm_allnode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_AllNode"]], "seqm_energynode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_EnergyNode"]], "seqm_maskonmolatomnode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolAtomNode"]], "seqm_maskonmolnode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolNode"]], "seqm_maskonmolorbitalatomnode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolOrbitalAtomNode"]], "seqm_maskonmolorbitalnode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolOrbitalNode"]], "seqm_molmasknode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MolMaskNode"]], "seqm_orbitalmasknode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_OrbitalMaskNode"]], "scalenode (class in hippynn.interfaces.pyseqm_interface.seqm_nodes)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.ScaleNode"]], "__init__() (atommasknode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.AtomMaskNode.__init__"]], "__init__() (seqm_energynode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_EnergyNode.__init__"]], "__init__() (seqm_maskonmolatomnode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolAtomNode.__init__"]], "__init__() (seqm_maskonmolnode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolNode.__init__"]], "__init__() (seqm_maskonmolorbitalatomnode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolOrbitalAtomNode.__init__"]], "__init__() (seqm_maskonmolorbitalnode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MaskOnMolOrbitalNode.__init__"]], "__init__() (seqm_molmasknode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_MolMaskNode.__init__"]], "__init__() (seqm_orbitalmasknode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_OrbitalMaskNode.__init__"]], "__init__() (scalenode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.ScaleNode.__init__"]], "expand0() (seqm_energynode method)": [[66, "hippynn.interfaces.pyseqm_interface.seqm_nodes.SEQM_EnergyNode.expand0"]], "hippynn.interfaces.pyseqm_interface.seqm_nodes": [[66, "module-hippynn.interfaces.pyseqm_interface.seqm_nodes"]], "densitymatrixnode (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.DensityMatrixNode"]], "energy_one (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.Energy_One"]], "hamiltonian_one (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.Hamiltonian_One"]], "notconvergednode (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.NotConvergedNode"]], "seqm_one_all (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_All"]], "seqm_one_allnode (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_AllNode"]], "seqm_one_energy (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_Energy"]], "seqm_one_energynode (class in hippynn.interfaces.pyseqm_interface.seqm_one)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_EnergyNode"]], "__init__() (energy_one method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.Energy_One.__init__"]], "__init__() (hamiltonian_one method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.Hamiltonian_One.__init__"]], "__init__() (seqm_one_all method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_All.__init__"]], "__init__() (seqm_one_energy method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_Energy.__init__"]], "__init__() (seqm_one_energynode method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_EnergyNode.__init__"]], "expand0() (seqm_one_energynode method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_EnergyNode.expand0"]], "forward() (hamiltonian_one method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.Hamiltonian_One.forward"]], "forward() (seqm_one_all method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_All.forward"]], "forward() (seqm_one_energy method)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_Energy.forward"]], "hippynn.interfaces.pyseqm_interface.seqm_one": [[67, "module-hippynn.interfaces.pyseqm_interface.seqm_one"]], "input_type_str (densitymatrixnode attribute)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.DensityMatrixNode.input_type_str"]], "input_type_str (notconvergednode attribute)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.NotConvergedNode.input_type_str"]], "training (seqm_one_all attribute)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_All.training"]], "training (seqm_one_energy attribute)": [[67, "hippynn.interfaces.pyseqm_interface.seqm_one.SEQM_One_Energy.training"]], "schnetnode (class in hippynn.interfaces.schnetpack_interface)": [[68, "hippynn.interfaces.schnetpack_interface.SchNetNode"]], "schnetwrapper (class in hippynn.interfaces.schnetpack_interface)": [[68, "hippynn.interfaces.schnetpack_interface.SchNetWrapper"]], "__init__() (schnetnode method)": [[68, "hippynn.interfaces.schnetpack_interface.SchNetNode.__init__"]], "__init__() (schnetwrapper method)": [[68, "hippynn.interfaces.schnetpack_interface.SchNetWrapper.__init__"]], "create_schnetpack_inputs() (in module hippynn.interfaces.schnetpack_interface)": [[68, "hippynn.interfaces.schnetpack_interface.create_schnetpack_inputs"]], "forward() (schnetwrapper method)": [[68, "hippynn.interfaces.schnetpack_interface.SchNetWrapper.forward"]], "hippynn.interfaces.schnetpack_interface": [[68, "module-hippynn.interfaces.schnetpack_interface"]], "training (schnetwrapper attribute)": [[68, "hippynn.interfaces.schnetpack_interface.SchNetWrapper.training"]], "hippynn.layers": [[69, "module-hippynn.layers"]], "atleast2d (class in hippynn.layers.algebra)": [[70, "hippynn.layers.algebra.AtLeast2D"]], "idx (class in hippynn.layers.algebra)": [[70, "hippynn.layers.algebra.Idx"]], "lambdamodule (class in hippynn.layers.algebra)": [[70, "hippynn.layers.algebra.LambdaModule"]], "listmod (class in hippynn.layers.algebra)": [[70, "hippynn.layers.algebra.ListMod"]], "valuemod (class in hippynn.layers.algebra)": [[70, "hippynn.layers.algebra.ValueMod"]], "__init__() (idx method)": [[70, "hippynn.layers.algebra.Idx.__init__"]], "__init__() (lambdamodule method)": [[70, "hippynn.layers.algebra.LambdaModule.__init__"]], "__init__() (valuemod method)": [[70, "hippynn.layers.algebra.ValueMod.__init__"]], "extra_repr() (idx method)": [[70, "hippynn.layers.algebra.Idx.extra_repr"]], "extra_repr() (lambdamodule method)": [[70, "hippynn.layers.algebra.LambdaModule.extra_repr"]], "extra_repr() (valuemod method)": [[70, "hippynn.layers.algebra.ValueMod.extra_repr"]], "forward() (atleast2d method)": [[70, "hippynn.layers.algebra.AtLeast2D.forward"]], "forward() (idx method)": [[70, "hippynn.layers.algebra.Idx.forward"]], "forward() (lambdamodule method)": [[70, "hippynn.layers.algebra.LambdaModule.forward"]], "forward() (listmod method)": [[70, "hippynn.layers.algebra.ListMod.forward"]], "forward() (valuemod method)": [[70, "hippynn.layers.algebra.ValueMod.forward"]], "hippynn.layers.algebra": [[70, "module-hippynn.layers.algebra"]], "training (atleast2d attribute)": [[70, "hippynn.layers.algebra.AtLeast2D.training"]], "training (idx attribute)": [[70, "hippynn.layers.algebra.Idx.training"]], "training (lambdamodule attribute)": [[70, "hippynn.layers.algebra.LambdaModule.training"]], "training (listmod attribute)": [[70, "hippynn.layers.algebra.ListMod.training"]], "training (valuemod attribute)": [[70, "hippynn.layers.algebra.ValueMod.training"]], "coscutoff (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.CosCutoff"]], "gaussiansensitivitymodule (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.GaussianSensitivityModule"]], "interactlayer (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.InteractLayer"]], "interactlayerquad (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.InteractLayerQuad"]], "interactlayervec (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.InteractLayerVec"]], "inversesensitivitymodule (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.InverseSensitivityModule"]], "sensitivitybottleneck (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.SensitivityBottleneck"]], "sensitivitymodule (class in hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.SensitivityModule"]], "__init__() (coscutoff method)": [[71, "hippynn.layers.hiplayers.CosCutoff.__init__"]], "__init__() (gaussiansensitivitymodule method)": [[71, "hippynn.layers.hiplayers.GaussianSensitivityModule.__init__"]], "__init__() (interactlayer method)": [[71, "hippynn.layers.hiplayers.InteractLayer.__init__"]], "__init__() (interactlayerquad method)": [[71, "hippynn.layers.hiplayers.InteractLayerQuad.__init__"]], "__init__() (interactlayervec method)": [[71, "hippynn.layers.hiplayers.InteractLayerVec.__init__"]], "__init__() (inversesensitivitymodule method)": [[71, "hippynn.layers.hiplayers.InverseSensitivityModule.__init__"]], "__init__() (sensitivitybottleneck method)": [[71, "hippynn.layers.hiplayers.SensitivityBottleneck.__init__"]], "__init__() (sensitivitymodule method)": [[71, "hippynn.layers.hiplayers.SensitivityModule.__init__"]], "forward() (coscutoff method)": [[71, "hippynn.layers.hiplayers.CosCutoff.forward"]], "forward() (gaussiansensitivitymodule method)": [[71, "hippynn.layers.hiplayers.GaussianSensitivityModule.forward"]], "forward() (interactlayer method)": [[71, "hippynn.layers.hiplayers.InteractLayer.forward"]], "forward() (interactlayerquad method)": [[71, "hippynn.layers.hiplayers.InteractLayerQuad.forward"]], "forward() (interactlayervec method)": [[71, "hippynn.layers.hiplayers.InteractLayerVec.forward"]], "forward() (inversesensitivitymodule method)": [[71, "hippynn.layers.hiplayers.InverseSensitivityModule.forward"]], "forward() (sensitivitybottleneck method)": [[71, "hippynn.layers.hiplayers.SensitivityBottleneck.forward"]], "hippynn.layers.hiplayers": [[71, "module-hippynn.layers.hiplayers"]], "regularization_params() (interactlayer method)": [[71, "hippynn.layers.hiplayers.InteractLayer.regularization_params"]], "training (coscutoff attribute)": [[71, "hippynn.layers.hiplayers.CosCutoff.training"]], "training (gaussiansensitivitymodule attribute)": [[71, "hippynn.layers.hiplayers.GaussianSensitivityModule.training"]], "training (interactlayer attribute)": [[71, "hippynn.layers.hiplayers.InteractLayer.training"]], "training (interactlayerquad attribute)": [[71, "hippynn.layers.hiplayers.InteractLayerQuad.training"]], "training (interactlayervec attribute)": [[71, "hippynn.layers.hiplayers.InteractLayerVec.training"]], "training (inversesensitivitymodule attribute)": [[71, "hippynn.layers.hiplayers.InverseSensitivityModule.training"]], "training (sensitivitybottleneck attribute)": [[71, "hippynn.layers.hiplayers.SensitivityBottleneck.training"]], "training (sensitivitymodule attribute)": [[71, "hippynn.layers.hiplayers.SensitivityModule.training"]], "warn_if_under() (in module hippynn.layers.hiplayers)": [[71, "hippynn.layers.hiplayers.warn_if_under"]], "atomdeindexer (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.AtomDeIndexer"]], "atomreindexer (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.AtomReIndexer"]], "cellscaleinducer (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.CellScaleInducer"]], "filterbondsoneway (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.FilterBondsOneway"]], "molsummer (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.MolSummer"]], "onehotspecies (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.OneHotSpecies"]], "paddingindexer (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.PaddingIndexer"]], "quadpack (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.QuadPack"]], "quadunpack (class in hippynn.layers.indexers)": [[72, "hippynn.layers.indexers.QuadUnpack"]], "__init__() (cellscaleinducer method)": [[72, "hippynn.layers.indexers.CellScaleInducer.__init__"]], "__init__() (onehotspecies method)": [[72, "hippynn.layers.indexers.OneHotSpecies.__init__"]], "__init__() (quadpack method)": [[72, "hippynn.layers.indexers.QuadPack.__init__"]], "__init__() (quadunpack method)": [[72, "hippynn.layers.indexers.QuadUnpack.__init__"]], "forward() (atomdeindexer method)": [[72, "hippynn.layers.indexers.AtomDeIndexer.forward"]], "forward() (atomreindexer method)": [[72, "hippynn.layers.indexers.AtomReIndexer.forward"]], "forward() (cellscaleinducer method)": [[72, "hippynn.layers.indexers.CellScaleInducer.forward"]], "forward() (filterbondsoneway method)": [[72, "hippynn.layers.indexers.FilterBondsOneway.forward"]], "forward() (molsummer method)": [[72, "hippynn.layers.indexers.MolSummer.forward"]], "forward() (onehotspecies method)": [[72, "hippynn.layers.indexers.OneHotSpecies.forward"]], "forward() (paddingindexer method)": [[72, "hippynn.layers.indexers.PaddingIndexer.forward"]], "forward() (quadpack method)": [[72, "hippynn.layers.indexers.QuadPack.forward"]], "forward() (quadunpack method)": [[72, "hippynn.layers.indexers.QuadUnpack.forward"]], "hippynn.layers.indexers": [[72, "module-hippynn.layers.indexers"]], "training (atomdeindexer attribute)": [[72, "hippynn.layers.indexers.AtomDeIndexer.training"]], "training (atomreindexer attribute)": [[72, "hippynn.layers.indexers.AtomReIndexer.training"]], "training (cellscaleinducer attribute)": [[72, "hippynn.layers.indexers.CellScaleInducer.training"]], "training (filterbondsoneway attribute)": [[72, "hippynn.layers.indexers.FilterBondsOneway.training"]], "training (molsummer attribute)": [[72, "hippynn.layers.indexers.MolSummer.training"]], "training (onehotspecies attribute)": [[72, "hippynn.layers.indexers.OneHotSpecies.training"]], "training (paddingindexer attribute)": [[72, "hippynn.layers.indexers.PaddingIndexer.training"]], "training (quadpack attribute)": [[72, "hippynn.layers.indexers.QuadPack.training"]], "training (quadunpack attribute)": [[72, "hippynn.layers.indexers.QuadUnpack.training"]], "hippynn.layers.pairs": [[73, "module-hippynn.layers.pairs"]], "mindistmodule (class in hippynn.layers.pairs.analysis)": [[74, "hippynn.layers.pairs.analysis.MinDistModule"]], "rdfbins (class in hippynn.layers.pairs.analysis)": [[74, "hippynn.layers.pairs.analysis.RDFBins"]], "bin_info() (rdfbins method)": [[74, "hippynn.layers.pairs.analysis.RDFBins.bin_info"]], "forward() (mindistmodule method)": [[74, "hippynn.layers.pairs.analysis.MinDistModule.forward"]], "forward() (rdfbins method)": [[74, "hippynn.layers.pairs.analysis.RDFBins.forward"]], "hippynn.layers.pairs.analysis": [[74, "module-hippynn.layers.pairs.analysis"]], "min_dist_info() (in module hippynn.layers.pairs.analysis)": [[74, "hippynn.layers.pairs.analysis.min_dist_info"]], "training (mindistmodule attribute)": [[74, "hippynn.layers.pairs.analysis.MinDistModule.training"]], "training (rdfbins attribute)": [[74, "hippynn.layers.pairs.analysis.RDFBins.training"]], "npneighbors (class in hippynn.layers.pairs.dispatch)": [[75, "hippynn.layers.pairs.dispatch.NPNeighbors"]], "torchneighbors (class in hippynn.layers.pairs.dispatch)": [[75, "hippynn.layers.pairs.dispatch.TorchNeighbors"]], "compute_one() (npneighbors method)": [[75, "hippynn.layers.pairs.dispatch.NPNeighbors.compute_one"]], "compute_one() (torchneighbors method)": [[75, "hippynn.layers.pairs.dispatch.TorchNeighbors.compute_one"]], "hippynn.layers.pairs.dispatch": [[75, "module-hippynn.layers.pairs.dispatch"]], "neighbor_list_np() (in module hippynn.layers.pairs.dispatch)": [[75, "hippynn.layers.pairs.dispatch.neighbor_list_np"]], "training (npneighbors attribute)": [[75, "hippynn.layers.pairs.dispatch.NPNeighbors.training"]], "training (torchneighbors attribute)": [[75, "hippynn.layers.pairs.dispatch.TorchNeighbors.training"]], "wrap_points_np() (in module hippynn.layers.pairs.dispatch)": [[75, "hippynn.layers.pairs.dispatch.wrap_points_np"]], "externalneighbors (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.ExternalNeighbors"]], "molpairsummer (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.MolPairSummer"]], "paddedneighmodule (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.PaddedNeighModule"]], "paircacher (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.PairCacher"]], "pairdeindexer (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.PairDeIndexer"]], "pairreindexer (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.PairReIndexer"]], "pairuncacher (class in hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.PairUncacher"]], "forward() (externalneighbors method)": [[76, "hippynn.layers.pairs.indexing.ExternalNeighbors.forward"]], "forward() (molpairsummer method)": [[76, "hippynn.layers.pairs.indexing.MolPairSummer.forward"]], "forward() (paddedneighmodule method)": [[76, "hippynn.layers.pairs.indexing.PaddedNeighModule.forward"]], "forward() (paircacher method)": [[76, "hippynn.layers.pairs.indexing.PairCacher.forward"]], "forward() (pairdeindexer method)": [[76, "hippynn.layers.pairs.indexing.PairDeIndexer.forward"]], "forward() (pairreindexer method)": [[76, "hippynn.layers.pairs.indexing.PairReIndexer.forward"]], "forward() (pairuncacher method)": [[76, "hippynn.layers.pairs.indexing.PairUncacher.forward"]], "hippynn.layers.pairs.indexing": [[76, "module-hippynn.layers.pairs.indexing"]], "padded_neighlist() (in module hippynn.layers.pairs.indexing)": [[76, "hippynn.layers.pairs.indexing.padded_neighlist"]], "set_images() (paircacher method)": [[76, "hippynn.layers.pairs.indexing.PairCacher.set_images"]], "set_images() (pairuncacher method)": [[76, "hippynn.layers.pairs.indexing.PairUncacher.set_images"]], "training (externalneighbors attribute)": [[76, "hippynn.layers.pairs.indexing.ExternalNeighbors.training"]], "training (molpairsummer attribute)": [[76, "hippynn.layers.pairs.indexing.MolPairSummer.training"]], "training (paddedneighmodule attribute)": [[76, "hippynn.layers.pairs.indexing.PaddedNeighModule.training"]], "training (paircacher attribute)": [[76, "hippynn.layers.pairs.indexing.PairCacher.training"]], "training (pairdeindexer attribute)": [[76, "hippynn.layers.pairs.indexing.PairDeIndexer.training"]], "training (pairreindexer attribute)": [[76, "hippynn.layers.pairs.indexing.PairReIndexer.training"]], "training (pairuncacher attribute)": [[76, "hippynn.layers.pairs.indexing.PairUncacher.training"]], "openpairindexer (class in hippynn.layers.pairs.open)": [[77, "hippynn.layers.pairs.open.OpenPairIndexer"]], "forward() (openpairindexer method)": [[77, "hippynn.layers.pairs.open.OpenPairIndexer.forward"]], "hippynn.layers.pairs.open": [[77, "module-hippynn.layers.pairs.open"]], "training (openpairindexer attribute)": [[77, "hippynn.layers.pairs.open.OpenPairIndexer.training"]], "periodicpairindexer (class in hippynn.layers.pairs.periodic)": [[78, "hippynn.layers.pairs.periodic.PeriodicPairIndexer"]], "staticimageperiodicpairindexer (class in hippynn.layers.pairs.periodic)": [[78, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer"]], "__init__() (staticimageperiodicpairindexer method)": [[78, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer.__init__"]], "forward() (periodicpairindexer method)": [[78, "hippynn.layers.pairs.periodic.PeriodicPairIndexer.forward"]], "forward() (staticimageperiodicpairindexer method)": [[78, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer.forward"]], "hippynn.layers.pairs.periodic": [[78, "module-hippynn.layers.pairs.periodic"]], "training (periodicpairindexer attribute)": [[78, "hippynn.layers.pairs.periodic.PeriodicPairIndexer.training"]], "training (staticimageperiodicpairindexer attribute)": [[78, "hippynn.layers.pairs.periodic.StaticImagePeriodicPairIndexer.training"]], "alphascreening (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.AlphaScreening"]], "coulombenergy (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.CoulombEnergy"]], "dipole (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.Dipole"]], "ewaldrealspacescreening (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.EwaldRealSpaceScreening"]], "gradient (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.Gradient"]], "localdampingcosine (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.LocalDampingCosine"]], "peratom (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.PerAtom"]], "qscreening (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.QScreening"]], "quadrupole (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.Quadrupole"]], "screenedcoulombenergy (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.ScreenedCoulombEnergy"]], "stressforce (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.StressForce"]], "vecmag (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.VecMag"]], "wolfscreening (class in hippynn.layers.physics)": [[79, "hippynn.layers.physics.WolfScreening"]], "__init__() (alphascreening method)": [[79, "hippynn.layers.physics.AlphaScreening.__init__"]], "__init__() (coulombenergy method)": [[79, "hippynn.layers.physics.CoulombEnergy.__init__"]], "__init__() (dipole method)": [[79, "hippynn.layers.physics.Dipole.__init__"]], "__init__() (ewaldrealspacescreening method)": [[79, "hippynn.layers.physics.EwaldRealSpaceScreening.__init__"]], "__init__() (gradient method)": [[79, "hippynn.layers.physics.Gradient.__init__"]], "__init__() (localdampingcosine method)": [[79, "hippynn.layers.physics.LocalDampingCosine.__init__"]], "__init__() (qscreening method)": [[79, "hippynn.layers.physics.QScreening.__init__"]], "__init__() (quadrupole method)": [[79, "hippynn.layers.physics.Quadrupole.__init__"]], "__init__() (screenedcoulombenergy method)": [[79, "hippynn.layers.physics.ScreenedCoulombEnergy.__init__"]], "__init__() (stressforce method)": [[79, "hippynn.layers.physics.StressForce.__init__"]], "__init__() (wolfscreening method)": [[79, "hippynn.layers.physics.WolfScreening.__init__"]], "forward() (coulombenergy method)": [[79, "hippynn.layers.physics.CoulombEnergy.forward"]], "forward() (dipole method)": [[79, "hippynn.layers.physics.Dipole.forward"]], "forward() (ewaldrealspacescreening method)": [[79, "hippynn.layers.physics.EwaldRealSpaceScreening.forward"]], "forward() (gradient method)": [[79, "hippynn.layers.physics.Gradient.forward"]], "forward() (localdampingcosine method)": [[79, "hippynn.layers.physics.LocalDampingCosine.forward"]], "forward() (peratom method)": [[79, "hippynn.layers.physics.PerAtom.forward"]], "forward() (qscreening method)": [[79, "hippynn.layers.physics.QScreening.forward"]], "forward() (quadrupole method)": [[79, "hippynn.layers.physics.Quadrupole.forward"]], "forward() (screenedcoulombenergy method)": [[79, "hippynn.layers.physics.ScreenedCoulombEnergy.forward"]], "forward() (stressforce method)": [[79, "hippynn.layers.physics.StressForce.forward"]], "forward() (vecmag method)": [[79, "hippynn.layers.physics.VecMag.forward"]], "forward() (wolfscreening method)": [[79, "hippynn.layers.physics.WolfScreening.forward"]], "hippynn.layers.physics": [[79, "module-hippynn.layers.physics"]], "p_value (qscreening property)": [[79, "hippynn.layers.physics.QScreening.p_value"]], "training (alphascreening attribute)": [[79, "hippynn.layers.physics.AlphaScreening.training"]], "training (coulombenergy attribute)": [[79, "hippynn.layers.physics.CoulombEnergy.training"]], "training (dipole attribute)": [[79, "hippynn.layers.physics.Dipole.training"]], "training (ewaldrealspacescreening attribute)": [[79, "hippynn.layers.physics.EwaldRealSpaceScreening.training"]], "training (gradient attribute)": [[79, "hippynn.layers.physics.Gradient.training"]], "training (localdampingcosine attribute)": [[79, "hippynn.layers.physics.LocalDampingCosine.training"]], "training (peratom attribute)": [[79, "hippynn.layers.physics.PerAtom.training"]], "training (qscreening attribute)": [[79, "hippynn.layers.physics.QScreening.training"]], "training (quadrupole attribute)": [[79, "hippynn.layers.physics.Quadrupole.training"]], "training (screenedcoulombenergy attribute)": [[79, "hippynn.layers.physics.ScreenedCoulombEnergy.training"]], "training (stressforce attribute)": [[79, "hippynn.layers.physics.StressForce.training"]], "training (vecmag attribute)": [[79, "hippynn.layers.physics.VecMag.training"]], "training (wolfscreening attribute)": [[79, "hippynn.layers.physics.WolfScreening.training"]], "lpreg (class in hippynn.layers.regularization)": [[80, "hippynn.layers.regularization.LPReg"]], "__init__() (lpreg method)": [[80, "hippynn.layers.regularization.LPReg.__init__"]], "forward() (lpreg method)": [[80, "hippynn.layers.regularization.LPReg.forward"]], "hippynn.layers.regularization": [[80, "module-hippynn.layers.regularization"]], "training (lpreg attribute)": [[80, "hippynn.layers.regularization.LPReg.training"]], "hbondsymmetric (class in hippynn.layers.targets)": [[81, "hippynn.layers.targets.HBondSymmetric"]], "hcharge (class in hippynn.layers.targets)": [[81, "hippynn.layers.targets.HCharge"]], "henergy (class in hippynn.layers.targets)": [[81, "hippynn.layers.targets.HEnergy"]], "localchargeenergy (class in hippynn.layers.targets)": [[81, "hippynn.layers.targets.LocalChargeEnergy"]], "localenergy (class in hippynn.layers.targets)": [[81, "hippynn.layers.targets.LocalEnergy"]], "__init__() (hbondsymmetric method)": [[81, "hippynn.layers.targets.HBondSymmetric.__init__"]], "__init__() (hcharge method)": [[81, "hippynn.layers.targets.HCharge.__init__"]], "__init__() (henergy method)": [[81, "hippynn.layers.targets.HEnergy.__init__"]], "__init__() (localenergy method)": [[81, "hippynn.layers.targets.LocalEnergy.__init__"]], "forward() (hbondsymmetric method)": [[81, "hippynn.layers.targets.HBondSymmetric.forward"]], "forward() (hcharge method)": [[81, "hippynn.layers.targets.HCharge.forward"]], "forward() (henergy method)": [[81, "hippynn.layers.targets.HEnergy.forward"]], "forward() (localchargeenergy method)": [[81, "hippynn.layers.targets.LocalChargeEnergy.forward"]], "forward() (localenergy method)": [[81, "hippynn.layers.targets.LocalEnergy.forward"]], "hippynn.layers.targets": [[81, "module-hippynn.layers.targets"]], "training (hbondsymmetric attribute)": [[81, "hippynn.layers.targets.HBondSymmetric.training"]], "training (hcharge attribute)": [[81, "hippynn.layers.targets.HCharge.training"]], "training (henergy attribute)": [[81, "hippynn.layers.targets.HEnergy.training"]], "training (localchargeenergy attribute)": [[81, "hippynn.layers.targets.LocalChargeEnergy.training"]], "training (localenergy attribute)": [[81, "hippynn.layers.targets.LocalEnergy.training"]], "resnetwrapper (class in hippynn.layers.transform)": [[82, "hippynn.layers.transform.ResNetWrapper"]], "__init__() (resnetwrapper method)": [[82, "hippynn.layers.transform.ResNetWrapper.__init__"]], "forward() (resnetwrapper method)": [[82, "hippynn.layers.transform.ResNetWrapper.forward"]], "hippynn.layers.transform": [[82, "module-hippynn.layers.transform"]], "regularization_params() (resnetwrapper method)": [[82, "hippynn.layers.transform.ResNetWrapper.regularization_params"]], "training (resnetwrapper attribute)": [[82, "hippynn.layers.transform.ResNetWrapper.training"]], "hippynn.networks": [[83, "module-hippynn.networks"]], "hipnn (class in hippynn.networks.hipnn)": [[84, "hippynn.networks.hipnn.Hipnn"]], "hipnnquad (class in hippynn.networks.hipnn)": [[84, "hippynn.networks.hipnn.HipnnQuad"]], "hipnnvec (class in hippynn.networks.hipnn)": [[84, "hippynn.networks.hipnn.HipnnVec"]], "compute_hipnn_e0() (in module hippynn.networks.hipnn)": [[84, "hippynn.networks.hipnn.compute_hipnn_e0"]], "forward() (hipnn method)": [[84, "hippynn.networks.hipnn.Hipnn.forward"]], "forward() (hipnnvec method)": [[84, "hippynn.networks.hipnn.HipnnVec.forward"]], "hippynn.networks.hipnn": [[84, "module-hippynn.networks.hipnn"]], "interaction_layers (hipnn property)": [[84, "hippynn.networks.hipnn.Hipnn.interaction_layers"]], "regularization_params() (hipnn method)": [[84, "hippynn.networks.hipnn.Hipnn.regularization_params"]], "resnet (hipnnquad attribute)": [[84, "hippynn.networks.hipnn.HipnnQuad.resnet"]], "resnet (hipnnvec attribute)": [[84, "hippynn.networks.hipnn.HipnnVec.resnet"]], "sensitivity_layers (hipnn property)": [[84, "hippynn.networks.hipnn.Hipnn.sensitivity_layers"]], "training (hipnn attribute)": [[84, "hippynn.networks.hipnn.Hipnn.training"]], "training (hipnnquad attribute)": [[84, "hippynn.networks.hipnn.HipnnQuad.training"]], "training (hipnnvec attribute)": [[84, "hippynn.networks.hipnn.HipnnVec.training"]], "hippynn.plotting": [[85, "module-hippynn.plotting"]], "plotmaker (class in hippynn.plotting.plotmaker)": [[86, "hippynn.plotting.plotmaker.PlotMaker"]], "__init__() (plotmaker method)": [[86, "hippynn.plotting.plotmaker.PlotMaker.__init__"]], "assemble_module() (plotmaker method)": [[86, "hippynn.plotting.plotmaker.PlotMaker.assemble_module"]], "hippynn.plotting.plotmaker": [[86, "module-hippynn.plotting.plotmaker"]], "make_full_location() (plotmaker method)": [[86, "hippynn.plotting.plotmaker.PlotMaker.make_full_location"]], "make_plots() (plotmaker method)": [[86, "hippynn.plotting.plotmaker.PlotMaker.make_plots"]], "plot_phase() (plotmaker method)": [[86, "hippynn.plotting.plotmaker.PlotMaker.plot_phase"]], "required_nodes (plotmaker property)": [[86, "hippynn.plotting.plotmaker.PlotMaker.required_nodes"]], "composedplotter (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.ComposedPlotter"]], "hierarchicalityplot (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.HierarchicalityPlot"]], "hist1d (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.Hist1D"]], "hist1dcomp (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.Hist1DComp"]], "hist2d (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.Hist2D"]], "interactionplot (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.InteractionPlot"]], "plotter (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.Plotter"]], "sensitivityplot (class in hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.SensitivityPlot"]], "__init__() (composedplotter method)": [[87, "hippynn.plotting.plotters.ComposedPlotter.__init__"]], "__init__() (hierarchicalityplot method)": [[87, "hippynn.plotting.plotters.HierarchicalityPlot.__init__"]], "__init__() (hist1d method)": [[87, "hippynn.plotting.plotters.Hist1D.__init__"]], "__init__() (hist1dcomp method)": [[87, "hippynn.plotting.plotters.Hist1DComp.__init__"]], "__init__() (hist2d method)": [[87, "hippynn.plotting.plotters.Hist2D.__init__"]], "__init__() (interactionplot method)": [[87, "hippynn.plotting.plotters.InteractionPlot.__init__"]], "__init__() (plotter method)": [[87, "hippynn.plotting.plotters.Plotter.__init__"]], "__init__() (sensitivityplot method)": [[87, "hippynn.plotting.plotters.SensitivityPlot.__init__"]], "as_numpy() (in module hippynn.plotting.plotters)": [[87, "hippynn.plotting.plotters.as_numpy"]], "hippynn.plotting.plotters": [[87, "module-hippynn.plotting.plotters"]], "make_plot() (plotter method)": [[87, "hippynn.plotting.plotters.Plotter.make_plot"]], "norm (hist2d property)": [[87, "hippynn.plotting.plotters.Hist2D.norm"]], "plt_fn() (composedplotter method)": [[87, "hippynn.plotting.plotters.ComposedPlotter.plt_fn"]], "plt_fn() (hierarchicalityplot method)": [[87, "hippynn.plotting.plotters.HierarchicalityPlot.plt_fn"]], "plt_fn() (hist1d method)": [[87, "hippynn.plotting.plotters.Hist1D.plt_fn"]], "plt_fn() (hist1dcomp method)": [[87, "hippynn.plotting.plotters.Hist1DComp.plt_fn"]], "plt_fn() (hist2d method)": [[87, "hippynn.plotting.plotters.Hist2D.plt_fn"]], "plt_fn() (interactionplot method)": [[87, "hippynn.plotting.plotters.InteractionPlot.plt_fn"]], "plt_fn() (plotter method)": [[87, "hippynn.plotting.plotters.Plotter.plt_fn"]], "plt_fn() (sensitivityplot method)": [[87, "hippynn.plotting.plotters.SensitivityPlot.plt_fn"]], "hippynn.plotting.timeplots": [[88, "module-hippynn.plotting.timeplots"]], "plot_all_over_time() (in module hippynn.plotting.timeplots)": [[88, "hippynn.plotting.timeplots.plot_all_over_time"]], "plot_over_time() (in module hippynn.plotting.timeplots)": [[88, "hippynn.plotting.timeplots.plot_over_time"]], "calculate_min_dists() (in module hippynn.pretraining)": [[89, "hippynn.pretraining.calculate_min_dists"]], "hippynn.pretraining": [[89, "module-hippynn.pretraining"]], "set_e0_values() (in module hippynn.pretraining)": [[89, "hippynn.pretraining.set_e0_values"]], "__init__() (teed_file_output method)": [[90, "hippynn.tools.teed_file_output.__init__"]], "active_directory() (in module hippynn.tools)": [[90, "hippynn.tools.active_directory"]], "arrdict_len() (in module hippynn.tools)": [[90, "hippynn.tools.arrdict_len"]], "device_fallback() (in module hippynn.tools)": [[90, "hippynn.tools.device_fallback"]], "flush() (teed_file_output method)": [[90, "hippynn.tools.teed_file_output.flush"]], "hippynn.tools": [[90, "module-hippynn.tools"]], "isiterable() (in module hippynn.tools)": [[90, "hippynn.tools.isiterable"]], "log_terminal() (in module hippynn.tools)": [[90, "hippynn.tools.log_terminal"]], "np_of_torchdefaultdtype() (in module hippynn.tools)": [[90, "hippynn.tools.np_of_torchdefaultdtype"]], "pad_np_array_to_length_with_zeros() (in module hippynn.tools)": [[90, "hippynn.tools.pad_np_array_to_length_with_zeros"]], "param_print() (in module hippynn.tools)": [[90, "hippynn.tools.param_print"]], "print_lr() (in module hippynn.tools)": [[90, "hippynn.tools.print_lr"]], "progress_bar() (in module hippynn.tools)": [[90, "hippynn.tools.progress_bar"]], "teed_file_output (class in hippynn.tools)": [[90, "hippynn.tools.teed_file_output"]], "write() (teed_file_output method)": [[90, "hippynn.tools.teed_file_output.write"]]}})